{
    "M": {
        "General": {
            "P": [
                "graphType",
                "graphOrientation",
                "invertGraph",
                "view",
                "isR",
                "isChat",
                "isCxplot",
                "isReproducibleResearch",
                "isDataFrame",
                "reproduceTime",
                "overplotPixels",
                "editable",
                "theme",
                "plotStyle",
                "fullTextMeasureCheck",
                "metaData",
                "password"
            ],
            "U": {
                "C": "General properties used in most visualizations",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Graph Metadata": {
            "P": [
                "tags"
            ],
            "U": {
                "C": "General graph metadata properties used in all graphs",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Plot and Panel Area": {
            "P": [],
            "U": {
                "C": "General plot and panel properties used in all graphs",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Plot and Panel Areas": {
            "P": [
                "plotBackgroundColor",
                "plotBackgroundBorderColor",
                "plotBackgroundBorderSize",
                "plotBackgroundBorderLineType",
                "panelBackgroundColor",
                "panelBackgroundBorderColor",
                "panelBackgroundBorderSize",
                "panelBackgroundBorderLineType",
                "backgroundType",
                "backgroundImage",
                "backgroundImageSrc"
            ],
            "U": {}
        },
        "Print": {
            "P": [
                "cacheBase64",
                "printType",
                "printMagnification",
                "printThumbnail",
                "saveFilename"
            ],
            "U": {
                "C": "General print properties used in all graphs",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Transparency": {
            "P": [
                "transparency",
                "transparencyHidden"
            ],
            "U": {}
        },
        "Grey Out": {
            "P": [
                "highlightGreyOut",
                "highlightGreyOutTransparency"
            ],
            "U": {
                "C": "General grey out properties used in all graphs",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "cxplot": {
            "P": [
                "aes",
                "ggplot"
            ],
            "U": {
                "C": "General properties used in cxplot",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Effect": {
            "P": [
                "effect",
                "codeEffectIn",
                "codeEffectOut",
                "customizerEffectIn",
                "customizerEffectOut",
                "datafilterEffectIn",
                "datafilterEffectOut",
                "datatableEffectIn",
                "datatableEffectOut",
                "motionEffectIn",
                "motionEffectOut",
                "remoteEffectIn",
                "remoteEffectOut",
                "toolbarEffectIn",
                "toolbarEffectOut",
                "tooltipDivEffectIn",
                "tooltipDivEffectOut"
            ],
            "U": {
                "C": "Effects for UI widgets",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Gradients": {
            "P": [
                "gradient",
                "gradientType",
                "gradientOrientation"
            ],
            "U": {
                "C": "Properties used to adjust color gradients in all visualizations",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Aspect Ratio, Space and Width": {
            "P": [
                "adjustAspectRatio",
                "fixedAspectRatio",
                "widthFactor",
                "dataPointSize",
                "setPlotX",
                "setPlotY",
                "setPlotLeft",
                "setPlotTop"
            ],
            "U": {
                "C": "Properties used to adjust the aspect ratio, space and width in most visualizations",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Aspect Ratio, Space and width": {
            "P": [
                "percentAspectRatioPlotArea",
                "variableSpace",
                "dataPointSizeScaleFactor"
            ],
            "U": {}
        },
        "Foreground and Background": {
            "P": [
                "foreground",
                "background"
            ],
            "U": {
                "C": "Foreground and Background properties used in all visualizations",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Margins": {
            "P": [
                "margin",
                "marginLeft",
                "marginTop",
                "marginBottom",
                "marginRight"
            ],
            "U": {
                "C": "Margin properties used in most visualizations",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Shadows": {
            "P": [
                "showShadow",
                "showTextShadow",
                "shadowOffsetX",
                "shadowOffsetY",
                "shadowBlur",
                "shadowColor"
            ],
            "U": {
                "C": "Shadow properties used in most visualizations",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Maps": {
            "P": [
                "topoJSON",
                "mapId",
                "mapPropertyId",
                "mapProjection",
                "mapConfig",
                "mapConfigFeatures",
                "mapSmps",
                "hiddenMapFeatures",
                "visibleMapFeatures",
                "mapColor",
                "mapOutlineColor",
                "mapMarkerShape",
                "mapMarkerShapeScaleFactor"
            ],
            "U": {
                "C": "Map properties used in all visualizations",
                "U": [
                    "Map"
                ],
                "L": true
            }
        },
        "Maps Albers": {
            "P": [
                "mapLatitudeOrigin",
                "mapCentralMeridian",
                "mapStandardParallel1",
                "mapStandardParallel2"
            ],
            "U": {
                "C": "Map albers properties used in map visualizations",
                "U": [
                    "Map"
                ],
                "L": true
            }
        },
        "Maps Orthographic": {
            "P": [
                "mapGraticuleShow",
                "mapGraticuleType"
            ],
            "U": {
                "C": "Map orthographic properties used in map visualizations",
                "U": [
                    "Map"
                ],
                "L": true
            }
        },
        "Maps Leaflet": {
            "P": [
                "useLeaflet",
                "leafletAlpha",
                "leafletZoomAlphaColor",
                "leafletTileType"
            ],
            "U": {
                "C": "Map leaflet properties used in map visualizations",
                "U": [
                    "Map"
                ],
                "L": true
            }
        },
        "Text": {
            "P": [
                "fonts",
                "fontsExternal",
                "fontName",
                "fontStyle",
                "fontColor",
                "fontSize",
                "fontScaleFontFactor",
                "align",
                "baseline",
                "maxTextSize",
                "minTextSize",
                "autoScaleFont"
            ],
            "U": {
                "C": "Properties associated with text attributes",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Text Placement": {
            "P": [
                "optimizeTextPosition",
                "optimizeTextPositionStrategy",
                "optimizeTextPositionEnforceBounds",
                "optimizeTextPositionRemoveOverlaps",
                "optimizeTextPositionTemperature",
                "optimizeTextPositionCooling"
            ],
            "U": {
                "C": "Properties associated with text placements attributes",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Titles and Subtitles": {
            "P": [
                "title",
                "subtitle",
                "titleFontStyle",
                "titleColor",
                "titleFontSize",
                "titleScaleFontFactor",
                "titleAlign",
                "titleBaseline",
                "titleRotate",
                "titleMargin",
                "titleBackgroundColor",
                "titleBackgroundBorderColor",
                "titleBackgroundBorderSize",
                "titleBackgroundBorderLineType",
                "subtitleFontStyle",
                "subtitleColor",
                "subtitleFontSize",
                "subtitleScaleFontFactor",
                "subtitleAlign",
                "subtitleBaseline",
                "subtitleRotate",
                "subtitleMargin",
                "subtitleBackgroundColor",
                "subtitleBackgroundBorderColor",
                "subtitleBackgroundBorderSize",
                "subtitleBackgroundBorderLineType"
            ],
            "U": {
                "C": "Properties associated with titles and subtitles",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Citations or References": {
            "P": [
                "citation",
                "citationFontStyle",
                "citationColor",
                "citationFontSize",
                "citationScaleFontFactor",
                "citationAlign",
                "citationBaseline",
                "citationRotate",
                "citationMargin"
            ],
            "U": {
                "C": "Properties associated with citations or references of the plot",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Lines": {
            "P": [
                "dashLength",
                "dotLength",
                "arrowQuadraticFactor",
                "arrowHeadType",
                "arrowHeadSize",
                "arrowHeadAngle",
                "capType",
                "joinType",
                "outlineWidth",
                "lineThickness",
                "adjustBezier"
            ],
            "U": {
                "C": "Properties to adjust Lines",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Colors": {
            "P": [
                "colorScheme",
                "colors",
                "colorSpectrum",
                "colorSpectrumBinned",
                "colorSpectrumBreaks",
                "colorSpectrumZeroValue",
                "oddColor",
                "evenColor",
                "blindnessType"
            ],
            "U": {
                "C": "Properties to adjust Colors",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Shapes": {
            "P": [
                "roundedPolygonRadius",
                "useRoundRectangles"
            ],
            "U": {
                "C": "Properties to adjust Shapes",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Data Point Attributes": {
            "P": [
                "plotStyle",
                "colorBy",
                "colorKey",
                "colorByData",
                "colorLegendTitle",
                "shapeBy",
                "shapeByContinuous",
                "shapeKey",
                "shapeByData",
                "shapeByShape",
                "shapeLegendTitle",
                "sizeBy",
                "sizeByContinuous",
                "sizeKey",
                "sizeByData",
                "sizeLegendTitle",
                "outlineBy",
                "outlineByData",
                "patternBy",
                "patternKey",
                "patternByData",
                "connectBy",
                "connectByNoColor",
                "connectByColor",
                "connectByWidth",
                "connectKey",
                "treemapBy",
                "stackBy",
                "dodgeBy",
                "lineBy",
                "ribbonBy",
                "ribbonByType",
                "motionBy",
                "markerBy",
                "ellipseBy",
                "confidenceBy",
                "ridgeBy",
                "pieBy",
                "pivotBy",
                "colorLabelBy",
                "sizeLabelBy"
            ],
            "U": {
                "C": "General attributes for data points in scatter and one dimensional plots",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "General Attributes": {
            "P": [
                "shapes",
                "sizes",
                "images",
                "patterns",
                "linePatterns"
            ],
            "U": {
                "C": "Properties related to Shapes, Sizes, Images and Patterns",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Samples": {
            "P": [
                "maxSmpStringLen",
                "smpTitle",
                "smpLabelInterval",
                "smpLabelImage",
                "smpLabelImageRound",
                "showSampleNames",
                "highlightSmp",
                "smpHighlightColor",
                "smpTitleFontStyle",
                "smpTitleColor",
                "smpTitleFontSize",
                "smpTitleScaleFontFactor",
                "smpTitleAlign",
                "smpTitleBaseline",
                "smpTitleRotate",
                "smpTitleMargin",
                "smpTextFontStyle",
                "smpTextColor",
                "smpTextFontSize",
                "smpTextScaleFontFactor",
                "smpTextAlign",
                "smpTextBaseline",
                "smpTextRotate",
                "smpTextMargin"
            ],
            "U": {
                "C": "Properties associated with samples",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Variables": {
            "P": [
                "maxVarStringLen",
                "varTitle",
                "varLabelInterval",
                "showVariableNames",
                "highlightVar",
                "varHighlightColor",
                "varTitleFontStyle",
                "varTitleColor",
                "varTitleFontSize",
                "varTitleScaleFontFactor",
                "varTitleAlign",
                "varTitleBaseline",
                "varTitleRotate",
                "varTitleMargin",
                "varTextFontStyle",
                "varTextColor",
                "varTextFontSize",
                "varTextScaleFontFactor",
                "varTextAlign",
                "varTextBaseline",
                "varTextRotate",
                "varTextMargin"
            ],
            "U": {
                "C": "Properties associated with variables",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Bins": {
            "P": [
                "binConfigurations"
            ],
            "U": {
                "C": "Function to bin samples and variables",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "DotLine",
                    "Dotplot",
                    "Heatmap",
                    "Line",
                    "Lollipop",
                    "Pareto",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Overlays": {
            "P": [
                "maxOverlayStringLen",
                "overlaysThickness",
                "smpOverlays",
                "smpOverlayProperties",
                "smpOverlaysLegendColumns",
                "showSmpOverlaysLegend",
                "varOverlays",
                "varOverlayProperties",
                "varOverlaysLegendColumns",
                "showVarOverlaysLegend",
                "overlaysLegendPosition",
                "showOverlays",
                "showNameOverlays",
                "showValueOverlays",
                "overlayTextFontStyle",
                "overlayTextColor",
                "overlayTextFontSize",
                "overlayTextScaleFontFactor",
                "overlayTextAlign",
                "overlayTextBaseline",
                "overlayTextRotate",
                "overlayTextMargin",
                "panelOverlayBackgroundColor",
                "panelOverlayBackgroundBorderColor",
                "panelOverlayBackgroundBorderSize",
                "panelOverlayBackgroundBorderLineType"
            ],
            "U": {
                "C": "Colored boxes to help in the visualization of samples and variables",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "DotLine",
                    "Dotplot",
                    "Heatmap",
                    "Line",
                    "Lollipop",
                    "Pareto",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Legends": {
            "P": [
                "legendInside",
                "legendColumns",
                "legendRows",
                "legendOrder",
                "legendOrderByCols",
                "customLegend",
                "showLegend",
                "showVariableLegend",
                "showSampleLegend",
                "showColorLegend",
                "showShapeLegend",
                "showSizeLegend",
                "showOutlineLegend",
                "showPatternLegend",
                "showConnectLegend",
                "showLineLegend",
                "showColorLabelLegend",
                "showSizeLabelLegend",
                "showColorNodeLegend",
                "showShapeNodeLegend",
                "showSizeNodeLegend",
                "showPatternNodeLegend",
                "showColorEdgeLegend",
                "showSizeEdgeLegend",
                "showLegendTitle",
                "showLegendBorder",
                "legendPosition",
                "legendHorizontalJustification",
                "legendVerticalJustification",
                "legendDirection",
                "legendBackgroundColor",
                "legendBackgroundBorderColor",
                "legendBackgroundBorderSize",
                "legendBackgroundBorderLineType",
                "legendKeyBackgroundColor",
                "legendKeyBackgroundBorderColor",
                "legendKeyBackgroundBorderSize",
                "legendKeyBackgroundBorderLineType",
                "legendKeySize",
                "legendKeyMargin",
                "legendTextFontStyle",
                "legendTextColor",
                "legendTextFontSize",
                "legendTextScaleFontFactor",
                "legendTextAlign",
                "legendTextBaseline",
                "legendTextRotate",
                "legendTextMargin",
                "legendTitleFontStyle",
                "legendTitleColor",
                "legendTitleFontSize",
                "legendTitleScaleFontFactor",
                "legendTitleAlign",
                "legendTitleBaseline",
                "legendTitleRotate",
                "legendTitleMargin"
            ],
            "U": {
                "C": "Legends for variables and samples",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "DotLine",
                    "Dotplot",
                    "Heatmap",
                    "Line",
                    "Lollipop",
                    "Pareto",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Decorations": {
            "P": [
                "decorationsWidth",
                "decorationsHeight",
                "decorationsType",
                "decorations",
                "decorationsColors",
                "decorationsProperties",
                "decorationsClipped",
                "decorationsTransparency",
                "showDecorations",
                "showDecorationsLegend",
                "showDecorationsBorder",
                "decorationsPosition",
                "decorationsBackgroundColor",
                "decorationsBackgroundBorderColor",
                "decorationsBackgroundBorderSize",
                "decorationsBackgroundBorderLineType",
                "decorationsTextFontStyle",
                "decorationsTextColor",
                "decorationsTextFontSize",
                "decorationsTextScaleFontFactor",
                "decorationsTextAlign",
                "decorationsTextBaseline",
                "decorationsTextRotate",
                "decorationsTextMargin",
                "decorationsOnTop",
                "decorationsTransform"
            ],
            "U": {
                "C": "Additional elements added to graphs to increase data understanding",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "CDF",
                    "Contour",
                    "Density",
                    "DotLine",
                    "Dotplot",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Pareto",
                    "QQ",
                    "Quantile",
                    "Ridgeline",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Data": {
            "P": [
                "groupingFactors",
                "summaryType",
                "transposeData",
                "appendNetworkData",
                "dataTextFontStyle",
                "dataTextColor",
                "dataTextFontSize",
                "dataTextScaleFontFactor",
                "dataTextAlign",
                "dataTextBaseline",
                "dataTextRotate",
                "dataTextMargin"
            ],
            "U": {
                "C": "Data related parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Data Context": {
            "P": [
                "asSampleFactors",
                "asVariableFactors",
                "stringSampleFactors",
                "stringVariableFactors",
                "stringNodeAttributes",
                "stringEdgeAttributes"
            ],
            "U": {
                "C": "Data context related parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Data Transformation": {
            "P": [
                "transformData",
                "transformAxis"
            ],
            "U": {
                "C": "Data transformation related parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Data Ratio Reference": {
            "P": [
                "ratioReference",
                "ratioSampleReference",
                "ratioGroupReference",
                "ratioLevelReference"
            ],
            "U": {
                "C": "Data ratio related parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Data Faceting": {
            "P": [
                "segregateSamplesBy",
                "segregateVariablesBy",
                "splitSamplesBy",
                "splitVariablesBy",
                "splitSeparation"
            ],
            "U": {
                "C": "Data faceting related parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Data Time Series": {
            "P": [
                "timeFormat",
                "isGraphTime"
            ],
            "U": {
                "C": "Time series related parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Data Sorting": {
            "P": [
                "sortDir",
                "sortCaseSensitive",
                "sortData",
                "sortOnGrouping",
                "sortIncludeEmpty"
            ],
            "U": {
                "C": "Data sorting related parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Missing Data": {
            "P": [
                "missingDataColor",
                "missingDataValue",
                "nanOmit"
            ],
            "U": {
                "C": "Missing data related parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Error Bars": {
            "P": [
                "showErrorBars",
                "errorBarsType",
                "errorBarsColor",
                "errorBarsThickness",
                "errorBarsWidth",
                "standardDeviationType"
            ],
            "U": {
                "C": "Error bar and confidence intervals related parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Random": {
            "P": [
                "randomSeed",
                "pseudoRandom",
                "randomMethod",
                "randomDataDistribution",
                "randomDataTime",
                "randomDataMin",
                "randomDataMax",
                "randomDataMean",
                "randomDataSigma",
                "randomDataVariables",
                "randomDataSamples",
                "randomDataVariableAnnotations",
                "randomDataSampleAnnotations",
                "randomMissingDataPercentage",
                "randomNetworkReduce",
                "randomNetworkNodes",
                "randomNetworkNodeEdgesMax",
                "randomNetworkAll",
                "randomNetworkLayout"
            ],
            "U": {
                "C": "Properties used to generate random data sets",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Zooming, Panning and Resizing": {
            "P": [
                "zoom",
                "zoomStep",
                "zoomScale",
                "zoomVariablesDisable",
                "zoomSamplesDisable",
                "zoomXDisable",
                "zoomYDisable",
                "zoomDisable",
                "panningX",
                "panningY",
                "panningStep",
                "resizerBackgroundColor"
            ],
            "U": {
                "C": "Parameters associated with zooming, panning and resizing events",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "X-Axis": {
            "P": [
                "xAxis",
                "xAxis2",
                "xAxisCurrent",
                "xAxisShow",
                "xAxis2Show",
                "xAxis2Rotate",
                "setMinX",
                "setMaxX",
                "setMinX2",
                "setMaxX2",
                "xAxisTime",
                "xAxisExact",
                "xAxisSetValues",
                "xAxisSetMinorValues",
                "xAxisTransform",
                "xAxisTransformTicks",
                "xAxisTransformLinearTicks",
                "xAxisCeilValue",
                "xAxisFloorValue",
                "xAxisFactorValue",
                "xAxisTitle",
                "xAxis2Title",
                "xAxisTitleDynamic",
                "xAxisTitleFontStyle",
                "xAxisTitleColor",
                "xAxisTitleFontSize",
                "xAxisTitleScaleFontFactor",
                "xAxisTitleAlign",
                "xAxisTitleBaseline",
                "xAxisTitleRotate",
                "xAxisTitleMargin",
                "xAxisTextFontStyle",
                "xAxisTextColor",
                "xAxisTextFontSize",
                "xAxisTextScaleFontFactor",
                "xAxisTextAlign",
                "xAxisTextBaseline",
                "xAxisTextRotate",
                "xAxisTextMargin",
                "xAxisGridMajorColor",
                "xAxisGridMajorTransparency",
                "xAxisGridMajorWidth",
                "xAxisGridMajorLength",
                "xAxisGridMajorLineType",
                "xAxisGridMajorShow",
                "xAxisGridMinorColor",
                "xAxisGridMinorTransparency",
                "xAxisGridMinorWidth",
                "xAxisGridMinorLength",
                "xAxisGridMinorLineType",
                "xAxisGridMinorShow",
                "xAxisGridMajorShow",
                "xAxisGridMinorShow",
                "xAxisTicksColor",
                "xAxisTicksTransparency",
                "xAxisTicksWidth",
                "xAxisTicksLength",
                "xAxisTicksLineType",
                "xAxisTicksShow",
                "xAxisTickTopColor",
                "xAxisTickTopTransparency",
                "xAxisTickTopWidth",
                "xAxisTickTopLength",
                "xAxisTickTopLineType",
                "xAxisTickTopShow",
                "xAxisTickBottomColor",
                "xAxisTickBottomTransparency",
                "xAxisTickBottomWidth",
                "xAxisTickBottomLength",
                "xAxisTickBottomLineType",
                "xAxisTickBottomShow",
                "xAxisLineTopColor",
                "xAxisLineTopTransparency",
                "xAxisLineTopWidth",
                "xAxisLineTopLength",
                "xAxisLineTopLineType",
                "xAxisLineTopShow",
                "xAxisLineTopShow",
                "xAxisLineBottomColor",
                "xAxisLineBottomTransparency",
                "xAxisLineBottomWidth",
                "xAxisLineBottomLength",
                "xAxisLineBottomLineType",
                "xAxisLineBottomShow",
                "xAxisLineBottomShow",
                "xAxisTickFormat",
                "xAxisTicks",
                "xAxis2TickFormat",
                "xAxis2Ticks",
                "xAxisLogTicksColor",
                "xAxisLogTicksTransparency",
                "xAxisLogTicksWidth",
                "xAxisLogTicksLength",
                "xAxisLogTicksLineType",
                "xAxisLogTicksShow",
                "xAxisMinorTicks",
                "xAxisHistogramShow",
                "xAxisHistogramHeight",
                "xAxisRugShow",
                "xAxisRugHeight",
                "xAxisRugPosition"
            ],
            "U": {
                "C": "X axis parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Y-Axis": {
            "P": [
                "yAxis",
                "yAxisCurrent",
                "yAxisShow",
                "yAxis2Show",
                "yAxis2Rotate",
                "setMinY",
                "setMaxY",
                "yAxisTime",
                "yAxisExact",
                "yAxisSetValues",
                "yAxisSetMinorValues",
                "yAxisTransform",
                "yAxisTransformTicks",
                "yAxisTransformLinearTicks",
                "yAxisCeilValue",
                "yAxisFloorValue",
                "yAxisFactorValue",
                "yAxisTitle",
                "yAxis2Title",
                "yAxisTitleDynamic",
                "yAxisTitleFontStyle",
                "yAxisTitleColor",
                "yAxisTitleFontSize",
                "yAxisTitleScaleFontFactor",
                "yAxisTitleAlign",
                "yAxisTitleBaseline",
                "yAxisTitleRotate",
                "yAxisTitleMargin",
                "yAxisTextFontStyle",
                "yAxisTextColor",
                "yAxisTextFontSize",
                "yAxisTextScaleFontFactor",
                "yAxisTextAlign",
                "yAxisTextBaseline",
                "yAxisTextRotate",
                "yAxisTextMargin",
                "yAxisGridMajorColor",
                "yAxisGridMajorTransparency",
                "yAxisGridMajorWidth",
                "yAxisGridMajorLength",
                "yAxisGridMajorLineType",
                "yAxisGridMajorShow",
                "yAxisGridMinorColor",
                "yAxisGridMinorTransparency",
                "yAxisGridMinorWidth",
                "yAxisGridMinorLength",
                "yAxisGridMinorLineType",
                "yAxisGridMinorShow",
                "yAxisGridMajorShow",
                "yAxisGridMinorShow",
                "yAxisTicksColor",
                "yAxisTicksTransparency",
                "yAxisTicksWidth",
                "yAxisTicksLength",
                "yAxisTicksLineType",
                "yAxisTicksShow",
                "yAxisTickRightColor",
                "yAxisTickRightTransparency",
                "yAxisTickRightWidth",
                "yAxisTickRightLength",
                "yAxisTickRightLineType",
                "yAxisTickRightShow",
                "yAxisTickLeftColor",
                "yAxisTickLeftTransparency",
                "yAxisTickLeftWidth",
                "yAxisTickLeftLength",
                "yAxisTickLeftLineType",
                "yAxisTickLeftShow",
                "yAxisLineRightColor",
                "yAxisLineRightTransparency",
                "yAxisLineRightWidth",
                "yAxisLineRightLength",
                "yAxisLineRightLineType",
                "yAxisLineRightShow",
                "yAxisLineRightShow",
                "yAxisLineLeftColor",
                "yAxisLineLeftTransparency",
                "yAxisLineLeftWidth",
                "yAxisLineLeftLength",
                "yAxisLineLeftLineType",
                "yAxisLineLeftShow",
                "yAxisLineLeftShow",
                "yAxisTickFormat",
                "yAxisTicks",
                "yAxisLogTicksColor",
                "yAxisLogTicksTransparency",
                "yAxisLogTicksWidth",
                "yAxisLogTicksLength",
                "yAxisLogTicksLineType",
                "yAxisLogTicksShow",
                "yAxisMinorTicks",
                "yAxisHistogramShow",
                "yAxisHistogramHeight",
                "yAxisRugShow",
                "yAxisRugHeight",
                "yAxisRugPosition"
            ],
            "U": {
                "C": "Y axes parameters",
                "U": [
                    "Bin",
                    "Binplot",
                    "CDF",
                    "Contour",
                    "Density",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "QQ",
                    "Quantile",
                    "Ridgeline",
                    "Scatter2D",
                    "ScatterBubble2D",
                    "Scatter3D",
                    "Streamgraph"
                ],
                "L": true
            }
        },
        "Z-Axis": {
            "P": [
                "zAxis",
                "zAxisCurrent",
                "zAxisShow",
                "setMinZ",
                "setMaxZ",
                "zAxisTime",
                "zAxisExact",
                "zAxisSetValues",
                "zAxisSetMinorValues",
                "zAxisTransform",
                "zAxisTransformTicks",
                "zAxisTransformLinearTicks",
                "zAxisCeilValue",
                "zAxisFloorValue",
                "zAxisFactorValue",
                "zAxisTitle",
                "zAxis2Title",
                "zAxisTitleDynamic",
                "zAxisTitleFontStyle",
                "zAxisTitleColor",
                "zAxisTitleFontSize",
                "zAxisTitleScaleFontFactor",
                "zAxisTitleAlign",
                "zAxisTitleBaseline",
                "zAxisTitleRotate",
                "zAxisTitleMargin",
                "zAxisTextFontStyle",
                "zAxisTextColor",
                "zAxisTextFontSize",
                "zAxisTextScaleFontFactor",
                "zAxisTextAlign",
                "zAxisTextBaseline",
                "zAxisTextRotate",
                "zAxisTextMargin",
                "zAxisGridMajorColor",
                "zAxisGridMajorTransparency",
                "zAxisGridMajorWidth",
                "zAxisGridMajorLength",
                "zAxisGridMajorLineType",
                "zAxisGridMajorShow",
                "zAxisGridMinorColor",
                "zAxisGridMinorTransparency",
                "zAxisGridMinorWidth",
                "zAxisGridMinorLength",
                "zAxisGridMinorLineType",
                "zAxisGridMinorShow",
                "zAxisGridMajorShow",
                "zAxisGridMinorShow",
                "zAxisTicksColor",
                "zAxisTicksTransparency",
                "zAxisTicksWidth",
                "zAxisTicksLength",
                "zAxisTicksLineType",
                "zAxisTicksShow",
                "zAxisTickFormat",
                "zAxisTicks",
                "zAxisLogTicksColor",
                "zAxisLogTicksTransparency",
                "zAxisLogTicksWidth",
                "zAxisLogTicksLength",
                "zAxisLogTicksLineType",
                "zAxisLogTicksShow"
            ],
            "U": {
                "C": "Z axes parameters",
                "U": [
                    "ScatterBubble2D",
                    "Scatter3D"
                ],
                "L": true
            }
        },
        "R-Axis": {
            "P": [
                "rAxisPercentShow",
                "rAxisLabelOrientation",
                "rAxisCurrent",
                "rAxisShow",
                "rAxisTime",
                "rAxisExact",
                "rAxisSetValues",
                "rAxisSetMinorValues",
                "rAxisTransform",
                "rAxisTransformTicks",
                "rAxisTransformLinearTicks",
                "rAxisCeilValue",
                "rAxisFloorValue",
                "rAxisFactorValue",
                "rAxisTitle",
                "rAxis2Title",
                "rAxisTitleDynamic",
                "rAxisTitleFontStyle",
                "rAxisTitleColor",
                "rAxisTitleFontSize",
                "rAxisTitleScaleFontFactor",
                "rAxisTitleAlign",
                "rAxisTitleBaseline",
                "rAxisTitleRotate",
                "rAxisTitleMargin",
                "rAxisTextFontStyle",
                "rAxisTextColor",
                "rAxisTextFontSize",
                "rAxisTextScaleFontFactor",
                "rAxisTextAlign",
                "rAxisTextBaseline",
                "rAxisTextRotate",
                "rAxisTextMargin",
                "rAxisGridMajorColor",
                "rAxisGridMajorTransparency",
                "rAxisGridMajorWidth",
                "rAxisGridMajorLength",
                "rAxisGridMajorLineType",
                "rAxisGridMajorShow",
                "rAxisGridMinorColor",
                "rAxisGridMinorTransparency",
                "rAxisGridMinorWidth",
                "rAxisGridMinorLength",
                "rAxisGridMinorLineType",
                "rAxisGridMinorShow",
                "rAxisGridMajorShow",
                "rAxisGridMinorShow",
                "rAxisTicksColor",
                "rAxisTicksTransparency",
                "rAxisTicksWidth",
                "rAxisTicksLength",
                "rAxisTicksLineType",
                "rAxisTicksShow",
                "rAxisTickFormat",
                "rAxisTicks",
                "rAxisLogTicksColor",
                "rAxisLogTicksTransparency",
                "rAxisLogTicksWidth",
                "rAxisLogTicksLength",
                "rAxisLogTicksLineType",
                "rAxisLogTicksShow"
            ],
            "U": {
                "C": "R axis parameters",
                "U": [
                    "Circular"
                ],
                "L": true
            }
        },
        "Axis": {
            "P": [
                "axisExtension",
                "axisAlgorithm",
                "axisWilkinsonLoose",
                "axisCoordinate"
            ],
            "U": {
                "C": "General axis parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Plot Area": {
            "P": [],
            "U": {
                "C": "General parameters for the plotting area in one dimensional plots",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "DotLine",
                    "Dotplot",
                    "Gantt",
                    "Heatmap",
                    "Line",
                    "Lollipop",
                    "Meter",
                    "ParallelCoordinates",
                    "Pareto",
                    "Sankey",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Plot area": {
            "P": [
                "guidesColor",
                "guidesTransparency",
                "guidesWidth",
                "guidesLength",
                "guidesLineType",
                "guidesShow",
                "blockContrast",
                "plotByVariable",
                "is3DPlot",
                "showDataValues",
                "binned",
                "binAlignment",
                "jitter",
                "jitterFactor",
                "sina",
                "objectBorderColor",
                "objectColorTransparency",
                "dotplotOutlineThreshold",
                "linesOnGroups"
            ],
            "U": {}
        },
        "Line Graphs": {
            "P": [
                "lineDecoration",
                "lineErrorType",
                "coordinateLineColor",
                "lineType",
                "tension",
                "tensionSegments"
            ],
            "U": {
                "C": "General parameters in line graphs",
                "U": [
                    "Area",
                    "AreaLine",
                    "BarLine",
                    "DotLine",
                    "Line",
                    "ParallelCoordinates",
                    "Pareto",
                    "StackedLine",
                    "StackedPercentLine"
                ],
                "L": true
            }
        },
        "Parallel Coordinates Graphs": {
            "P": [],
            "U": {
                "C": "General parameters in Parallel Coordinates Graphs",
                "U": [
                    "ParallelCoordinates"
                ],
                "L": true
            }
        },
        "Boxplot Graphs": {
            "P": [
                "boxplotOutliersRatio",
                "boxplotOutliersColor",
                "boxplotOutliersBorderColor",
                "boxplotOutliersShape",
                "boxplotWhiskersType",
                "boxplotType",
                "boxplotNotched",
                "boxplotTransparency",
                "boxplotColor",
                "boxplotVarWidth",
                "boxplotCoef",
                "boxplotHingeFunction",
                "showBoxplotOriginalData",
                "boxplotDataPointTransparency",
                "boxplotBorderColor",
                "boxplotMedianColor",
                "boxplotMedianWidth",
                "boxplotMean",
                "boxplotMeanColor",
                "boxplotMeanBorderColor",
                "boxplotConnect",
                "boxplotConnectWidth"
            ],
            "U": {
                "C": "General parameters in Boxplot Graphs",
                "U": [
                    "Boxplot"
                ],
                "L": true
            }
        },
        "Violin Plots": {
            "P": [
                "showViolinBoxplot",
                "violinTrim",
                "violinScale",
                "showBoxplotIfViolin",
                "boxplotWidthRatioIfViolin",
                "violinTransparency",
                "violinColor",
                "violinBorderColor",
                "showViolinQuantiles"
            ],
            "U": {
                "C": "General parameters in Boxplot Graphs",
                "U": [
                    "Boxplot"
                ],
                "L": true
            }
        },
        "Area Graphs": {
            "P": [
                "areaType"
            ],
            "U": {
                "C": "General parameters in area graphs",
                "U": [
                    "Area",
                    "AreaLine"
                ],
                "L": true
            }
        },
        "Bar Graphs": {
            "P": [
                "barType",
                "barPath",
                "barPathTransparency",
                "barPathColor"
            ],
            "U": {
                "C": "General parameters in bar graphs",
                "U": [
                    "Bar",
                    "BarLine",
                    "Lollipop",
                    "Pareto",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Lollipop Graphs": {
            "P": [
                "barLollipopFactor",
                "barLollipopOpen"
            ],
            "U": {
                "C": "General parameters in bar graphs",
                "U": [
                    "Bar"
                ],
                "L": true
            }
        },
        "Swimmer Graphs": {
            "P": [
                "swimHigh",
                "swimStart",
                "swimEnd",
                "swimStatus",
                "swimHighCap"
            ],
            "U": {
                "C": "General parameters in bar graphs",
                "U": [
                    "Bar"
                ],
                "L": false
            }
        },
        "Dotplot Graphs": {
            "P": [
                "dotplotType"
            ],
            "U": {
                "C": "General parameters in dotplot graphs",
                "U": [
                    "Boxplot",
                    "DotLine",
                    "Dotplot",
                    "Violin"
                ],
                "L": true
            }
        },
        "Gantt Charts": {
            "P": [
                "ganttStart",
                "ganttEnd",
                "ganttCompletion",
                "ganttDependency",
                "ganttDependencyEnd",
                "ganttDependencyColor",
                "ganttDependencyThickness",
                "ganttCompletionTransparency"
            ],
            "U": {
                "C": "General parameters in gantt charts",
                "U": [
                    "Gantt"
                ],
                "L": true
            }
        },
        "Meter Graphs": {
            "P": [
                "meterType",
                "meterMin",
                "meterMax",
                "meterStart",
                "meterEnd",
                "meterSegments",
                "meterColors",
                "meterColorScheme",
                "meterVar",
                "meterGroup",
                "meterSummary",
                "meterTopology",
                "meterNeedleColor",
                "meterBackgroundColor",
                "meterThickness"
            ],
            "U": {
                "C": "General parameters in meter graphs",
                "U": [
                    "Meter"
                ],
                "L": true
            }
        },
        "Fish Graphs": {
            "P": [
                "fishParents",
                "fishTimepoints",
                "fishSeparateIndependentClones",
                "fishShape",
                "fishAxis",
                "fishAxisLabels",
                "fishCloneLabels"
            ],
            "U": {
                "C": "General parameters in fish graphs",
                "U": [
                    "Fish"
                ],
                "L": true
            }
        },
        "Sankey Diagrams": {
            "P": [
                "sankeyNodeWidth",
                "sankeyNodePadding",
                "sankeySource",
                "sankeyTarget",
                "sankeyNodesColor",
                "sankeyLinksColor",
                "sankeyOutlineColor",
                "sankeyCoordinateColor",
                "sankeyLabelFontStyle",
                "sankeyLabelColor",
                "sankeyLabelFontSize",
                "sankeyLabelScaleFontFactor",
                "sankeyLabelAlign",
                "sankeyLabelBaseline",
                "sankeyLabelRotate",
                "sankeyLabelMargin",
                "sankeyLabelShow",
                "sankeyTitleFontStyle",
                "sankeyTitleColor",
                "sankeyTitleFontSize",
                "sankeyTitleScaleFontFactor",
                "sankeyTitleAlign",
                "sankeyTitleBaseline",
                "sankeyTitleRotate",
                "sankeyTitleMargin",
                "sankeyTitleShow",
                "sankeyAxes"
            ],
            "U": {
                "C": "General parameters in sankey diagrams",
                "U": [
                    "Sankey"
                ],
                "L": true
            }
        },
        "Hierarchy": {
            "P": [
                "hierarchy",
                "hierarchyVar"
            ],
            "U": {
                "C": "General parameters to build hierarchy for circular (sunburst) trees and bubbles graphs",
                "U": [
                    "Bubble",
                    "Circular",
                    "Tree",
                    "Treemap"
                ],
                "L": true
            }
        },
        "Trees": {
            "P": [
                "treeLinkColor",
                "treeNodeOutlineColor",
                "treeLinkWidth",
                "treeCircular",
                "treeInverted"
            ],
            "U": {
                "C": "General parameters in trees",
                "U": [
                    "Tree"
                ],
                "L": true
            }
        },
        "Motion Charts": {
            "P": [
                "motionWidth",
                "motionCurrentFontStyle",
                "motionCurrentColor",
                "motionCurrentFontSize",
                "motionCurrentScaleFontFactor",
                "motionCurrentAlign",
                "motionCurrentBaseline",
                "motionCurrentRotate",
                "motionCurrentMargin"
            ],
            "U": {
                "C": "General parameters in scatter plots",
                "U": [
                    "Bin",
                    "Binplot",
                    "CDF",
                    "Contour",
                    "Density",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "QQ",
                    "Quantile",
                    "Ridgeline",
                    "Scatter2D",
                    "ScatterBubble2D",
                    "Streamgraph"
                ],
                "L": true
            }
        },
        "HTML Widgets": {
            "P": [
                "htmlWidget",
                "htmlWidgetType",
                "htmlWidgetHeight"
            ],
            "U": {
                "C": "General parameters for filtering with external HTML widgets",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Scatter Plots": {
            "P": [
                "scatterType",
                "scatterContext",
                "scatterLineAlpha",
                "scatterPointAlpha",
                "groupingFactorWindow",
                "functionColor",
                "cXscatterColor",
                "showDataLabels",
                "isDataLabels",
                "isDataLabelsBackgroundColor",
                "dataLabelBackgroundColor",
                "dataLabelBackgroundBorderColor",
                "dataLabelBackgroundBorderSize",
                "dataLabelBackgroundBorderLineType",
                "scatterAxesEqual",
                "scatterOutlineThreshold"
            ],
            "U": {
                "C": "General parameters in scatter plots",
                "U": [
                    "Bin",
                    "Binplot",
                    "CDF",
                    "Contour",
                    "Density",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "QQ",
                    "Quantile",
                    "Ridgeline",
                    "Scatter2D",
                    "ScatterBubble2D",
                    "Scatter3D",
                    "Streamgraph"
                ],
                "L": true
            }
        },
        "Stream Plots": {
            "P": [
                "scatterStreamType",
                "scatterStreamBandwidth",
                "scatterStreamNumber",
                "scatterStreamExtraSpan",
                "scatterStreamTrueRange",
                "scatterStreamWiggles"
            ],
            "U": {
                "C": "General parameters in scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Visium Plots": {
            "P": [
                "visiumFlip",
                "visiumPanning",
                "visiumFixedAspectRatio"
            ],
            "U": {
                "C": "General parameters in scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Manhattan Plots": {
            "P": [
                "chromosomeLengths",
                "armLengths",
                "manhattanMarkerChromosomeNumber",
                "manhattanMarkerPosition",
                "manhattanMarkerLogPValue",
                "manhattanCNV",
                "manhattanRangeStart",
                "manhattanRangeEnd",
                "showmanhattanRangeMiddle",
                "manhattanRangeLineWidth",
                "manhattanColors",
                "manhattanContrastColor"
            ],
            "U": {
                "C": "General parameters in scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Data Selection": {
            "P": [
                "selectionMode",
                "selectionColor",
                "selectionMetadata",
                "selectedDataPoints"
            ],
            "U": {
                "C": "Parameters used to select data in all visualizations",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Contours": {
            "P": [
                "isContour",
                "contourFilled",
                "contourFilledTransparency",
                "showContourBands",
                "contourBandsColor",
                "contourLevelWidth",
                "contourLevelNumber",
                "contourStat",
                "contourType",
                "contourLevels",
                "showContourLevel",
                "showContourDataPoints",
                "contourDataPointsColor",
                "contourColorScheme"
            ],
            "U": {
                "C": "Parameters used to create contours in one and two dimensional plots",
                "U": [
                    "Pareto",
                    "Heatmap",
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Histograms": {
            "P": [
                "showHistogram",
                "histogramRight",
                "histogramLowest",
                "histogramBins",
                "histogramBreaks",
                "histogramBinWidth",
                "histogramType",
                "showHistogramDensity",
                "showHistogramPath",
                "showFilledHistogramPath",
                "histogramPathFillTransparency",
                "histogramPathColor",
                "histogramPathWidth",
                "showFilledHistogramDensity",
                "histogramDensityFillTransparency",
                "showHistogramDataPoints",
                "showHistogramQuantiles",
                "showHistogramMedian",
                "histogramMedianLineType",
                "showHistogramBars",
                "histogramSizeEstimator",
                "histogramStat",
                "histogramAsDotplot",
                "histogramDotplotColor",
                "histogramDotplotBorderColor",
                "histogramDotplotBorderSize",
                "histogramDotplotBorderLineType",
                "histogramStackRatio",
                "histogramStackDir"
            ],
            "U": {
                "C": "Parameters used to create histograms in 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Density Plots": {
            "P": [
                "showScatterDensity",
                "densityKernel",
                "densityPosition",
                "bandwidthRule",
                "bandwidthCut",
                "bandwidthAdjust"
            ],
            "U": {
                "C": "Parameters used to create density plots in 1d and 2d scatter plots",
                "U": [
                    "Boxplot",
                    "Density",
                    "Histogram",
                    "Ridgeline",
                    "Scatter2D",
                    "Violin"
                ],
                "L": true
            }
        },
        "Ridgeline Plots": {
            "P": [
                "ridgelineScale",
                "ridgelineViolin"
            ],
            "U": {
                "C": "Parameters used to create ridgeline plots in 1d and 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Fit Lines": {
            "P": [
                "fitLineColor",
                "fitLineTransparency",
                "fitLineWidth",
                "fitLineLength",
                "fitLineType",
                "fitLineShow"
            ],
            "U": {
                "C": "Parameters used to create regression, loess and quantiles lines in 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Confidence Intervals": {
            "P": [
                "confidenceIntervalColor",
                "showConfidenceIntervals",
                "confidenceLevel",
                "confidenceIntervalColorCoordinate"
            ],
            "U": {
                "C": "Parameters used to create regression, loess and quantiles confidence intervals in 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Regression": {
            "P": [
                "showRegressionFit",
                "showRegressionFitEquation",
                "regressionFitEquationPosition",
                "showRegressionFullRange",
                "regressionType",
                "regressionOrder"
            ],
            "U": {
                "C": "Parameters used to create regression lines in 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Loess": {
            "P": [
                "showLoessFit",
                "loessDegree",
                "loessSteps",
                "loessBandwidth",
                "loessCell",
                "loessSpan",
                "loessNormalize",
                "loessFamily",
                "loessSurface",
                "loessStatistics"
            ],
            "U": {
                "C": "Parameters used to create smooth lines in 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Kaplan Meier Plots": {
            "P": [
                "showKMConfidenceIntervals",
                "showKMMedianSurvivalTime",
                "kmConfidenceLevel",
                "kmConfidenceIntervalType",
                "kmInvertCensored",
                "kmCensoredRug",
                "kmRiskTable",
                "kmPvalue",
                "kmTime",
                "kmCxplot",
                "kmColors"
            ],
            "U": {
                "C": "Parameters used to create kaplan meier curves in 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Quantile Regression Plots": {
            "P": [
                "quantiles",
                "showQuantileRegressionFit"
            ],
            "U": {
                "C": "Parameters used to create Quantile Regression plots in 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "Bin Plots": {
            "P": [
                "binplotBins",
                "binplotBinWidth",
                "binplotDrop",
                "binplotShape",
                "binplotColorScheme"
            ],
            "U": {
                "C": "Parameters used to create bin plots in 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "DOE": {
            "P": [
                "maxDOENumber",
                "includeDOE",
                "autoexpandDOE",
                "extendedDOE",
                "asDOE"
            ],
            "U": {
                "C": "Parameters used to create graphs with meta data",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Scatter Plot Matrix": {
            "P": [
                "scatterPlotMatrix",
                "scatterPlotMatrixType",
                "showScatterPlotMatrixLabels"
            ],
            "U": {
                "C": "Parameters used to create a matrix of 2d scatter plots",
                "U": [
                    "Scatter2D"
                ],
                "L": true
            }
        },
        "3D Attributes": {
            "P": [
                "xRotate",
                "yRotate",
                "zRotate",
                "x3DRatio",
                "y3DRatio",
                "z3DRatio",
                "show3DGrid",
                "rotationSensitivity",
                "rotationStep",
                "perspectiveFactor",
                "outline3DColor"
            ],
            "U": {
                "C": "General parameters in 3d scatter plots and networks",
                "U": [
                    "Bar",
                    "Network",
                    "Scatter3D"
                ],
                "L": true
            }
        },
        "Heatmap Graphs": {
            "P": [
                "heatmapAutoAdjust",
                "heatmapCellBox",
                "heatmapCellBoxColor",
                "heatmapCellBoxWidth",
                "heatmapCellBoxColorHighlight",
                "heatmapCellBoxHighlightWidth",
                "varTitleLabelPosition",
                "smpTitleLabelPosition",
                "heatmapType",
                "heatmapCollapse"
            ],
            "U": {
                "C": "General parameters for heatmaps",
                "U": [
                    "Heatmap"
                ],
                "L": true
            }
        },
        "Heatmap Color Indicators": {
            "P": [
                "showHeatmapIndicator",
                "heatmapIndicatorHeight",
                "heatmapIndicatorWidth",
                "adjustAspectRatioHeatmapIndicator",
                "heatmapIndicatorPosition",
                "heatmapIndicatorBeforeOverlays",
                "heatmapIndicatorHistogram",
                "heatmapIndicatorHistogramColor"
            ],
            "U": {
                "C": "General parameters for heatmap color indicators",
                "U": [
                    "Heatmap"
                ],
                "L": true
            }
        },
        "Oncoprint Graphs": {
            "P": [
                "oncoprintCNA",
                "oncoprintMUT",
                "oncoprintHeatmapSwitch",
                "oncoprintNoAlterations",
                "oncoprintColSummary",
                "oncoprintRowSummary",
                "showHeatmapOncoprint",
                "oncoprintHeatmapPosition"
            ],
            "U": {
                "C": "General parameters for oncoprints",
                "U": [
                    "Heatmap"
                ],
                "L": true
            }
        },
        "UpSet Plots": {
            "P": [
                "nUpSets",
                "nUpSetIntercepts",
                "upSetSets",
                "upSetIntercepts",
                "upsetShadeColor",
                "upsetShadeAlpha",
                "upsetMatrixDotAlpha",
                "upsetMatrixColor",
                "upsetMainBarColor",
                "upsetSetsBarColor",
                "upsetPointSizeFactor",
                "upsetLineSizeFactor",
                "upsetMatrixPlotBarRatio"
            ],
            "U": {
                "C": "General parameters for upset",
                "U": [
                    "Heatmap"
                ],
                "L": true
            }
        },
        "Treemap Graphs": {
            "P": [
                "treemapBorderWidth",
                "treemapBorderColor"
            ],
            "U": {
                "C": "General parameters for treemaps",
                "U": [
                    "Treemap"
                ],
                "L": true
            }
        },
        "Correlation Graphs": {
            "P": [
                "correlationAxis",
                "correlationAnchorLegend",
                "correlationAnchorLegendAlignWidth",
                "correlationLabelInterval",
                "correlationType"
            ],
            "U": {
                "C": "General parameters for correlation",
                "U": [
                    "Correlation"
                ],
                "L": true
            }
        },
        "Dendrograms": {
            "P": [
                "showVarDendrogram",
                "varDendrogramUseHeight",
                "varDendrogramHang",
                "varDendrogramNewick",
                "varDendrogramPosition",
                "colorVarDendrogramBy",
                "showSmpDendrogram",
                "smpDendrogramUseHeight",
                "smpDendrogramHang",
                "smpDendrogramNewick",
                "smpDendrogramPosition",
                "colorSmpDendrogramBy",
                "dendrogramHeight",
                "dendrogramColor"
            ],
            "U": {
                "C": "General parameters in dendrograms",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Circular",
                    "Correlation",
                    "DotLine",
                    "Dotplot",
                    "Heatmap",
                    "Line",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Tree",
                    "Treemap"
                ],
                "L": true
            }
        },
        "Clustering": {
            "P": [
                "clusteringDistance",
                "linkage",
                "clusterAxis",
                "kmeansVarClusters",
                "kmeansSmpClusters",
                "maxIterations",
                "imputeMethod",
                "samplesClustered",
                "variablesClustered",
                "samplesKmeaned",
                "variablesKmeaned"
            ],
            "U": {
                "C": "Parameters used in clustering",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Circular",
                    "Correlation",
                    "DotLine",
                    "Dotplot",
                    "Heatmap",
                    "Line",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Tree",
                    "Treemap"
                ],
                "L": true
            }
        },
        "Venn Diagrams": {
            "P": [
                "vennLegendColors",
                "vennGroups",
                "vennColors"
            ],
            "U": {
                "C": "General parameters in Venn diagrams",
                "U": [
                    "Venn"
                ],
                "L": true
            }
        },
        "Pie Charts": {
            "P": [
                "pieType",
                "pieSegmentPrecision",
                "pieSegmentSeparation",
                "pieSegmentLabels",
                "pieLabelType",
                "maxPieSectors",
                "showPieValues",
                "showPieSampleLabel",
                "startPieSectors",
                "pieInnerRadius",
                "pieColors"
            ],
            "U": {
                "C": "General parameters in pie charts",
                "U": [
                    "Pie"
                ],
                "L": true
            }
        },
        "Circular Graphs": {
            "P": [
                "circularType",
                "chordThickness",
                "chordColor",
                "bubbleColor",
                "bubbleOutlineColor",
                "bubbleLabel",
                "bubbleLabelPosition",
                "bubbleLabelLineType",
                "circularCenterProportion",
                "arcSegmentsSeparation",
                "circularRotate",
                "circularArc",
                "ringSeparation",
                "ringGraphType",
                "ringGraphWeight",
                "arcSegmentsRadius",
                "ringsOrder",
                "rAxis",
                "rAxisZero",
                "showCircularConnections",
                "connections",
                "circularLetterSeparationFactor",
                "circularConnectionsTransparency",
                "overlayLevelOrientation",
                "smpLabelOrientation",
                "circularLabelsAlign",
                "circularScalesAlign",
                "circularAnchorsAlign",
                "circularAnchors2Align",
                "circularDataPosition",
                "circularAnchorLength",
                "circularAnchorColor",
                "ideogramChromosome",
                "ideogramChromosomePosition"
            ],
            "U": {
                "C": "General parameters in circular graphs",
                "U": [
                    "Circular"
                ],
                "L": true
            }
        },
        "Ideograms": {
            "P": [
                "showIdeogram",
                "ideogram",
                "ideogramChromosomeNumber",
                "ideogramShowFullChromosome",
                "ideogramSegmentFontStyle",
                "ideogramSegmentColor",
                "ideogramSegmentFontSize",
                "ideogramSegmentScaleFontFactor",
                "ideogramSegmentAlign",
                "ideogramSegmentBaseline",
                "ideogramSegmentRotate",
                "ideogramSegmentMargin",
                "ideogramHeight"
            ],
            "U": {
                "C": "General parameters for Ideograms",
                "U": [
                    "Circular",
                    "Genome"
                ],
                "L": true
            }
        },
        "Tag Cloud": {
            "P": [
                "tagCloudTextWeightFactor",
                "tagCloudTextGridSize",
                "tagCloudTextEllipticity",
                "tagCloudTextRotateRatio",
                "tagCloudShape",
                "tagCloudMask"
            ],
            "U": {
                "C": "General parameters used in tag clouds",
                "U": [
                    "TagCloud"
                ],
                "L": true
            }
        },
        "Network Graphs": {
            "P": [
                "calculateLayout",
                "networkFreeze",
                "networkMaxIterations",
                "networkFreezeOnLoad",
                "preScaleNetwork",
                "ignoreEventlessOrder",
                "networkLayoutType",
                "networkRoot",
                "isNetworkMetrics",
                "showNetworkRadialLayout",
                "is3DNetwork",
                "networkNodesOnTop",
                "moveParentsWithChildren",
                "highlightNode",
                "nodeHighlightColor",
                "showNodeNameThreshold",
                "showNodeNameSizeThreshold",
                "nodeSizeScaleFactor",
                "edgeColor",
                "edgeSeparationFactor",
                "labelNodePosition",
                "nodeFontStyle",
                "nodeColor",
                "nodeFontSize",
                "nodeScaleFontFactor",
                "nodeAlign",
                "nodeBaseline",
                "nodeRotate",
                "nodeMargin",
                "nodeColor",
                "networkVendor",
                "networkProgressBarPosition"
            ],
            "U": {
                "C": "General parameters used in networks",
                "U": [
                    "Network"
                ],
                "L": true
            }
        },
        "Network Algorithm Parameters": {
            "P": [
                "networkConvergenceThreshold",
                "attractiveForceFunction",
                "repulsiveForceFunction",
                "useBarnesHutSimulation",
                "networkDisjoint",
                "networkSpeed",
                "networkGravity",
                "networkSpringLength",
                "networkSpringCoeff",
                "networkRepulsion",
                "networkTheta",
                "networkDragCoeff",
                "networkTimeStep"
            ],
            "U": {
                "C": "General parameters used in the layout algorithms for networks",
                "U": [
                    "Network"
                ],
                "L": true
            }
        },
        "Network Cola Algorithm Parameters": {
            "P": [
                "networkColaLinkDistance",
                "networkColaAvoidOverlaps",
                "networkColaHandleDisconnected",
                "networkColaConvergenceThreshold",
                "networkColaGroupCompactness",
                "networkColaSymmetricDiffLinkLengths",
                "networkColaJaccardLinkLength",
                "networkColaJaccardLinkLengthDefault",
                "networkColaFlowLayoutAxis",
                "networkColaFlowLayoutSeparation",
                "networkColaStartUnconstrainedIterations",
                "networkColaUserConstraintIterations",
                "networkColaAllConstraintsIterations",
                "networkColaGridSnapIterations",
                "networkColaKeepRunning",
                "networkColaCenterGraph"
            ],
            "U": {
                "C": "General parameters used in the cola layout algorithm for networks",
                "U": [
                    "Network"
                ],
                "L": true
            }
        },
        "Network Node and Edge Attributes": {
            "P": [
                "colorNodeBy",
                "shapeNodeBy",
                "sizeNodeBy",
                "patternNodeBy",
                "colorEdgeBy",
                "sizeEdgeBy",
                "minEdgeSize",
                "maxEdgeSize"
            ],
            "U": {
                "C": "General parameters used for nodes and edges in networks",
                "U": [
                    "Network"
                ],
                "L": true
            }
        },
        "Network Communities": {
            "P": [
                "showNetworkCommunities",
                "calculateNetworkCommunities",
                "coordinateNetworkConvexHullCommunityColor",
                "hullScale"
            ],
            "U": {
                "C": "General parameters used in network communities",
                "U": [
                    "Network"
                ],
                "L": true
            }
        },
        "Genome Browser": {
            "P": [
                "genomeTicks",
                "wireColor",
                "periodTicksLabels",
                "genomeResolution"
            ],
            "U": {
                "C": "General parameters used in genome browser",
                "U": [
                    "Genome"
                ],
                "L": true
            }
        },
        "Genome Browser Tracks": {
            "P": [
                "trackNameFontStyle",
                "trackNameColor",
                "trackNameFontSize",
                "trackNameScaleFontFactor",
                "trackNameAlign",
                "trackNameBaseline",
                "trackNameRotate",
                "trackNameMargin",
                "trackFillColor",
                "trackDirColor",
                "subtracksMaxDefault",
                "trackConfigurableProperties"
            ],
            "U": {
                "C": "General parameters used in genome browser tracks",
                "U": [
                    "Genome"
                ],
                "L": true
            }
        },
        "Genome Browser Features": {
            "P": [
                "showFeatureNameThereshold",
                "featureNameFontStyle",
                "featureNameColor",
                "featureNameFontSize",
                "featureNameScaleFontFactor",
                "featureNameAlign",
                "featureNameBaseline",
                "featureNameRotate",
                "featureNameMargin",
                "featureFillColor",
                "featureDirColor",
                "maxFeatureStringLen",
                "featureWidthDefault",
                "featureHeightDefault",
                "featureSpliceStyle",
                "featureTraceHeight",
                "featureTraceTrim",
                "featureTracesShow",
                "featureQualityHeight",
                "featureQualityValues",
                "featureQualityShow",
                "featureSignalToNoiseHeight",
                "featureSignalToNoiseValues",
                "featureSignalToNoiseShow",
                "featureCoordinateHeight",
                "featureCoordinateShow",
                "featureTranslateHeight",
                "featureTranslateShow",
                "featureTypeDefault",
                "featureStaggered",
                "featureConfigurableProperties"
            ],
            "U": {
                "C": "General parameters used in genome browser features",
                "U": [
                    "Genome"
                ],
                "L": true
            }
        },
        "Genome Browser Sequences": {
            "P": [
                "sequenceFontStyle",
                "sequenceColor",
                "sequenceFontSize",
                "sequenceScaleFontFactor",
                "sequenceAlign",
                "sequenceBaseline",
                "sequenceRotate",
                "sequenceMargin",
                "sequenceFillColor",
                "sequenceGAPColor",
                "sequenceAColor",
                "sequenceBColor",
                "sequenceCColor",
                "sequenceDColor",
                "sequenceEColor",
                "sequenceFColor",
                "sequenceGColor",
                "sequenceHColor",
                "sequenceIColor",
                "sequenceKColor",
                "sequenceLColor",
                "sequenceMColor",
                "sequenceNColor",
                "sequencePColor",
                "sequenceQColor",
                "sequenceRColor",
                "sequenceSColor",
                "sequenceTColor",
                "sequenceUColor",
                "sequenceVColor",
                "sequenceWColor",
                "sequenceXColor",
                "sequenceYColor",
                "sequenceZColor",
                "sequenceStartColor",
                "sequenceEndColor"
            ],
            "U": {
                "C": "General parameters used in genome browser sequeces",
                "U": [
                    "Genome"
                ],
                "L": true
            }
        },
        "Debug": {
            "P": [
                "debug",
                "debugWithArea",
                "verbose",
                "offline",
                "showVersion",
                "showCode",
                "codeType"
            ],
            "U": {
                "C": "Debugging parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Events": {
            "P": [
                "disableEvents",
                "disableCode",
                "disableMenu",
                "disableToolbar",
                "disableTooltipCallout",
                "disableDataTable",
                "disableChat",
                "disableDataFilters",
                "disableCustomizer",
                "disableCanvas",
                "disableDrag",
                "disableKeys",
                "disableShowShortcuts",
                "disablePlusMinusKeys",
                "disableUndoRedoKeys",
                "disableDocument",
                "disableWindow",
                "disableWheel",
                "disableBeacon",
                "playable",
                "resizable",
                "resizableX",
                "resizableY",
                "movable",
                "maxSubMenus",
                "showPrimaryMenus",
                "maxItemMenuCheckbox",
                "infoTimeOut",
                "infoTimeIn",
                "broadcast",
                "broadcastGroup",
                "showMousePositionOnDrag",
                "toolbarType",
                "toolbarSize",
                "toolbarItems",
                "lazyLoad",
                "hoverTemplate"
            ],
            "U": {
                "C": "Event parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Animations and Visualization Transitions": {
            "P": [
                "showAnimation",
                "showTransition",
                "transitionStep",
                "transitionStaggering",
                "transitionFunction"
            ],
            "U": {
                "C": "Animation and visualization transition parameters",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Combination Plots": {
            "P": [
                "stripBackgroundColor",
                "stripBackgroundBorderColor",
                "stripBackgroundBorderSize",
                "stripBackgroundBorderLineType",
                "stripTextFontStyle",
                "stripTextColor",
                "stripTextFontSize",
                "stripTextScaleFontFactor",
                "stripTextAlign",
                "stripTextBaseline",
                "stripTextRotate",
                "stripTextMargin",
                "stripShow",
                "stripThickness",
                "stripTextLines",
                "stripTextMaxLength",
                "layoutTopology",
                "layoutAdjust",
                "layoutGlobalGroups",
                "layoutCollapse",
                "layoutSpacing",
                "layoutType",
                "layoutRemoveEmpty",
                "layoutCanvasCompartments",
                "layoutLabelFontStyle",
                "layoutLabelColor",
                "layoutLabelFontSize",
                "layoutLabelScaleFontFactor",
                "layoutLabelAlign",
                "layoutLabelBaseline",
                "layoutLabelRotate",
                "layoutLabelMargin",
                "layoutConfig",
                "layoutAxis"
            ],
            "U": {
                "C": "Parameters used in complex plots",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": true
            }
        },
        "Images": {
            "P": [
                "imageTimeOut",
                "imageMaxTries"
            ],
            "U": {
                "C": "General parameters with images",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Remote Procedures": {
            "P": [
                "remoteService",
                "remoteParams",
                "remoteDirection",
                "remoteAutoPlay",
                "remoteAutoPlayDelay",
                "remoteParamOverride",
                "remoteTransitionEffect",
                "remoteAutoSize"
            ],
            "U": {
                "C": "Parameters used when getting data remotely",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "R": {
            "P": [
                "loadRDatasets"
            ],
            "U": {
                "C": "Parameters associated with R",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "LLM": {
            "P": [
                "llmServiceURL",
                "llmModel",
                "llmTopp",
                "llmTemperature",
                "llmPresencePenalty",
                "llmFrequencyPenalty",
                "llmMaxNewTokens",
                "llmBehaviour",
                "llmIconTransparency",
                "llmIconSize",
                "llmPrompt",
                "prompt",
                "llmUseDev",
                "llmStack",
                "llmHeader",
                "llmUseCopilot",
                "llmCodeExamplesShow",
                "loadLLMDatasets",
                "llmCodeExamples",
                "llmCodeMaxSentences"
            ],
            "U": {
                "C": "Parameters associated with LLM",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Data UI Widgets": {
            "P": [
                "dataUIStyle",
                "widgetsStyle",
                "widgetsBackgroundColor",
                "widgetsBaseColor",
                "widgetsBorderColor",
                "widgetsHoverTransparency",
                "widgetsAccentColor",
                "widgetsContrastColor",
                "widgetsStripedColor",
                "widgetsFontSize",
                "widgetsFontColor",
                "widgetsIconClsAColor",
                "widgetsIconClsBColor",
                "widgetsIconClsCColor",
                "widgetsIconClsCColor"
            ],
            "U": {
                "C": "Parameters associated with all data UI widgets",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Data Customizer": {
            "P": [
                "maxDataCustomizerEntries",
                "customizerSize",
                "customizerEntriesAsList",
                "customizerGraphMaximize"
            ],
            "U": {
                "C": "Parameters associated with data customizer",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Data Table/Filter": {
            "P": [
                "skipConfigurableProperties",
                "nodesProperties",
                "edgesProperties",
                "featuresProperties"
            ],
            "U": {
                "C": "Parameters associated with data table and data filter",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Data Filters": {
            "P": [
                "dataFilterWidth",
                "filterType",
                "filterMode",
                "filterSkipNullKeys",
                "filterSkipNullValues",
                "filterVarBy",
                "filterSmpBy",
                "filterNodeBy",
                "filterEdgeBy",
                "filterFeatureBy",
                "filterDataBy",
                "filterData"
            ],
            "U": {
                "C": "Parameters associated with filtering",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        },
        "Data Table": {
            "P": [
                "dataTableTransposed",
                "maxRows",
                "maxCols",
                "colWidth",
                "rowHeight",
                "rowLines",
                "refresehDataTableOnDraw",
                "showDataTableOnSelect",
                "networkShowDataTable",
                "colorDataTableTransparency",
                "dataTableImage",
                "dataTableRowProperties",
                "dataTableColProperties",
                "dataTableColHide",
                "dataTableColOrder",
                "dataTableRowOrder",
                "colorDataTable",
                "dataTableBorders",
                "dataTableBorderColor",
                "dataTableHeaderBordersShow",
                "dataTableStripeShow",
                "dataTableStripeTransparency",
                "dataTableZeroHeader",
                "dataTableCellLinkUnderline"
            ],
            "U": {
                "C": "Parameters associated with the data table",
                "U": [
                    "Area",
                    "AreaLine",
                    "Bar",
                    "BarLine",
                    "Boxplot",
                    "Bin",
                    "Binplot",
                    "Bubble",
                    "CDF",
                    "Chord",
                    "Circular",
                    "Contour",
                    "Correlation",
                    "Density",
                    "Donut",
                    "DotLine",
                    "Dotplot",
                    "Fish",
                    "Gantt",
                    "Genome",
                    "Heatmap",
                    "Hex",
                    "Hexplot",
                    "Histogram",
                    "KaplanMeier",
                    "Line",
                    "Lollipop",
                    "Map",
                    "Meter",
                    "Network",
                    "ParallelCoordinates",
                    "Pareto",
                    "Pie",
                    "QQ",
                    "Quantile",
                    "Radar",
                    "Ridgeline",
                    "Sankey",
                    "Scatter2D",
                    "Scatter3D",
                    "ScatterBubble2D",
                    "Stacked",
                    "StackedLine",
                    "StackedPercent",
                    "StackedPercentLine",
                    "Streamgraph",
                    "Sunburst",
                    "TagCloud",
                    "Tree",
                    "Treemap",
                    "Upset",
                    "Violin",
                    "Venn",
                    "Waterfall"
                ],
                "L": false
            }
        }
    },
    "P": {
        "graphType": {
            "C": "Specifies the type of graph to be rendered<br>",
            "D": "Bar",
            "M": "General",
            "O": [
                "Area",
                "AreaLine",
                "Bar",
                "BarLine",
                "Boxplot",
                "Bin",
                "Binplot",
                "Bubble",
                "CDF",
                "Chord",
                "Circular",
                "Contour",
                "Correlation",
                "Density",
                "Donut",
                "DotLine",
                "Dotplot",
                "Fish",
                "Gantt",
                "Genome",
                "Heatmap",
                "Hex",
                "Hexplot",
                "Histogram",
                "KaplanMeier",
                "Line",
                "Lollipop",
                "Map",
                "Meter",
                "Network",
                "ParallelCoordinates",
                "Pareto",
                "Pie",
                "QQ",
                "Quantile",
                "Radar",
                "Ridgeline",
                "Sankey",
                "Scatter2D",
                "Scatter3D",
                "ScatterBubble2D",
                "Stacked",
                "StackedLine",
                "StackedPercent",
                "StackedPercentLine",
                "Streamgraph",
                "Sunburst",
                "TagCloud",
                "Tree",
                "Treemap",
                "Upset",
                "Violin",
                "Venn",
                "Waterfall"
            ],
            "T": "string"
        },
        "graphOrientation": {
            "C": "Specifies the orientation of one-dimensional graphs<br>",
            "D": "horizontal",
            "M": "General",
            "O": [
                "horizontal",
                "vertical"
            ],
            "T": "string"
        },
        "invertGraph": {
            "C": "Option to reverse one-dimensional horizontal graphs for plotting from right to left<br>",
            "D": false,
            "M": "General",
            "T": "boolean"
        },
        "view": {
            "C": "Specify the initial view or display for the visualization<br>",
            "D": "canvas",
            "M": "General",
            "O": [
                "canvas",
                "table",
                "layout"
            ],
            "T": "string"
        },
        "isR": {
            "C": "Automatically set a flag to indicate operation through the R API interface. Exclusive to developers<br>",
            "D": false,
            "M": "General",
            "T": "boolean"
        },
        "isChat": {
            "C": "Expose the chat interface at instatiation of the plot<br>",
            "D": false,
            "M": "General",
            "T": "boolean"
        },
        "isCxplot": {
            "C": "Automatically set a flag to indicate operation through the cxplot interface. Exclusive to developers<br>",
            "D": false,
            "M": "General",
            "T": "boolean"
        },
        "isReproducibleResearch": {
            "C": "Flag set to track user modifications for Reproducible Research. Intended for developers exclusively<br>",
            "D": true,
            "M": "General",
            "T": "boolean"
        },
        "isDataFrame": {
            "C": "Flag to indicate to use the data object as a data frame from R or Python<br>",
            "D": false,
            "M": "General",
            "T": "boolean"
        },
        "reproduceTime": {
            "C": "Duration in milliseconds to wait for replicating user modifications via the UI<br>",
            "D": 500,
            "M": "General",
            "T": "integer"
        },
        "overplotPixels": {
            "C": "Specify the pixel count for stacking to address overplotting. Increased values result in reduced overplotting, particularly advantageous for datasets with numerous variables<br>",
            "D": 500000,
            "M": "General",
            "T": "integer"
        },
        "editable": {
            "C": "Prevent data editing in JS Fiddle and CodePen by disabling the option in the File menu<br>",
            "D": true,
            "M": "General",
            "T": "boolean"
        },
        "theme": {
            "C": "The style for the plot or theme will control all the non-data elements of the plot including titles, legends, axes, panel and plot background colors and other stylistic elements<br>",
            "D": "none",
            "M": "General",
            "O": [
                "none",
                "grey",
                "gray",
                "igray",
                "ggplot",
                "bw",
                "linedraw",
                "light",
                "dark",
                "minimal",
                "classic",
                "void",
                "economist",
                "excel",
                "tableau",
                "stata",
                "solarized",
                "ptol",
                "highcharts",
                "wsj",
                "ggblanket",
                "cx"
            ],
            "T": "string"
        },
        "plotStyle": {
            "C": "Style for some shapes used mainly in boxplot, violin and density plots<br>",
            "D": "default",
            "M": "Data Point Attributes",
            "O": [
                "default",
                "ggplot",
                "ggplotSwitched",
                "open",
                "border"
            ],
            "T": "string"
        },
        "fullTextMeasureCheck": {
            "C": "Perform a comprehensive review of variable and sample name lengths when exceeding the specified quantity. This is beneficial for extensive data sets, as canvas lacks an efficient method for measuring text<br>",
            "D": 500,
            "M": "General",
            "T": "integer"
        },
        "metaData": {
            "C": "Metadata for the columns of files retrieved from a URL<br>",
            "D": {},
            "M": "General",
            "T": "object"
        },
        "password": {
            "C": "Password to protect exploring data<br>",
            "D": false,
            "M": "General",
            "T": "string"
        },
        "tags": {
            "C": "Tags<br>",
            "D": [],
            "M": "Graph Metadata",
            "T": "array"
        },
        "plotBackgroundColor": {
            "C": "Color for the plot background. This includes the entire graph area<br>",
            "D": "rgb(255,255,255)",
            "M": "Plot and Panel Areas",
            "T": "color"
        },
        "plotBackgroundBorderColor": {
            "C": "Color for the border in plot background. This includes the entire graph area<br>",
            "D": "rgba(204,204,204,0)",
            "M": "Plot and Panel Areas",
            "T": "color"
        },
        "plotBackgroundBorderSize": {
            "C": "Size for the border line in plot background. This includes the entire graph area<br>",
            "D": 1,
            "M": "Plot and Panel Areas",
            "T": "float"
        },
        "plotBackgroundBorderLineType": {
            "C": "Type of line for the border in plot background. This includes the entire graph area<br>",
            "D": "solid",
            "M": "Plot and Panel Areas",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "panelBackgroundColor": {
            "C": "Color for the panel background. This includes only the area where the data is plotted<br>",
            "D": "rgb(255,255,255)",
            "M": "Plot and Panel Areas",
            "T": "color"
        },
        "panelBackgroundBorderColor": {
            "C": "Color for the border in panel background. This includes only the area where the data is plotted<br>",
            "D": "rgba(204,204,204,0)",
            "M": "Plot and Panel Areas",
            "T": "color"
        },
        "panelBackgroundBorderSize": {
            "C": "Size for the border line in panel background. This includes only the area where the data is plotted<br>",
            "D": 1,
            "M": "Plot and Panel Areas",
            "T": "float"
        },
        "panelBackgroundBorderLineType": {
            "C": "Type of line for the border in panel background. This includes only the area where the data is plotted<br>",
            "D": "solid",
            "M": "Plot and Panel Areas",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "backgroundType": {
            "C": "Specifies the style for the background of the canvas. The canvas background is composed of a frame with a panel where the data is plotted. Either of these elements the may be a solid or gradient color or an image of your choosing. The colorScheme property will be used If gradient is specified<br>",
            "D": "solid",
            "M": "Plot and Panel Areas",
            "O": [
                "solid",
                "gradient",
                "panel",
                "panelGradient",
                "panelSolidGradient",
                "image",
                "panelImage"
            ],
            "T": "string"
        },
        "backgroundImage": {
            "C": "Specifies the url for the background image when the background type is of the type image or panelImage<br>",
            "D": false,
            "M": "Plot and Panel Areas",
            "T": "url"
        },
        "backgroundImageSrc": {
            "C": "Specifies the source for the background image when the background type is of the type image or panelImage<br>",
            "D": false,
            "M": "Plot and Panel Areas",
            "T": "string"
        },
        "cacheBase64": {
            "C": "Cache image in meta data as Base64<br>",
            "D": false,
            "M": "Print",
            "T": "boolean"
        },
        "printType": {
            "C": "Type of printing when the camera icon in the UI is pressed. Download is to download the image while window is to save the image in a new browser window<br>",
            "D": "download",
            "M": "Print",
            "O": [
                "download",
                "window"
            ],
            "T": "string"
        },
        "printMagnification": {
            "C": "Print Magnification to produce High Definition images. Courtesy of Baohong Zhang<br>",
            "D": 1,
            "M": "Print",
            "T": "integer"
        },
        "printThumbnail": {
            "C": "Print thumbnail<br>",
            "D": false,
            "M": "Print",
            "T": "boolean"
        },
        "saveFilename": {
            "C": "Filename to use when downloading the canvas as an image or as json. If not specified. the filename will be based on the target id of the canvas. cX- + canvas.targetId + extension<br>",
            "D": false,
            "M": "Print",
            "T": "string"
        },
        "transparency": {
            "C": "Unit interval or fraction of transparency applied to all elements in the visualizations<br>",
            "D": null,
            "M": "Transparency",
            "T": "float"
        },
        "transparencyHidden": {
            "C": "Unit interval or fraction of transparency applied to elements that are hidden<br>",
            "D": 0.1,
            "M": "Transparency",
            "T": "float"
        },
        "highlightGreyOut": {
            "C": "Flag to add grey out when highlighting with mouse over<br>",
            "D": false,
            "M": "Grey Out",
            "T": "boolean"
        },
        "highlightGreyOutTransparency": {
            "C": "Unit interval or fraction of transparency for greying out when highlighting with mouse overs<br>",
            "D": 0.67,
            "M": "Grey Out",
            "T": "float"
        },
        "aes": {
            "C": "Initial Configuration passed to cxplot when used in combination with ggplot<br>",
            "D": {},
            "M": "cxplot",
            "T": "object"
        },
        "ggplot": {
            "C": "Initial ggplot configuration passed to cxplot<br>",
            "D": {},
            "M": "cxplot",
            "T": "object"
        },
        "effect": {
            "C": "Effect used to show widgets Magic - Ver 1.3.0 - https://minimamente.com<br>",
            "D": "none",
            "M": "Effect",
            "O": [
                "none",
                "magic",
                "puffIn",
                "openDownLeft",
                "openDownLeftOut",
                "perspectiveDown",
                "rotateDown",
                "twisterInDown",
                "puffOut",
                "openDownRight",
                "openDownRightOut",
                "perspectiveUp",
                "rotateUp",
                "twisterInUp",
                "vanishIn",
                "openUpLeft",
                "openUpLeftOut",
                "perspectiveLeft",
                "rotateLeft",
                "swap",
                "vanishOut",
                "openUpRight",
                "openUpRightOut",
                "perspectiveRight",
                "rotateRight",
                "openDownLeftReturn",
                "perspectiveDownReturn",
                "openDownRightReturn",
                "perspectiveUpReturn",
                "openUpLeftReturn",
                "perspectiveLeftReturn",
                "openUpRightReturn",
                "perspectiveRightReturn",
                "slideDown",
                "swashOut",
                "tinRightOut",
                "bombRightOut",
                "boingInUp",
                "spaceOutUp",
                "slideUp",
                "swashIn",
                "tinLeftOut",
                "bombLeftOut",
                "boingOutDown",
                "spaceOutRight",
                "slideLeft",
                "foolishIn",
                "tinUpOut",
                "spaceOutDown",
                "slideRight",
                "holeOut",
                "tinDownOut",
                "spaceOutLeft",
                "slideDownReturn",
                "tinRightIn",
                "spaceInUp",
                "slideUpReturn",
                "tinLeftIn",
                "spaceInRight",
                "slideLeftReturn",
                "tinUpIn",
                "spaceInDown",
                "slideRightReturn",
                "tinDownIn",
                "spaceInLeft"
            ],
            "T": "string"
        },
        "codeEffectIn": {
            "C": "Code Effect In<br>",
            "D": "slideLeftReturn2",
            "M": "Effect",
            "T": "string"
        },
        "codeEffectOut": {
            "C": "Code Effect Out<br>",
            "D": "slideLeft",
            "M": "Effect",
            "T": "string"
        },
        "customizerEffectIn": {
            "C": "Customize Effect In<br>",
            "D": "slideLeftReturn",
            "M": "Effect",
            "T": "string"
        },
        "customizerEffectOut": {
            "C": "Customizer Effect Out<br>",
            "D": "slideUp2",
            "M": "Effect",
            "T": "string"
        },
        "datafilterEffectIn": {
            "C": "Data Filter Effect In<br>",
            "D": "slideRightReturn",
            "M": "Effect",
            "T": "string"
        },
        "datafilterEffectOut": {
            "C": "Data Filter Effect Out<br>",
            "D": "slideRight",
            "M": "Effect",
            "T": "string"
        },
        "datatableEffectIn": {
            "C": "Data Table Effect In<br>",
            "D": "slideDownReturn",
            "M": "Effect",
            "T": "string"
        },
        "datatableEffectOut": {
            "C": "Data Table Effect Out<br>",
            "D": "slideDown3",
            "M": "Effect",
            "T": "string"
        },
        "motionEffectIn": {
            "C": "Motion Effect In<br>",
            "D": "swashIn",
            "M": "Effect",
            "T": "string"
        },
        "motionEffectOut": {
            "C": "Motion Effect Out<br>",
            "D": "holeOut",
            "M": "Effect",
            "T": "string"
        },
        "remoteEffectIn": {
            "C": "Remote Effect In<br>",
            "D": "holeIn",
            "M": "Effect",
            "T": "string"
        },
        "remoteEffectOut": {
            "C": "Remote Effect Out<br>",
            "D": "holeOut",
            "M": "Effect",
            "T": "string"
        },
        "toolbarEffectIn": {
            "C": "Toolbar Effect In<br>",
            "D": "holeIn",
            "M": "Effect",
            "T": "string"
        },
        "toolbarEffectOut": {
            "C": "Toolbar Effect Out<br>",
            "D": "holeOut",
            "M": "Effect",
            "T": "string"
        },
        "tooltipDivEffectIn": {
            "C": "Tooltip Div Effect In<br>",
            "D": "holeOut",
            "M": "Effect",
            "T": "string"
        },
        "tooltipDivEffectOut": {
            "C": "Tooltip Div Effect Out<br>",
            "D": "spaceInUp",
            "M": "Effect",
            "T": "string"
        },
        "gradient": {
            "C": "Flag used to apply a color gradient to all elements in the graphs<br>",
            "D": false,
            "M": "Gradients",
            "T": "boolean"
        },
        "gradientType": {
            "C": "Specifies the type of gradient pattern<br>",
            "D": "radial",
            "M": "Gradients",
            "O": [
                "linear",
                "radial"
            ],
            "T": "string"
        },
        "gradientOrientation": {
            "C": "Specifies the orientation of the gradient when the gradient type is linear.<br>",
            "D": "vertical",
            "M": "Gradients",
            "O": [
                "vertical",
                "horizontal"
            ],
            "T": "string"
        },
        "adjustAspectRatio": {
            "C": "Flag to automatically resize graph elements in the plots to fit within the specified canvas width and height. If the flag is set to false the width and height of the canvas will be sized according to the number of elements in the data set<br>",
            "D": true,
            "M": "Aspect Ratio, Space and Width",
            "T": "boolean"
        },
        "percentAspectRatioPlotArea": {
            "C": "Specifies the minimum unit interval or fraction for the plotting area<br>",
            "D": 0.35,
            "M": "Aspect Ratio, Space and width",
            "T": "float"
        },
        "fixedAspectRatio": {
            "C": "Keep fixed aspect ratio expressed as y / x. A zero value is used to ignore otherwise the x and y axes are set accordingly. This has a use only in visium plots<br>",
            "D": 0,
            "M": "Aspect Ratio, Space and Width",
            "T": "float"
        },
        "variableSpace": {
            "C": "Pixels between the data series in one-dimensional plots<br>",
            "D": 2,
            "M": "Aspect Ratio, Space and width",
            "T": "integer"
        },
        "widthFactor": {
            "C": "Factor to adjust the width of the graph elements in one-dimensional and three-dimensional plots. The greater the number, the wider the elements<br>",
            "D": 1,
            "M": "Aspect Ratio, Space and Width",
            "T": "integer"
        },
        "dataPointSize": {
            "C": "Approximate pixel size for the data points in scatter plots, dotplots and boxplots. The size will be adjusted according to the dimensions of the graph<br>",
            "D": 10,
            "M": "Aspect Ratio, Space and Width",
            "T": "integer"
        },
        "dataPointSizeScaleFactor": {
            "C": "Factor used to adjust the size of the dataPointSize<br>",
            "D": 1,
            "M": "Aspect Ratio, Space and width",
            "T": "float"
        },
        "setPlotX": {
            "C": "Set the x dimension of the plotting area to the specified number of pixels, provided the value is greater than zero. This is used to align multiple graphs in a web page<br>",
            "D": 0,
            "M": "Aspect Ratio, Space and Width",
            "T": "integer"
        },
        "setPlotY": {
            "C": "Set the y dimension of the plotting area to the specified number of pixels, provided the value is greater than zero. This is used to align multiple graphs in a web page<br>",
            "D": 0,
            "M": "Aspect Ratio, Space and Width",
            "T": "integer"
        },
        "setPlotLeft": {
            "C": "Set the left dimension of the plotting area to the specified number of pixels, provided the value is greater than zero. This is used to align multiple graphs in a web page<br>",
            "D": 0,
            "M": "Aspect Ratio, Space and Width",
            "T": "integer"
        },
        "setPlotTop": {
            "C": "Set the top dimension of the plotting area to the specified number of pixels, provided the value is greater than zero. This is used to align multiple graphs in a web page<br>",
            "D": 0,
            "M": "Aspect Ratio, Space and Width",
            "T": "integer"
        },
        "foreground": {
            "C": "Color for the Specifies the default foreground color for text and lines not covered in a more specific configuration property<br>",
            "D": "rgb(0,0,0)",
            "M": "Foreground and Background",
            "T": "color"
        },
        "background": {
            "C": "Color for the Specifies the default background color for elements in the canvas not covered in a more specific configuration property<br>",
            "D": "rgb(255,255,255)",
            "M": "Foreground and Background",
            "T": "color"
        },
        "margin": {
            "C": "Relative length in pixels for the distance between various objects in the graphs. This value is adjusted acording to the graph dimensions if the adjustAspectRatio parameter is set to true<br>",
            "D": 8,
            "M": "Margins",
            "T": "integer"
        },
        "marginLeft": {
            "C": "Specifies the length in pixels for the left margin in the canvas<br>",
            "D": 8,
            "M": "Margins",
            "T": "integer"
        },
        "marginTop": {
            "C": "Specifies the length in pixels for the top margin in the canvas<br>",
            "D": 8,
            "M": "Margins",
            "T": "integer"
        },
        "marginBottom": {
            "C": "Specifies the length in pixels for the bottom margin in the canvas<br>",
            "D": 8,
            "M": "Margins",
            "T": "integer"
        },
        "marginRight": {
            "C": "Specifies the length in pixels for the right margin in the canvas<br>",
            "D": 16,
            "M": "Margins",
            "T": "integer"
        },
        "showShadow": {
            "C": "Flag to show/hide the shadows in all graph objects in the canvas. It will be forced to false if the browser is IE<br>",
            "D": false,
            "M": "Shadows",
            "T": "boolean"
        },
        "showTextShadow": {
            "C": "Flag to show/hide the shadows in text in the canvas. It will be forced to false if the browser is IE<br>",
            "D": false,
            "M": "Shadows",
            "T": "boolean"
        },
        "shadowOffsetX": {
            "C": "Length in pixels for the shadow offset in the X axis<br>",
            "D": 1,
            "M": "Shadows",
            "T": "integer"
        },
        "shadowOffsetY": {
            "C": "Length in pixels for the shadow offset in the Y axis<br>",
            "D": 1,
            "M": "Shadows",
            "T": "integer"
        },
        "shadowBlur": {
            "C": "Amount in blur for the shadow<br>",
            "D": 2,
            "M": "Shadows",
            "T": "integer"
        },
        "shadowColor": {
            "C": "Color for the shadow<br>",
            "D": "rgba(0,0,0,0.5)",
            "M": "Shadows",
            "T": "color"
        },
        "topoJSON": {
            "C": "TopoJSON map string<br>",
            "D": false,
            "M": "Maps",
            "T": "string"
        },
        "mapId": {
            "C": "Map Id for the map div in the DOM<br>",
            "D": false,
            "M": "Maps",
            "T": "string"
        },
        "mapPropertyId": {
            "C": "Map Property Id use to match the data ids to the GeoJSON layer Id<br>",
            "D": false,
            "M": "Maps",
            "T": "string"
        },
        "mapProjection": {
            "C": "Map projection<br>",
            "D": "mercator",
            "M": "Maps",
            "O": [
                "mercator",
                "albers",
                "orthographic"
            ],
            "T": "string"
        },
        "mapConfig": {
            "C": "Map config<br>",
            "D": false,
            "M": "Maps",
            "T": "object"
        },
        "mapConfigFeatures": {
            "C": "Map config for features use to translate and scale<br>",
            "D": false,
            "M": "Maps",
            "T": "object"
        },
        "mapSmps": {
            "C": "Samples to use in maps<br>",
            "D": [],
            "M": "Maps",
            "T": "array"
        },
        "hiddenMapFeatures": {
            "C": "Hidden Map features<br>",
            "D": [],
            "M": "Maps",
            "T": "array"
        },
        "visibleMapFeatures": {
            "C": "Visible Map features. It Overrides the hidden features<br>",
            "D": [],
            "M": "Maps",
            "T": "array"
        },
        "mapColor": {
            "C": "Color for the maps<br>",
            "D": "rgb(105,210,230)",
            "M": "Maps",
            "T": "color"
        },
        "mapOutlineColor": {
            "C": "Color for the outline of the maps<br>",
            "D": "rgb(204,204,204)",
            "M": "Maps",
            "T": "color"
        },
        "mapMarkerShape": {
            "C": "Default shape for the markers in map (if no shapeBy is specified<br>",
            "D": "drop",
            "M": "Maps",
            "O": [
                "drop",
                "sphere",
                "square",
                "triangle",
                "star",
                "rhombus",
                "octagon",
                "mdavid",
                "pentagon",
                "rectangle"
            ],
            "T": "string"
        },
        "mapMarkerShapeScaleFactor": {
            "C": "Scale factor for the marker shapes<br>",
            "D": 1,
            "M": "Maps",
            "T": "float"
        },
        "mapLatitudeOrigin": {
            "C": "Map Latitude Of Origin in degrees. (Applicable to Albers projection only). Default adjusts to USA maps<br>",
            "D": 23,
            "M": "Maps Albers",
            "T": "float"
        },
        "mapCentralMeridian": {
            "C": "Map Latitude Of Origin in degrees. (Applicable to Albers projection only). Default adjusts to USA maps<br>",
            "D": -96,
            "M": "Maps Albers",
            "T": "float"
        },
        "mapStandardParallel1": {
            "C": "Map Standard Parallel 1 in degrees. (Applicable to Albers projection only). Default adjusts to USA maps<br>",
            "D": 29.5,
            "M": "Maps Albers",
            "T": "float"
        },
        "mapStandardParallel2": {
            "C": "Map Standard Parallel 2 in degrees. (Applicable to Albers projection only). Default adjusts to USA maps<br>",
            "D": 45.5,
            "M": "Maps Albers",
            "T": "float"
        },
        "mapGraticuleShow": {
            "C": "Show Map Graticule<br>",
            "D": false,
            "M": "Maps Orthographic",
            "T": "boolean"
        },
        "mapGraticuleType": {
            "C": "Map Graticule type<br>",
            "D": "solid",
            "M": "Maps Orthographic",
            "O": [
                "dashed",
                "solid"
            ],
            "T": "string"
        },
        "useLeaflet": {
            "C": "Use leaflet<br>",
            "D": false,
            "M": "Maps Leaflet",
            "T": "boolean"
        },
        "leafletAlpha": {
            "C": "Transparency for leaflet layers<br>",
            "D": 0.7,
            "M": "Maps Leaflet",
            "T": "float"
        },
        "leafletZoomAlphaColor": {
            "C": "Zoom level before turning transparent the leaflet layers<br>",
            "D": 6,
            "M": "Maps Leaflet",
            "T": "float"
        },
        "leafletTileType": {
            "C": "Leaflet tile type<br>",
            "D": "street",
            "M": "Maps Leaflet",
            "O": [
                "street",
                "terrain",
                "labels",
                "satellite"
            ],
            "T": "string"
        },
        "fonts": {
            "C": "Goggle Fonts<br>",
            "D": [],
            "M": "Text",
            "T": "array"
        },
        "fontsExternal": {
            "C": "External Fonts<br>",
            "D": [],
            "M": "Text",
            "T": "array"
        },
        "fontName": {
            "C": "Font name. Web-Safe HTML fonts<br>",
            "D": "Arial",
            "M": "Text",
            "O": [
                "American Typewriter",
                "Andale Mono",
                "Arial",
                "Baskerville",
                "Bradley Hand",
                "Brush Script MT",
                "Comic Sans MS",
                "Courier",
                "Didot",
                "Georgia",
                "Gill Sans",
                "Helvetica",
                "Impact",
                "Lucida Console",
                "Luminari",
                "Monaco",
                "Optima",
                "Palatino",
                "Roboto",
                "Tahoma",
                "Times New Roman",
                "Trebuchet MS",
                "Verdana"
            ],
            "T": "string"
        },
        "fontStyle": {
            "C": "Font style<br>",
            "D": "",
            "M": "Text",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "fontColor": {
            "C": "Color for the font<br>",
            "D": "rgb(0,0,0)",
            "M": "Text",
            "T": "color"
        },
        "fontSize": {
            "C": "Font size for text in complex plot only. See other categories to modify specific font sizes<br>",
            "D": 11,
            "M": "Text",
            "T": "integer"
        },
        "fontScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the font size in the canvas<br>",
            "D": 1,
            "M": "Text",
            "T": "float"
        },
        "align": {
            "C": "Default horizontal alignment for drawing text<br>",
            "D": "center",
            "M": "Text",
            "O": [
                "right",
                "center",
                "left"
            ],
            "T": "string"
        },
        "baseline": {
            "C": "Default vertical alignment for drawing text<br>",
            "D": "middle",
            "M": "Text",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "maxTextSize": {
            "C": "Maximum size for any text in the canvas<br>",
            "D": 40,
            "M": "Text",
            "T": "integer"
        },
        "minTextSize": {
            "C": "Minimum size for any text in the canvas<br>",
            "D": 4,
            "M": "Text",
            "T": "integer"
        },
        "autoScaleFont": {
            "C": "Flag to automatically adjust the font size in many visualization. Please be aware that scaling factors can still modify the font size. This flag needs to be false for the text to accept the specified font size<br>",
            "D": true,
            "M": "Text",
            "T": "boolean"
        },
        "optimizeTextPosition": {
            "C": "Flag to optimize position for text in many plots<br>",
            "D": false,
            "M": "Text Placement",
            "T": "boolean"
        },
        "optimizeTextPositionStrategy": {
            "C": "Startegy to optimize placement of text<br>",
            "D": "greedy",
            "M": "Text Placement",
            "O": [
                "annealing",
                "greedy",
                "boundingBox"
            ],
            "T": "string"
        },
        "optimizeTextPositionEnforceBounds": {
            "C": "Flag to enforce bounds when optimizing position for text in many plots<br>",
            "D": true,
            "M": "Text Placement",
            "T": "boolean"
        },
        "optimizeTextPositionRemoveOverlaps": {
            "C": "Flag to remove overlaps when optimizing position for text in many plots<br>",
            "D": true,
            "M": "Text Placement",
            "T": "boolean"
        },
        "optimizeTextPositionTemperature": {
            "C": "Temperature parameter when optimizing position for text in many plots<br>",
            "D": 1000,
            "M": "Text Placement",
            "T": "integer"
        },
        "optimizeTextPositionCooling": {
            "C": "Cooling parameter when optimizing position for text in many plots<br>",
            "D": 1,
            "M": "Text Placement",
            "T": "integer"
        },
        "title": {
            "C": "Title of the graph<br>",
            "D": false,
            "M": "Titles and Subtitles",
            "T": "string"
        },
        "subtitle": {
            "C": "Subtitle of the graph<br>",
            "D": false,
            "M": "Titles and Subtitles",
            "T": "string"
        },
        "titleFontStyle": {
            "C": "Font style for the title<br>",
            "D": "bold",
            "M": "Titles and Subtitles",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "titleColor": {
            "C": "Color for the text in title<br>",
            "D": "rgb(0,0,0)",
            "M": "Titles and Subtitles",
            "T": "color"
        },
        "titleFontSize": {
            "C": "Font size for the text in title. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the titleScaleFontFactor<br>",
            "D": 13,
            "M": "Titles and Subtitles",
            "T": "integer"
        },
        "titleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the title font size in the canvas<br>",
            "D": 1,
            "M": "Titles and Subtitles",
            "T": "float"
        },
        "titleAlign": {
            "C": "Alignment (or position) for the title<br>",
            "D": "center",
            "M": "Titles and Subtitles",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "titleBaseline": {
            "C": "Baseline (or reference line) for the title<br>",
            "D": "middle",
            "M": "Titles and Subtitles",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "titleRotate": {
            "C": "Rotation in degrees for the title<br>",
            "D": 0,
            "M": "Titles and Subtitles",
            "T": "integer"
        },
        "titleMargin": {
            "C": "Margin to pad or separate the characters in the title<br>",
            "D": 5,
            "M": "Titles and Subtitles",
            "T": "float"
        },
        "titleBackgroundColor": {
            "C": "Color for the title background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Titles and Subtitles",
            "T": "color"
        },
        "titleBackgroundBorderColor": {
            "C": "Color for the border in title background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Titles and Subtitles",
            "T": "color"
        },
        "titleBackgroundBorderSize": {
            "C": "Size for the border line in title background<br>",
            "D": 0.5,
            "M": "Titles and Subtitles",
            "T": "float"
        },
        "titleBackgroundBorderLineType": {
            "C": "Type of line for the border in title background<br>",
            "D": "solid",
            "M": "Titles and Subtitles",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "subtitleFontStyle": {
            "C": "Font style for the subtitle<br>",
            "D": "",
            "M": "Titles and Subtitles",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "subtitleColor": {
            "C": "Color for the text in subtitle<br>",
            "D": "rgb(0,0,0)",
            "M": "Titles and Subtitles",
            "T": "color"
        },
        "subtitleFontSize": {
            "C": "Font size for the text in subtitle. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the subtitleScaleFontFactor<br>",
            "D": 13,
            "M": "Titles and Subtitles",
            "T": "integer"
        },
        "subtitleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the subtitle font size in the canvas<br>",
            "D": 1,
            "M": "Titles and Subtitles",
            "T": "float"
        },
        "subtitleAlign": {
            "C": "Alignment (or position) for the subtitle<br>",
            "D": "center",
            "M": "Titles and Subtitles",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "subtitleBaseline": {
            "C": "Baseline (or reference line) for the subtitle<br>",
            "D": "middle",
            "M": "Titles and Subtitles",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "subtitleRotate": {
            "C": "Rotation in degrees for the subtitle<br>",
            "D": 0,
            "M": "Titles and Subtitles",
            "T": "integer"
        },
        "subtitleMargin": {
            "C": "Margin to pad or separate the characters in the subtitle<br>",
            "D": 5,
            "M": "Titles and Subtitles",
            "T": "float"
        },
        "subtitleBackgroundColor": {
            "C": "Color for the subtitle background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Titles and Subtitles",
            "T": "color"
        },
        "subtitleBackgroundBorderColor": {
            "C": "Color for the border in subtitle background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Titles and Subtitles",
            "T": "color"
        },
        "subtitleBackgroundBorderSize": {
            "C": "Size for the border line in subtitle background<br>",
            "D": 0.5,
            "M": "Titles and Subtitles",
            "T": "float"
        },
        "subtitleBackgroundBorderLineType": {
            "C": "Type of line for the border in subtitle background<br>",
            "D": "solid",
            "M": "Titles and Subtitles",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "citation": {
            "C": "A reference citation of the graph which is placed at the bottom right corner<br>",
            "D": false,
            "M": "Citations or References",
            "T": "string"
        },
        "citationFontStyle": {
            "C": "Font style for the citations<br>",
            "D": "",
            "M": "Citations or References",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "citationColor": {
            "C": "Color for the text in citations<br>",
            "D": "rgb(0,0,0)",
            "M": "Citations or References",
            "T": "color"
        },
        "citationFontSize": {
            "C": "Font size for the text in citations. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the citationScaleFontFactor<br>",
            "D": 8,
            "M": "Citations or References",
            "T": "integer"
        },
        "citationScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the citations font size in the canvas<br>",
            "D": 1,
            "M": "Citations or References",
            "T": "float"
        },
        "citationAlign": {
            "C": "Alignment (or position) for the citations<br>",
            "D": "right",
            "M": "Citations or References",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "citationBaseline": {
            "C": "Baseline (or reference line) for the citations<br>",
            "D": "middle",
            "M": "Citations or References",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "citationRotate": {
            "C": "Rotation in degrees for the citations<br>",
            "D": 0,
            "M": "Citations or References",
            "T": "integer"
        },
        "citationMargin": {
            "C": "Margin to pad or separate the characters in the citations<br>",
            "D": 5,
            "M": "Citations or References",
            "T": "float"
        },
        "dashLength": {
            "C": "Size in pixels of the length of the dashes and the separation between the dashes in the dashed lines<br>",
            "D": 8,
            "M": "Lines",
            "T": "integer"
        },
        "dotLength": {
            "C": "Size in pixels of the length between dots in the doted lines<br>",
            "D": 1,
            "M": "Lines",
            "T": "integer"
        },
        "arrowQuadraticFactor": {
            "C": "Factor to use to bend the quadratic lines<br>",
            "D": 2.3,
            "M": "Lines",
            "T": "float"
        },
        "arrowHeadType": {
            "C": "Type for the head of the arrows<br>",
            "D": "filledArc",
            "M": "Lines",
            "O": [
                "unFilled",
                "filledStraight",
                "filledArc",
                "filledQuadratic",
                "filledBezier"
            ],
            "T": "string"
        },
        "arrowHeadSize": {
            "C": "Size in pixels of the arrow head in arrow lines<br>",
            "D": 10,
            "M": "Lines",
            "T": "integer"
        },
        "arrowHeadAngle": {
            "C": "The angle for the head of the arrow<br>",
            "D": 22.5,
            "M": "Lines",
            "T": "float"
        },
        "capType": {
            "C": "Default type of cap for lines<br>",
            "D": "butt",
            "M": "Lines",
            "O": [
                "butt",
                "round",
                "square"
            ],
            "T": "string"
        },
        "joinType": {
            "C": "Default type for joining lines<br>",
            "D": "mitter",
            "M": "Lines",
            "O": [
                "mitter",
                "bevel",
                "round"
            ],
            "T": "string"
        },
        "outlineWidth": {
            "C": "Default width in pixels for lines in networks and other line elements in all visualizations except for the lines in the line plots<br>",
            "D": 1,
            "M": "Lines",
            "T": "float"
        },
        "lineThickness": {
            "C": "Default thickness in pixels for the lines in line plots<br>",
            "D": 1,
            "M": "Lines",
            "T": "float"
        },
        "adjustBezier": {
            "C": "Flag to automatically select the bezier line type. the bezier can start from the top or bottom (vertical), or from the side (horizontal). This will be based on the location of the two points joined by the line<br>",
            "D": false,
            "M": "Lines",
            "T": "boolean"
        },
        "colorScheme": {
            "C": "Color schemes can be user defined which will take the colors in the color property or one provided in canvasXpress. The order of the colors will be used to sequentially select when a different color is needed in a particular visualization<br>",
            "D": "User",
            "M": "Colors",
            "O": [
                "YlGn",
                "YlGnBu",
                "GnBu",
                "BuGn",
                "PuBuGn",
                "PuBu",
                "BuPu",
                "RdPu",
                "PuRd",
                "OrRd",
                "YlOrRd",
                "YlOrBr",
                "Purples",
                "Blues",
                "Greens",
                "Oranges",
                "Reds",
                "Greys",
                "PuOr",
                "BrBG",
                "PRGn",
                "PiYG",
                "RdBu",
                "RdGy",
                "RdYlBu",
                "Spectral",
                "RdYlGn",
                "Accent",
                "Dark2",
                "Paired",
                "Pastel1",
                "Pastel2",
                "Set1",
                "Set2",
                "Set3",
                "Default",
                "Basic",
                "Light",
                "Favorite",
                "Pastel",
                "Balanced",
                "Rpalette",
                "RlatticeBackground",
                "RlatticeShingle",
                "RlatticeLine",
                "RlatticePolygon",
                "Bootstrap",
                "Economist",
                "EconomistBG",
                "Excel",
                "Excel2",
                "Excel3",
                "GGPlot",
                "Solarized",
                "SolarizedBase",
                "PaulTol",
                "ColorBlind",
                "Tableau",
                "TableauGrey",
                "TableauColorBlind",
                "TableauTrafficLight",
                "TableauPurpleGrey",
                "TableauBlueRed",
                "TableauGreenOrange",
                "TableauCyclic",
                "TableauPairSequential",
                "TableauTripleDiverging",
                "WallStreetJournal",
                "WallStreetJournal2",
                "WallStreetJournal3",
                "WallStreetJournalRedGreen",
                "WallStreetJournalBlackGreen",
                "WallStreetJournalDemRep",
                "Stata",
                "Stata2",
                "Stata3",
                "StataMono",
                "BlackAndWhite",
                "CanvasXpress",
                "CanvasXpressT"
            ],
            "T": "string"
        },
        "colors": {
            "C": "Colors<br>",
            "D": [
                "#fe296c",
                "#487eb6",
                "#a7ce31",
                "#f8cc03",
                "#ff8c02",
                "#699696",
                "#b77844",
                "#83acd0",
                "#c2e076",
                "#fadc5a",
                "#ff549f",
                "#ffaf54",
                "#9ab8b7",
                "#d2a683",
                "#3d699b",
                "#87ac22",
                "#cda908",
                "#d02158",
                "#d07300",
                "#567676"
            ],
            "M": "Colors",
            "T": "array"
        },
        "colorSpectrum": {
            "C": "An array with valid color names to create a color brew for the default color indicators<br>",
            "D": [
                "#4575b4",
                "#91bfdb",
                "#e0f3f8",
                "#ffffbf",
                "#fee090",
                "#fc8d59",
                "#d73027"
            ],
            "M": "Colors",
            "T": "array"
        },
        "colorSpectrumBinned": {
            "C": "Flag to bin the color spectrum based on the colorSpectrumBreaks or the colorSpectrum colors<br>",
            "D": false,
            "M": "Colors",
            "T": "boolean"
        },
        "colorSpectrumBreaks": {
            "C": "An array with numbers in ascending order for the color spectrum to create discontinuous spectra. It must have the same length of the colorSpectrum array for example [0, 0.3, 1]<br>",
            "D": [],
            "M": "Colors",
            "T": "array"
        },
        "colorSpectrumZeroValue": {
            "C": "A value to be at the center of the color spectrum to produce symmetrical heatmaps<br>",
            "D": null,
            "M": "Colors",
            "T": "float"
        },
        "oddColor": {
            "C": "Color for the odd numbers in samples when the property block contrast is set in one dimensional plots or the color for odd number residues in translations in genome plots<br>",
            "D": "rgb(255,255,255)",
            "M": "Colors",
            "T": "color"
        },
        "evenColor": {
            "C": "Color for the even numbers in samples when the property block contrast is set in one dimensional plots or the color for odd number residues in translations in genome plots<br>",
            "D": "rgb(245,245,245)",
            "M": "Colors",
            "T": "color"
        },
        "blindnessType": {
            "C": "Color Blindness<br>",
            "D": false,
            "M": "Colors",
            "O": [
                false,
                "protanopia",
                "deuteranopia",
                "tritanopia",
                "monochromatic"
            ],
            "T": "string"
        },
        "roundedPolygonRadius": {
            "C": "Radius for rounded polygons<br>",
            "D": 5,
            "M": "Shapes",
            "T": "integer"
        },
        "useRoundRectangles": {
            "C": "Use round rectangles in bar graphs, stacked graphs and boxplots<br>",
            "D": false,
            "M": "Shapes",
            "T": "boolean"
        },
        "shapes": {
            "C": "Array with shapes used in visualizations. The order will dictate the utilization in the visualization<br>",
            "D": [
                "sphere",
                "square",
                "triangle",
                "star",
                "rhombus",
                "octagon",
                "oval",
                "plus",
                "minus",
                "pacman",
                "pacman2",
                "mdavid",
                "rect2",
                "pentagon",
                "rect3",
                "arc",
                "rectangle",
                "image"
            ],
            "M": "General Attributes",
            "T": "array"
        },
        "sizes": {
            "C": "Array with sizes used invisualizations. The order will dictate the utilization in the visualization<br>",
            "D": [
                8,
                12,
                16,
                20,
                24,
                28,
                32,
                36,
                40,
                44,
                48
            ],
            "M": "General Attributes",
            "T": "array"
        },
        "images": {
            "C": "Array of urls of images used in scatter plots. Additional shapes will be used if the array does not contain as many images as needed<br>",
            "D": [],
            "M": "General Attributes",
            "T": "array"
        },
        "patterns": {
            "C": "Patterns used in visualizations to fill objects. This array must contain one or more pattern names and in concert with the color array can be used to specify the pattern colors for all filled objects in the visualizations.. The order will dictate the utilization in the visualization<br>",
            "D": [
                "solid",
                "hatchForward",
                "hatchReverse",
                "stripeHorizontal",
                "stripeVertical",
                "polkaDot",
                "crossHatch",
                "crossStripe",
                "squares",
                "circles",
                "plus",
                "minus",
                "bars",
                "squiglesVertical",
                "squiglesHorizontal",
                "brickForward",
                "brickReverse",
                "art",
                "pcx",
                "hatchForward3",
                "hatchReverse3"
            ],
            "M": "General Attributes",
            "T": "array"
        },
        "linePatterns": {
            "C": "Line Patterns used in line visualizations<br>",
            "D": [
                "solid",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "M": "General Attributes",
            "T": "array"
        },
        "maxSmpStringLen": {
            "C": "Maximum length in characters a sample label or description can have so anything above is truncated<br>",
            "D": 25,
            "M": "Samples",
            "T": "integer"
        },
        "smpTitle": {
            "C": "Title for the sample axis in one dimensional plots<br>",
            "D": false,
            "M": "Samples",
            "T": "string"
        },
        "smpLabelInterval": {
            "C": "Interval for the sample labels in one dimensional and circular plots<br>",
            "D": 1,
            "M": "Samples",
            "T": "integer"
        },
        "smpLabelImage": {
            "C": "Use images as sample labels when possible<br>",
            "D": false,
            "M": "Samples",
            "T": "boolean"
        },
        "smpLabelImageRound": {
            "C": "Use round images as sample labels<br>",
            "D": false,
            "M": "Samples",
            "T": "boolean"
        },
        "showSampleNames": {
            "C": "Flag to show/hide the sample names<br>",
            "D": true,
            "M": "Samples",
            "T": "boolean"
        },
        "highlightSmp": {
            "C": "Name of samples to highlight<br>",
            "D": [],
            "M": "Samples",
            "T": "array"
        },
        "smpHighlightColor": {
            "C": "Color for the higlighted samples<br>",
            "D": "rgb(255,0,0)",
            "M": "Samples",
            "T": "color"
        },
        "smpTitleFontStyle": {
            "C": "Font style for the sample title<br>",
            "D": "",
            "M": "Samples",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "smpTitleColor": {
            "C": "Color for the text in sample title<br>",
            "D": "rgb(0,0,0)",
            "M": "Samples",
            "T": "color"
        },
        "smpTitleFontSize": {
            "C": "Font size for the text in sample title. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the smpTitleScaleFontFactor<br>",
            "D": 11,
            "M": "Samples",
            "T": "integer"
        },
        "smpTitleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the sample title font size in the canvas<br>",
            "D": 1,
            "M": "Samples",
            "T": "float"
        },
        "smpTitleAlign": {
            "C": "Alignment (or position) for the sample title<br>",
            "D": "center",
            "M": "Samples",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "smpTitleBaseline": {
            "C": "Baseline (or reference line) for the sample title<br>",
            "D": "middle",
            "M": "Samples",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "smpTitleRotate": {
            "C": "Rotation in degrees for the sample title<br>",
            "D": 0,
            "M": "Samples",
            "T": "integer"
        },
        "smpTitleMargin": {
            "C": "Margin to pad or separate the characters in the sample title<br>",
            "D": 5,
            "M": "Samples",
            "T": "float"
        },
        "smpTextFontStyle": {
            "C": "Font style for the sample labels<br>",
            "D": "",
            "M": "Samples",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "smpTextColor": {
            "C": "Color for the text in sample labels<br>",
            "D": "rgb(0,0,0)",
            "M": "Samples",
            "T": "color"
        },
        "smpTextFontSize": {
            "C": "Font size for the text in sample labels. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the smpTextScaleFontFactor<br>",
            "D": 11,
            "M": "Samples",
            "T": "integer"
        },
        "smpTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the sample labels font size in the canvas<br>",
            "D": 1,
            "M": "Samples",
            "T": "float"
        },
        "smpTextAlign": {
            "C": "Alignment (or position) for the sample labels<br>",
            "D": "center",
            "M": "Samples",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "smpTextBaseline": {
            "C": "Baseline (or reference line) for the sample labels<br>",
            "D": "middle",
            "M": "Samples",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "smpTextRotate": {
            "C": "Rotation in degrees for the sample labels<br>",
            "D": 0,
            "M": "Samples",
            "T": "integer"
        },
        "smpTextMargin": {
            "C": "Margin to pad or separate the characters in the sample labels<br>",
            "D": 5,
            "M": "Samples",
            "T": "float"
        },
        "maxVarStringLen": {
            "C": "Maximum length in characters a variable label or description can have so anything above is truncated<br>",
            "D": 25,
            "M": "Variables",
            "T": "integer"
        },
        "varTitle": {
            "C": "Title for the variables in hetamap plots<br>",
            "D": false,
            "M": "Variables",
            "T": "string"
        },
        "varLabelInterval": {
            "C": "Interval for the variable labels in heatmaps<br>",
            "D": 1,
            "M": "Variables",
            "T": "integer"
        },
        "showVariableNames": {
            "C": "Flag to show/hide the variable names<br>",
            "D": true,
            "M": "Variables",
            "T": "boolean"
        },
        "highlightVar": {
            "C": "Name of variables to highlight<br>",
            "D": [],
            "M": "Variables",
            "T": "array"
        },
        "varHighlightColor": {
            "C": "Color for the higlighted variables<br>",
            "D": "rgb(255,0,0)",
            "M": "Variables",
            "T": "color"
        },
        "varTitleFontStyle": {
            "C": "Font style for the variable title<br>",
            "D": "",
            "M": "Variables",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "varTitleColor": {
            "C": "Color for the text in variable title<br>",
            "D": "rgb(0,0,0)",
            "M": "Variables",
            "T": "color"
        },
        "varTitleFontSize": {
            "C": "Font size for the text in variable title. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the varTitleScaleFontFactor<br>",
            "D": 11,
            "M": "Variables",
            "T": "integer"
        },
        "varTitleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the variable title font size in the canvas<br>",
            "D": 1,
            "M": "Variables",
            "T": "float"
        },
        "varTitleAlign": {
            "C": "Alignment (or position) for the variable title<br>",
            "D": "center",
            "M": "Variables",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "varTitleBaseline": {
            "C": "Baseline (or reference line) for the variable title<br>",
            "D": "middle",
            "M": "Variables",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "varTitleRotate": {
            "C": "Rotation in degrees for the variable title<br>",
            "D": 0,
            "M": "Variables",
            "T": "integer"
        },
        "varTitleMargin": {
            "C": "Margin to pad or separate the characters in the variable title<br>",
            "D": 5,
            "M": "Variables",
            "T": "float"
        },
        "varTextFontStyle": {
            "C": "Font style for the variable text<br>",
            "D": "",
            "M": "Variables",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "varTextColor": {
            "C": "Color for the text in variable text<br>",
            "D": "rgb(0,0,0)",
            "M": "Variables",
            "T": "color"
        },
        "varTextFontSize": {
            "C": "Font size for the text in variable text. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the varTextScaleFontFactor<br>",
            "D": 11,
            "M": "Variables",
            "T": "integer"
        },
        "varTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the variable text font size in the canvas<br>",
            "D": 1,
            "M": "Variables",
            "T": "float"
        },
        "varTextAlign": {
            "C": "Alignment (or position) for the variable text<br>",
            "D": "center",
            "M": "Variables",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "varTextBaseline": {
            "C": "Baseline (or reference line) for the variable text<br>",
            "D": "middle",
            "M": "Variables",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "varTextRotate": {
            "C": "Rotation in degrees for the variable text<br>",
            "D": 0,
            "M": "Variables",
            "T": "integer"
        },
        "varTextMargin": {
            "C": "Margin to pad or separate the characters in the variable text<br>",
            "D": 5,
            "M": "Variables",
            "T": "float"
        },
        "binConfigurations": {
            "C": "Properties for the binning functions<br>",
            "D": {},
            "M": "Bins",
            "T": "object"
        },
        "maxOverlayStringLen": {
            "C": "Maximum length in characters for the sample or variable metadata when included as an overlay. Anything above is truncated<br>",
            "D": 30,
            "M": "Overlays",
            "T": "integer"
        },
        "overlaysThickness": {
            "C": "Relative length in pixels for the thickness of the colored boxes to classify samples and or variables in one dimensional plots. This value is adjusted acording to the graph dimensions if the adjustAspectRatio parameter is set to true<br>",
            "D": 18,
            "M": "Overlays",
            "T": "integer"
        },
        "smpOverlays": {
            "C": "Sample metadata to overlay in one dimensional plots<br>",
            "D": [],
            "M": "Overlays",
            "T": "array"
        },
        "smpOverlayProperties": {
            "C": "Object to assign properties of the sample overlays. The key should be a valid sample annotation (metadata) and the value and object with properties like: type, color, spectrum, scheme, showLegend, showName, showBox, rotate, position, thicknes<br>",
            "D": {},
            "M": "Overlays",
            "T": "object"
        },
        "smpOverlaysLegendColumns": {
            "C": "Number of columns for the sample overlay legends<br>",
            "D": 1,
            "M": "Overlays",
            "T": "integer"
        },
        "showSmpOverlaysLegend": {
            "C": "Flag to show/hide the sample overlay legends<br>",
            "D": false,
            "M": "Overlays",
            "T": "boolean"
        },
        "varOverlays": {
            "C": "Variable metadata to overlay in heatmap plots<br>",
            "D": [],
            "M": "Overlays",
            "T": "array"
        },
        "varOverlayProperties": {
            "C": "Object to assign properties of the variable overlays. The key should be a valid variable annotation (metadata) and the value and object with properties like: type, color, spectrum, scheme, showLegend, showName, showBox, rotate, position, thicknes<br>",
            "D": {},
            "M": "Overlays",
            "T": "object"
        },
        "varOverlaysLegendColumns": {
            "C": "Number of columns for the variable overlay legends<br>",
            "D": 1,
            "M": "Overlays",
            "T": "integer"
        },
        "showVarOverlaysLegend": {
            "C": "Flag to show/hide the sample overlay legends<br>",
            "D": false,
            "M": "Overlays",
            "T": "boolean"
        },
        "overlaysLegendPosition": {
            "C": "Position for the the variable and sample overlays legend<br>",
            "D": "topRight",
            "M": "Overlays",
            "O": [
                "topRight",
                "right",
                "bottomLeft",
                "bottom"
            ],
            "T": "string"
        },
        "showOverlays": {
            "C": "Flag to show/hide the overlays in one dimensional plots<br>",
            "D": true,
            "M": "Overlays",
            "T": "boolean"
        },
        "showNameOverlays": {
            "C": "Flag to show/hide the the overlays name<br>",
            "D": true,
            "M": "Overlays",
            "T": "boolean"
        },
        "showValueOverlays": {
            "C": "Flag to show/hide the overlay values in one dimensional plots<br>",
            "D": true,
            "M": "Overlays",
            "T": "boolean"
        },
        "overlayTextFontStyle": {
            "C": "Font style for the overlays<br>",
            "D": "",
            "M": "Overlays",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "overlayTextColor": {
            "C": "Color for the text in overlays<br>",
            "D": "rgb(0,0,0)",
            "M": "Overlays",
            "T": "color"
        },
        "overlayTextFontSize": {
            "C": "Font size for the text in overlays. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the overlayTextScaleFontFactor<br>",
            "D": 11,
            "M": "Overlays",
            "T": "integer"
        },
        "overlayTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the overlays font size in the canvas<br>",
            "D": 1,
            "M": "Overlays",
            "T": "float"
        },
        "overlayTextAlign": {
            "C": "Alignment (or position) for the overlays<br>",
            "D": "center",
            "M": "Overlays",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "overlayTextBaseline": {
            "C": "Baseline (or reference line) for the overlays<br>",
            "D": "middle",
            "M": "Overlays",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "overlayTextRotate": {
            "C": "Rotation in degrees for the overlays<br>",
            "D": 0,
            "M": "Overlays",
            "T": "integer"
        },
        "overlayTextMargin": {
            "C": "Margin to pad or separate the characters in the overlays<br>",
            "D": 5,
            "M": "Overlays",
            "T": "float"
        },
        "panelOverlayBackgroundColor": {
            "C": "Color for the panel background<br>",
            "D": "rgb(255,255,255)",
            "M": "Overlays",
            "T": "color"
        },
        "panelOverlayBackgroundBorderColor": {
            "C": "Color for the border in panel background<br>",
            "D": "rgba(204,204,204,1)",
            "M": "Overlays",
            "T": "color"
        },
        "panelOverlayBackgroundBorderSize": {
            "C": "Size for the border line in panel background<br>",
            "D": 1,
            "M": "Overlays",
            "T": "float"
        },
        "panelOverlayBackgroundBorderLineType": {
            "C": "Type of line for the border in panel background<br>",
            "D": "solid",
            "M": "Overlays",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "legendInside": {
            "C": "Position the legend inside the graphs<br>",
            "D": false,
            "M": "Legends",
            "T": "boolean"
        },
        "legendColumns": {
            "C": "Number of columns in legends<br>",
            "D": 1,
            "M": "Legends",
            "T": "integer"
        },
        "legendRows": {
            "C": "Number of rows in legends<br>",
            "D": 1,
            "M": "Legends",
            "T": "integer"
        },
        "legendOrder": {
            "C": "Object to specify custom order for the levels in the legends. The key of the object is the name of a valid sample or variable annotation included in the data object. The value for element is an array with the levels for the corresponding factor<br>",
            "D": false,
            "M": "Legends",
            "T": "object"
        },
        "legendOrderByCols": {
            "C": "Draw legends by columns in the graphs<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "customLegend": {
            "C": "Custom legends : Array of objects [{ size : [], shape : [], shapeColor : [], line : [], lineColor : [], lineStart : [], lineEnd : [], text : [], x : number, y : number, title : string }]<br>",
            "D": [],
            "M": "Legends",
            "T": "array"
        },
        "showLegend": {
            "C": "Flag to show/hide the legend<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showVariableLegend": {
            "C": "Flag to show/hide the legend variable<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showSampleLegend": {
            "C": "Flag to show/hide the legend sample. Not implemented!!!!!<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showColorLegend": {
            "C": "Flag to show/hide the legend color<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showShapeLegend": {
            "C": "Flag to show/hide the legend shape<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showSizeLegend": {
            "C": "Flag to show/hide the legend size<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showOutlineLegend": {
            "C": "Flag to show/hide the legend outline<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showPatternLegend": {
            "C": "Flag to show/hide the legend pattern<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showConnectLegend": {
            "C": "Flag to show/hide the legend connect<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showLineLegend": {
            "C": "Flag to show/hide the legend line<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showColorLabelLegend": {
            "C": "Flag to show/hide the legend label color<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showSizeLabelLegend": {
            "C": "Flag to show/hide the legend label size<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showColorNodeLegend": {
            "C": "Flag to show/hide the legend node color<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showShapeNodeLegend": {
            "C": "Flag to show/hide the legend node shape<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showSizeNodeLegend": {
            "C": "Flag to show/hide the legend node size<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showPatternNodeLegend": {
            "C": "Flag to show/hide the legend node pattern<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showColorEdgeLegend": {
            "C": "Flag to show/hide the legend edge color<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showSizeEdgeLegend": {
            "C": "Flag to show/hide the legend edge size<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showLegendTitle": {
            "C": "Flag to show/hide the the legend title<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "showLegendBorder": {
            "C": "Flag to show/hide the the legend border<br>",
            "D": true,
            "M": "Legends",
            "T": "boolean"
        },
        "legendPosition": {
            "C": "Position for the the legend<br>",
            "D": "right",
            "M": "Legends",
            "O": [
                "topRight",
                "right",
                "bottomRight",
                "bottom",
                "bottomLeft",
                "left",
                "topLeft",
                "top"
            ],
            "T": "string"
        },
        "legendHorizontalJustification": {
            "C": "Horizontal justification for legends when legend are in top or bottom positions<br>",
            "D": 0.5,
            "M": "Legends",
            "T": "float"
        },
        "legendVerticalJustification": {
            "C": "Vertical justification for legends when legend are in left or right positions<br>",
            "D": 0.5,
            "M": "Legends",
            "T": "float"
        },
        "legendDirection": {
            "C": "Direction for legend<br>",
            "D": "vertical",
            "M": "Legends",
            "O": [
                "vertical",
                "horizontal"
            ],
            "T": "string"
        },
        "legendBackgroundColor": {
            "C": "Color for the legend background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Legends",
            "T": "color"
        },
        "legendBackgroundBorderColor": {
            "C": "Color for the border in legend background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Legends",
            "T": "color"
        },
        "legendBackgroundBorderSize": {
            "C": "Size for the border line in legend background<br>",
            "D": 0.5,
            "M": "Legends",
            "T": "float"
        },
        "legendBackgroundBorderLineType": {
            "C": "Type of line for the border in legend background<br>",
            "D": "solid",
            "M": "Legends",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "legendKeyBackgroundColor": {
            "C": "Color for the legend key background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Legends",
            "T": "color"
        },
        "legendKeyBackgroundBorderColor": {
            "C": "Color for the border in legend key background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Legends",
            "T": "color"
        },
        "legendKeyBackgroundBorderSize": {
            "C": "Size for the border line in legend key background<br>",
            "D": 1,
            "M": "Legends",
            "T": "float"
        },
        "legendKeyBackgroundBorderLineType": {
            "C": "Type of line for the border in legend key background<br>",
            "D": "solid",
            "M": "Legends",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "legendKeySize": {
            "C": "Width in pixels for the legend key<br>",
            "D": 15,
            "M": "Legends",
            "T": "integer"
        },
        "legendKeyMargin": {
            "C": "Width in pixels for the legend key margin<br>",
            "D": 5,
            "M": "Legends",
            "T": "integer"
        },
        "legendTextFontStyle": {
            "C": "Font style for the legends<br>",
            "D": "",
            "M": "Legends",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "legendTextColor": {
            "C": "Color for the text in legends<br>",
            "D": "rgb(0,0,0)",
            "M": "Legends",
            "T": "color"
        },
        "legendTextFontSize": {
            "C": "Font size for the text in legends. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the legendTextScaleFontFactor<br>",
            "D": 11,
            "M": "Legends",
            "T": "integer"
        },
        "legendTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the legends font size in the canvas<br>",
            "D": 1,
            "M": "Legends",
            "T": "float"
        },
        "legendTextAlign": {
            "C": "Alignment (or position) for the legends<br>",
            "D": "left",
            "M": "Legends",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "legendTextBaseline": {
            "C": "Baseline (or reference line) for the legends<br>",
            "D": "middle",
            "M": "Legends",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "legendTextRotate": {
            "C": "Rotation in degrees for the legends<br>",
            "D": 0,
            "M": "Legends",
            "T": "integer"
        },
        "legendTextMargin": {
            "C": "Margin to pad or separate the characters in the legends<br>",
            "D": 8,
            "M": "Legends",
            "T": "float"
        },
        "legendTitleFontStyle": {
            "C": "Font style for the legends<br>",
            "D": "",
            "M": "Legends",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "legendTitleColor": {
            "C": "Color for the text in legends<br>",
            "D": "rgb(0,0,0)",
            "M": "Legends",
            "T": "color"
        },
        "legendTitleFontSize": {
            "C": "Font size for the text in legends. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the legendTitleScaleFontFactor<br>",
            "D": 11,
            "M": "Legends",
            "T": "integer"
        },
        "legendTitleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the legends font size in the canvas<br>",
            "D": 1,
            "M": "Legends",
            "T": "float"
        },
        "legendTitleAlign": {
            "C": "Alignment (or position) for the legends<br>",
            "D": "left",
            "M": "Legends",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "legendTitleBaseline": {
            "C": "Baseline (or reference line) for the legends<br>",
            "D": "middle",
            "M": "Legends",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "legendTitleRotate": {
            "C": "Rotation in degrees for the legends<br>",
            "D": 0,
            "M": "Legends",
            "T": "integer"
        },
        "legendTitleMargin": {
            "C": "Margin to pad or separate the characters in the legends<br>",
            "D": 8,
            "M": "Legends",
            "T": "float"
        },
        "decorationsWidth": {
            "C": "Length in pixels of the width for the decorations in the networks<br>",
            "D": 20,
            "M": "Decorations",
            "T": "integer"
        },
        "decorationsHeight": {
            "C": "Length in pixels of the height for the decorations in the networks<br>",
            "D": 40,
            "M": "Decorations",
            "T": "integer"
        },
        "decorationsType": {
            "C": "Type for the decorations in the networks. The types stacked and stackedpercent must be two dimensional. Heatmap could be one or two dimensional<br>",
            "D": "bar",
            "M": "Decorations",
            "O": [
                "pie",
                "bar",
                "heatmap",
                "stacked",
                "stackedpercent"
            ],
            "T": "string"
        },
        "decorations": {
            "C": "Name of the node properties to include in the network decorations in the data.nodes object<br>",
            "D": false,
            "M": "Decorations",
            "T": "object"
        },
        "decorationsColors": {
            "C": "Array of colors used for selection in network decorations not to be confused by its singular form decorationsColor above<br>",
            "D": [],
            "M": "Decorations",
            "T": "array"
        },
        "decorationsProperties": {
            "C": "Object to assign properties like color for the network decorations<br>",
            "D": {},
            "M": "Decorations",
            "T": "object"
        },
        "decorationsClipped": {
            "C": "Clipp decorations to the x,y area of the plot.<br>",
            "D": true,
            "M": "Decorations",
            "T": "boolean"
        },
        "decorationsTransparency": {
            "C": "Transparency for range decorations<br>",
            "D": 0.2,
            "M": "Decorations",
            "T": "float"
        },
        "showDecorations": {
            "C": "Flag to show/hide the decorations<br>",
            "D": true,
            "M": "Decorations",
            "T": "boolean"
        },
        "showDecorationsLegend": {
            "C": "Flag to show/hide the decoration legends<br>",
            "D": true,
            "M": "Decorations",
            "T": "boolean"
        },
        "showDecorationsBorder": {
            "C": "Flag to show/hide the the decoration legends border<br>",
            "D": false,
            "M": "Decorations",
            "T": "boolean"
        },
        "decorationsPosition": {
            "C": "Position for the the decorations<br>",
            "D": "bottom",
            "M": "Decorations",
            "O": [
                "topRight",
                "right",
                "bottomRight",
                "bottom",
                "bottomLeft",
                "left",
                "topLeft",
                "top"
            ],
            "T": "string"
        },
        "decorationsBackgroundColor": {
            "C": "Color for the decoration legends background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Decorations",
            "T": "color"
        },
        "decorationsBackgroundBorderColor": {
            "C": "Color for the border in decoration legends background<br>",
            "D": "rgb(204,204,204)",
            "M": "Decorations",
            "T": "color"
        },
        "decorationsBackgroundBorderSize": {
            "C": "Size for the border line in decoration legends background<br>",
            "D": 0.5,
            "M": "Decorations",
            "T": "float"
        },
        "decorationsBackgroundBorderLineType": {
            "C": "Type of line for the border in decoration legends background<br>",
            "D": "solid",
            "M": "Decorations",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "decorationsTextFontStyle": {
            "C": "Font style for the decoration legends<br>",
            "D": "",
            "M": "Decorations",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "decorationsTextColor": {
            "C": "Color for the text in decoration legends<br>",
            "D": "rgb(0,0,0)",
            "M": "Decorations",
            "T": "color"
        },
        "decorationsTextFontSize": {
            "C": "Font size for the text in decoration legends. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the decorationsTextScaleFontFactor<br>",
            "D": 11,
            "M": "Decorations",
            "T": "integer"
        },
        "decorationsTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the decoration legends font size in the canvas<br>",
            "D": 1,
            "M": "Decorations",
            "T": "float"
        },
        "decorationsTextAlign": {
            "C": "Alignment (or position) for the decoration legends<br>",
            "D": "center",
            "M": "Decorations",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "decorationsTextBaseline": {
            "C": "Baseline (or reference line) for the decoration legends<br>",
            "D": "middle",
            "M": "Decorations",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "decorationsTextRotate": {
            "C": "Rotation in degrees for the decoration legends<br>",
            "D": 0,
            "M": "Decorations",
            "T": "integer"
        },
        "decorationsTextMargin": {
            "C": "Margin to pad or separate the characters in the decoration legends<br>",
            "D": 5,
            "M": "Decorations",
            "T": "float"
        },
        "decorationsOnTop": {
            "C": "Draw decorations after drawing the data<br>",
            "D": true,
            "M": "Decorations",
            "T": "boolean"
        },
        "decorationsTransform": {
            "C": "Transform the data in decorations produced in Cxplot<br>",
            "D": true,
            "M": "Decorations",
            "T": "boolean"
        },
        "groupingFactors": {
            "C": "An array that holds the group names used for grouping the data. It must be a category in the data.x object<br>",
            "D": [],
            "M": "Data",
            "T": "array"
        },
        "summaryType": {
            "C": "Summary type for the data when grouping<br>",
            "D": false,
            "M": "Data",
            "O": [
                false,
                "iqr",
                "median",
                "mean",
                "cor",
                "min",
                "max",
                "count",
                "sum"
            ],
            "T": "string"
        },
        "transposeData": {
            "C": "Flag to transpose data as a parameter. This parameter accomplishes the same as the function transpose at load time<br>",
            "D": false,
            "M": "Data",
            "T": "boolean"
        },
        "appendNetworkData": {
            "C": "Array containing additional data files to append to networks. Useful for loading KEGG and Wikipatways to decorate the nodes and the edges<br>",
            "D": [],
            "M": "Data",
            "T": "array"
        },
        "dataTextFontStyle": {
            "C": "Font style for the data labels<br>",
            "D": "",
            "M": "Data",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "dataTextColor": {
            "C": "Color for the text in data labels<br>",
            "D": "rgb(0,0,0)",
            "M": "Data",
            "T": "color"
        },
        "dataTextFontSize": {
            "C": "Font size for the text in data labels. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the dataTextScaleFontFactor<br>",
            "D": 11,
            "M": "Data",
            "T": "integer"
        },
        "dataTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the data labels font size in the canvas<br>",
            "D": 1,
            "M": "Data",
            "T": "float"
        },
        "dataTextAlign": {
            "C": "Alignment (or position) for the data labels<br>",
            "D": "center",
            "M": "Data",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "dataTextBaseline": {
            "C": "Baseline (or reference line) for the data labels<br>",
            "D": "middle",
            "M": "Data",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "dataTextRotate": {
            "C": "Rotation in degrees for the data labels<br>",
            "D": 0,
            "M": "Data",
            "T": "integer"
        },
        "dataTextMargin": {
            "C": "Margin to pad or separate the characters in the data labels<br>",
            "D": 5,
            "M": "Data",
            "T": "float"
        },
        "asSampleFactors": {
            "C": "Array containing variable names. Numeric variable data (in rows) to be treated as a sample factor (move from y to x object). This parameter accomplishes the same as the function switchVarToAnnotation at load time. It can be used in conjunction with the parameter stringSampleFactors to be treated as a string. TO DO: write example<br>",
            "D": [],
            "M": "Data Context",
            "T": "array"
        },
        "asVariableFactors": {
            "C": "Array containing sample names. Numeric sample data (in columns) to be treated as a variable factor (move from y to z object). This parameter accomplishes the same as the function switchSmpToAnnotation at load time. It can be used in conjunction with the parameter stringVariableFactors to be treated as a string. TO DO: write example<br>",
            "D": [],
            "M": "Data Context",
            "T": "array"
        },
        "stringSampleFactors": {
            "C": "Array containing sample factors. The numeric sample factors will be treated as strings. This parameter accomplishes the same as the function switchNumericToString for samples at load time. It can be used in conjunction with the parameter asSampleFactors. TO DO: write example<br>",
            "D": [],
            "M": "Data Context",
            "T": "array"
        },
        "stringVariableFactors": {
            "C": "Array containing variable factors. The numeric variable factors will be treated as strings. This parameter accomplishes the same as the function switchNumericToString for variables at load time. It can be used in conjunction with the parameter asVariableFactors. TO DO: write example<br>",
            "D": [],
            "M": "Data Context",
            "T": "array"
        },
        "stringNodeAttributes": {
            "C": "Array containing node attributes. The numeric node attributes will be treated as strings. This parameter accomplishes the same as the function switchNumericToString for nodes at load time<br>",
            "D": [],
            "M": "Data Context",
            "T": "array"
        },
        "stringEdgeAttributes": {
            "C": "Array containing edge attributes. The numeric edge attributes will be treated as strings. This parameter accomplishes the same as the function switchNumericToString for edges at load time<br>",
            "D": [],
            "M": "Data Context",
            "T": "array"
        },
        "transformData": {
            "C": "Default transformation type for ALL the data. Data can also be transformed by axis (x,y,z) to give more flexibility. false, save, reset and undo are NOT real transformations. They are only used in the canvasXpress UIs to save the transformed data<br>",
            "D": false,
            "M": "Data Transformation",
            "O": [
                false,
                "log2",
                "log10",
                "-log2",
                "-log10",
                "exp2",
                "exp10",
                "sqrt",
                "percentile",
                "zscore",
                "ratio2",
                "ratio10",
                "save",
                "reset",
                "undo"
            ],
            "T": "string"
        },
        "transformAxis": {
            "C": "Default axis to use to transform the data when either z-score or ratio transformation is used<br>",
            "D": "samples",
            "M": "Data Transformation",
            "O": [
                "samples",
                "variables"
            ],
            "T": "string"
        },
        "ratioReference": {
            "C": "Default index of sample used in ratio transformation. Almost private parameters used within the different CanvasXpress UIs<br>",
            "D": 0,
            "M": "Data Ratio Reference",
            "T": "integer"
        },
        "ratioSampleReference": {
            "C": "Name of the sample used in ratio transformation. Almost private parameters used within the different CanvasXpress UIs<br>",
            "D": false,
            "M": "Data Ratio Reference",
            "O": [
                false
            ],
            "T": "string"
        },
        "ratioGroupReference": {
            "C": "Name of the group used in ratio transformation. Almost private parameters used within the different CanvasXpress UIs<br>",
            "D": false,
            "M": "Data Ratio Reference",
            "O": [
                false
            ],
            "T": "string"
        },
        "ratioLevelReference": {
            "C": "Name of the level used in ratio transformation. Almost private parameters used within the different CanvasXpress UIs<br>",
            "D": false,
            "M": "Data Ratio Reference",
            "O": [],
            "T": "string"
        },
        "segregateSamplesBy": {
            "C": "An array that holds the annotation(s) used to segregate the samples ala Facet way in R. It must be categories in the data.x object<br>",
            "D": [],
            "M": "Data Faceting",
            "T": "array"
        },
        "segregateVariablesBy": {
            "C": "An array that holds the annotation(s) used to segregate the variables ala Facet way in R. It must be categories in the data.z object<br>",
            "D": [],
            "M": "Data Faceting",
            "T": "array"
        },
        "splitSamplesBy": {
            "C": "Factor (in the x data object) used to split the samples ala split in complex heatmap<br>",
            "D": false,
            "M": "Data Faceting",
            "T": "string"
        },
        "splitVariablesBy": {
            "C": "Factor (in the z data object) used to separate the variables ala split in complex heatmap<br>",
            "D": false,
            "M": "Data Faceting",
            "T": "string"
        },
        "splitSeparation": {
            "C": "Length in pixels to separate the splits in samples and variables<br>",
            "D": 10,
            "M": "Data Faceting",
            "T": "integer"
        },
        "timeFormat": {
            "C": "Time Format according to date.format.js Steven Levithan <stevenlevithan.com><br>",
            "D": "isoDate",
            "M": "Data Time Series",
            "O": [
                "default",
                "shortDate",
                "mediumDate",
                "longDate",
                "fullDate",
                "shortTime",
                "mediumTime",
                "longTime",
                "isoDate",
                "isoTime",
                "isoDateTime",
                "isoUtcDateTime",
                "year",
                "month",
                "day",
                "hour",
                "minute",
                "second"
            ],
            "T": "string"
        },
        "isGraphTime": {
            "C": "Flag to indicate if the data is a time series so there is no need to plot every time interval. It is boolean in one dimensional plots or a string indicating the axis which is timed x, y or z<br>",
            "D": false,
            "M": "Data Time Series",
            "T": "boolean"
        },
        "sortDir": {
            "C": "Default direction for data sorting. Almost private parameters used within the different CanvasXpress UIs<br>",
            "D": "ascending",
            "M": "Data Sorting",
            "O": [
                "ascending",
                "descending"
            ],
            "T": "string"
        },
        "sortCaseSensitive": {
            "C": "Whether to use case sensitive in ascii sorting. Almost private parameters used within the different CanvasXpress UIs<br>",
            "D": false,
            "M": "Data Sorting",
            "T": "boolean"
        },
        "sortData": {
            "C": "Array of arrays with sorting functions. Each function takes three parameters. The first parameter must be either smp to identify the parameters are related to the samples, var to identify  the parameters are related to the variables, or cat to identify a sample or variable category. The second parameter can be either smp to indicate to sort the sample indices or var to indicate to sort the variable indices. The third parameter is the value for the key referenced by the first parameter. A special case for this parameter could be samples or variables to indicate to sort by the names of the samples or variables respectively. Here are some examples to sort the samples in the data: [ [cat, smp, Factor1] ]   : Sort the samples by the sample category Factor1 [ [var, smp, Variable1] ] : Sort the samples by the value of the Variable1 [ [cat, smp, samples] ]   : Sort the samples by their name.  Important!!!! This parameter will clean the data and remove any variables not used in the dataset at load time<br>",
            "D": [],
            "M": "Data Sorting",
            "T": "array"
        },
        "sortOnGrouping": {
            "C": "Sort the name of the groups after sample grouping.<br><br>",
            "D": false,
            "M": "Data Sorting",
            "O": [
                false,
                "ascending",
                "descending"
            ],
            "T": "string"
        },
        "sortIncludeEmpty": {
            "C": "Include empty groups when sorting<br>",
            "D": true,
            "M": "Data Sorting",
            "T": "boolean"
        },
        "missingDataColor": {
            "C": "Color for the missing data<br>",
            "D": "rgb(245,245,245)",
            "M": "Missing Data",
            "T": "color"
        },
        "missingDataValue": {
            "C": "String value use to specify missing data<br>",
            "D": "NA",
            "M": "Missing Data",
            "T": "string"
        },
        "nanOmit": {
            "C": "Flag to omit NaN values in log transformation<br>",
            "D": false,
            "M": "Missing Data",
            "T": "boolean"
        },
        "showErrorBars": {
            "C": "Flag to show/hide the error bars in graphs<br>",
            "D": true,
            "M": "Error Bars",
            "T": "boolean"
        },
        "errorBarsType": {
            "C": "Type of error bars<br>",
            "D": "confidenceInterval95",
            "M": "Error Bars",
            "O": [
                "standardDeviation",
                "standardErrorMean",
                "confidenceInterval95"
            ],
            "T": "string"
        },
        "errorBarsColor": {
            "C": "Color for the error bars in dotplots and barplots<br>",
            "D": "rgb(0,0,0)",
            "M": "Error Bars",
            "T": "color"
        },
        "errorBarsThickness": {
            "C": "Thickness for the error bars in dotplots<br>",
            "D": 3,
            "M": "Error Bars",
            "T": "float"
        },
        "errorBarsWidth": {
            "C": "Minimum size of the bar in pixels to determine to show or hide error bar ends in the graphs when available<br>",
            "D": 2,
            "M": "Error Bars",
            "T": "integer"
        },
        "standardDeviationType": {
            "C": "Type of Standard Deviation. biased uses n as denominator and unbiased uses (n - 1) as denominator where n is the number of values<br>",
            "D": "unbiased",
            "M": "Error Bars",
            "O": [
                "biased",
                "unbiased"
            ],
            "T": "string"
        },
        "randomSeed": {
            "C": "Specifies the random seed number to create pseudo random numbers<br>",
            "D": 8,
            "M": "Random",
            "T": "integer"
        },
        "pseudoRandom": {
            "C": "Flag to indicate to use pseudo random rather than random<br>",
            "D": true,
            "M": "Random",
            "T": "boolean"
        },
        "randomMethod": {
            "C": "Random method<br>",
            "D": "numericalRecipes",
            "M": "Random",
            "O": [
                "jenkins",
                "numericalRecipes"
            ],
            "T": "string"
        },
        "randomDataDistribution": {
            "C": "Distribution for the random data<br>",
            "D": "biased",
            "M": "Random",
            "O": [
                "range",
                "normal",
                "uniform",
                "symmetrical",
                "biased"
            ],
            "T": "string"
        },
        "randomDataTime": {
            "C": "Flag to create or not time series random data for debug and demonstration purposes<br>",
            "D": false,
            "M": "Random",
            "T": "boolean"
        },
        "randomDataMin": {
            "C": "Minimun value when creating random data<br>",
            "D": 1,
            "M": "Random",
            "T": "integer"
        },
        "randomDataMax": {
            "C": "Maxmun value when creating random data<br>",
            "D": 100,
            "M": "Random",
            "T": "integer"
        },
        "randomDataMean": {
            "C": "Mean value when creating random data<br>",
            "D": 0,
            "M": "Random",
            "T": "integer"
        },
        "randomDataSigma": {
            "C": "Sigma value when creating random data<br>",
            "D": 1,
            "M": "Random",
            "T": "integer"
        },
        "randomDataVariables": {
            "C": "Default number of variables when creating random data<br>",
            "D": 3,
            "M": "Random",
            "T": "integer"
        },
        "randomDataSamples": {
            "C": "Default number of samples when creating random data<br>",
            "D": 36,
            "M": "Random",
            "T": "integer"
        },
        "randomDataVariableAnnotations": {
            "C": "Default number of variable annotations when creating random data<br>",
            "D": 2,
            "M": "Random",
            "T": "integer"
        },
        "randomDataSampleAnnotations": {
            "C": "Default number of sample annotations when creating random data<br>",
            "D": 2,
            "M": "Random",
            "T": "integer"
        },
        "randomMissingDataPercentage": {
            "C": "Default percentage of missing values when creating random data. A value between 0 and 1<br>",
            "D": 0,
            "M": "Random",
            "T": "float"
        },
        "randomNetworkReduce": {
            "C": "Flag to create or not a single random network for debug and demonstration purposes<br>",
            "D": true,
            "M": "Random",
            "T": "boolean"
        },
        "randomNetworkNodes": {
            "C": "Default number of nodes when creating random networks<br>",
            "D": 40,
            "M": "Random",
            "T": "integer"
        },
        "randomNetworkNodeEdgesMax": {
            "C": "Default number of maximum edges when creating random networks<br>",
            "D": 5,
            "M": "Random",
            "T": "integer"
        },
        "randomNetworkAll": {
            "C": "Use all types of colors, shapes and edges in random network, otherwise only one color, one shape and straight black lines for the edges<br>",
            "D": true,
            "M": "Random",
            "T": "boolean"
        },
        "randomNetworkLayout": {
            "C": "Random network layout<br>",
            "D": "forceLayout",
            "M": "Random",
            "O": [
                "forceDirected",
                "circular",
                "radial",
                "duo",
                "trio",
                "pentagon",
                "hexagon",
                "octagon",
                "star",
                "small",
                "medium",
                "large",
                "huge",
                "lesmiserables",
                "karate"
            ],
            "T": "string"
        },
        "zoom": {
            "C": "Zoom factor for the networks. A number greater than zero<br>",
            "D": 1,
            "M": "Zooming, Panning and Resizing",
            "T": "float"
        },
        "zoomStep": {
            "C": "Percentage step for zooming networks and genome panel<br>",
            "D": 0.2,
            "M": "Zooming, Panning and Resizing",
            "T": "float"
        },
        "zoomScale": {
            "C": "Flag to scale nodes and edges in networks with zoom and data points in 3D scatter plots<br>",
            "D": true,
            "M": "Zooming, Panning and Resizing",
            "T": "boolean"
        },
        "zoomVariablesDisable": {
            "C": "Flag to disable zooming of variables with mouse wheel in Heatmaps<br>",
            "D": false,
            "M": "Zooming, Panning and Resizing",
            "T": "boolean"
        },
        "zoomSamplesDisable": {
            "C": "Flag to disable zooming of samples with mouse wheel in Heatmaps<br>",
            "D": false,
            "M": "Zooming, Panning and Resizing",
            "T": "boolean"
        },
        "zoomXDisable": {
            "C": "Flag to disable zooming of x axis with mouse wheel in Scatter plots<br>",
            "D": false,
            "M": "Zooming, Panning and Resizing",
            "T": "boolean"
        },
        "zoomYDisable": {
            "C": "Flag to disable zooming of y axis with mouse wheel in Scatter plots<br>",
            "D": false,
            "M": "Zooming, Panning and Resizing",
            "T": "boolean"
        },
        "zoomDisable": {
            "C": "Flag to disable zooming in all plots<br>",
            "D": false,
            "M": "Zooming, Panning and Resizing",
            "T": "boolean"
        },
        "panningX": {
            "C": "Number of unit to pan the network in the X dimension<br>",
            "D": 0,
            "M": "Zooming, Panning and Resizing",
            "T": "float"
        },
        "panningY": {
            "C": "Number of unit to pan the network in the Y dimension<br>",
            "D": 0,
            "M": "Zooming, Panning and Resizing",
            "T": "float"
        },
        "panningStep": {
            "C": "Percentage step for panning networks<br>",
            "D": 0.2,
            "M": "Zooming, Panning and Resizing",
            "T": "float"
        },
        "resizerBackgroundColor": {
            "C": "Color for the div that shows up when resizing the canvas<br>",
            "D": "rgba(204,204,204,0.7)",
            "M": "Zooming, Panning and Resizing",
            "T": "color"
        },
        "xAxis": {
            "C": "Name of the samples, groups or variables to be displayed in the X axis<br>",
            "D": [],
            "M": "X-Axis",
            "T": "array"
        },
        "xAxis2": {
            "C": "Name of the samples, groups or variables to be displayed in the second X axis<br>",
            "D": [],
            "M": "X-Axis",
            "T": "array"
        },
        "xAxisCurrent": {
            "C": "Sample id that is currently displayed in the X axis. Important when there are more that one series displayed in the graph<br>",
            "D": 0,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxisShow": {
            "C": "Flag to show/hide the X axis on the bottom<br>",
            "D": true,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxis2Show": {
            "C": "Flag to show/hide the X axis on the top<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxis2Rotate": {
            "C": "Flag to rotate 180 degrees the direction of the X axis on the top<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "setMinX": {
            "C": "Set the minimum value for data in the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "setMaxX": {
            "C": "Set the maximum value for data in the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "setMinX2": {
            "C": "Set the minimum value for data in the second X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "setMaxX2": {
            "C": "Set the maximum value for data in the second X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTime": {
            "C": "Flag to force date format in X axis<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisExact": {
            "C": "Flag to force exact values in X axis<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisSetValues": {
            "C": "Set the values for the axis in the X axis<br>",
            "D": [],
            "M": "X-Axis",
            "T": "array"
        },
        "xAxisSetMinorValues": {
            "C": "Set the minor values for the axis in the X axis<br>",
            "D": [],
            "M": "X-Axis",
            "T": "array"
        },
        "xAxisTransform": {
            "C": "Type of transformation for values in X axis<br>",
            "D": false,
            "M": "X-Axis",
            "O": [
                false,
                "log2",
                "log10",
                "-log2",
                "-log10",
                "exp2",
                "exp10",
                "sqrt",
                "percentile"
            ],
            "T": "string"
        },
        "xAxisTransformTicks": {
            "C": "Flag to transform the values of the ticks in the X axis<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisTransformLinearTicks": {
            "C": "Flag to transform the values of the ticks back to linear scale in the X axis<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisCeilValue": {
            "C": "Value to ceil the data in the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisFloorValue": {
            "C": "Value to floor the data in the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisFactorValue": {
            "C": "Value to factor the data in the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTitle": {
            "C": "X axis title  on the bottom<br>",
            "D": false,
            "M": "X-Axis",
            "T": "string"
        },
        "xAxis2Title": {
            "C": "X axis2 title  on the top<br>",
            "D": false,
            "M": "X-Axis",
            "T": "string"
        },
        "xAxisTitleDynamic": {
            "C": "Set the title for the X axis dynamically as it changes when configured by the user<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisTitleFontStyle": {
            "C": "Font style for the axis title<br>",
            "D": "",
            "M": "X-Axis",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "xAxisTitleColor": {
            "C": "Color for the text in axis title<br>",
            "D": "rgb(0,0,0)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisTitleFontSize": {
            "C": "Font size for the text in axis title. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the xAxisTitleScaleFontFactor<br>",
            "D": 8,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxisTitleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the axis title font size in the canvas<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTitleAlign": {
            "C": "Alignment (or position) for the axis title<br>",
            "D": "center",
            "M": "X-Axis",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "xAxisTitleBaseline": {
            "C": "Baseline (or reference line) for the axis title<br>",
            "D": "middle",
            "M": "X-Axis",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "xAxisTitleRotate": {
            "C": "Rotation in degrees for the axis title<br>",
            "D": 0,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxisTitleMargin": {
            "C": "Margin to pad or separate the characters in the axis title<br>",
            "D": 5,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTextFontStyle": {
            "C": "Font style for the axis text<br>",
            "D": "",
            "M": "X-Axis",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "xAxisTextColor": {
            "C": "Color for the text in axis text<br>",
            "D": "rgb(0,0,0)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisTextFontSize": {
            "C": "Font size for the text in axis text. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the xAxisTextScaleFontFactor<br>",
            "D": 8,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxisTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the axis text font size in the canvas<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTextAlign": {
            "C": "Alignment (or position) for the axis text<br>",
            "D": "center",
            "M": "X-Axis",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "xAxisTextBaseline": {
            "C": "Baseline (or reference line) for the axis text<br>",
            "D": "middle",
            "M": "X-Axis",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "xAxisTextRotate": {
            "C": "Rotation in degrees for the axis text<br>",
            "D": 0,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxisTextMargin": {
            "C": "Margin to pad or separate the characters in the axis text<br>",
            "D": 5,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisGridMajorColor": {
            "C": "Color for the major grid lines in the X axis on the bottom<br>",
            "D": "rgb(204, 204, 204)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisGridMajorTransparency": {
            "C": "Transparency for the color of the major grid lines in the X axis on the bottom<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisGridMajorWidth": {
            "C": "Width for the major grid lines in the X axis on the bottom<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisGridMajorLength": {
            "C": "Length for the major grid lines in the X axis on the bottom<br>",
            "D": 5,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisGridMajorLineType": {
            "C": "Type of line for the major grid lines in the X axis on the bottom<br>",
            "D": "solid",
            "M": "X-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "xAxisGridMajorShow": {
            "C": "Flag to show/hide the major grid lines in the X axis<br>",
            "D": true,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisGridMinorColor": {
            "C": "Color for the minor grid lines in the X axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisGridMinorTransparency": {
            "C": "Transparency for the color of the minor grid lines in the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisGridMinorWidth": {
            "C": "Width for the minor grid lines in the X axis<br>",
            "D": 0.5,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisGridMinorLength": {
            "C": "Length for the minor grid lines in the X axis<br>",
            "D": 5,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisGridMinorLineType": {
            "C": "Type of line for the minor grid lines in the X axis<br>",
            "D": "solid",
            "M": "X-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "xAxisGridMinorShow": {
            "C": "Flag to show/hide the minor grid lines in the X axis<br>",
            "D": true,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisTicksColor": {
            "C": "Color for the marker lines across the X axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisTicksTransparency": {
            "C": "Transparency for the color of the marker lines across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTicksWidth": {
            "C": "Width for the marker lines across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTicksLength": {
            "C": "Length for the marker lines across the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTicksLineType": {
            "C": "Type of line for the marker lines across the X axis<br>",
            "D": "solid",
            "M": "X-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "xAxisTicksShow": {
            "C": "Flag to show/hide the marker lines across the X axis<br>",
            "D": true,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisTickTopColor": {
            "C": "Color for the top tick line across the X axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisTickTopTransparency": {
            "C": "Transparency for the color of the top tick line across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTickTopWidth": {
            "C": "Width for the top tick line across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTickTopLength": {
            "C": "Length for the top tick line across the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTickTopLineType": {
            "C": "Type of line for the top tick line across the X axis<br>",
            "D": "solid",
            "M": "X-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "xAxisTickTopShow": {
            "C": "Flag to show/hide the top tick line across the X axis<br>",
            "D": true,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisTickBottomColor": {
            "C": "Color for the bottom tick line across the X axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisTickBottomTransparency": {
            "C": "Transparency for the color of the bottom tick line across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTickBottomWidth": {
            "C": "Width for the bottom tick line across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTickBottomLength": {
            "C": "Length for the bottom tick line across the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisTickBottomLineType": {
            "C": "Type of line for the bottom tick line across the X axis<br>",
            "D": "solid",
            "M": "X-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "xAxisTickBottomShow": {
            "C": "Flag to show/hide the bottom tick line across the X axis<br>",
            "D": true,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisLineTopColor": {
            "C": "Color for the top line across the X axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisLineTopTransparency": {
            "C": "Transparency for the color of the top line across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisLineTopWidth": {
            "C": "Width for the top line across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisLineTopLength": {
            "C": "Length for the top line across the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisLineTopLineType": {
            "C": "Type of line for the top line across the X axis<br>",
            "D": "solid",
            "M": "X-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "xAxisLineTopShow": {
            "C": "Flag to show/hide the  line in the X axis<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisLineBottomColor": {
            "C": "Color for the bottom line across the X axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisLineBottomTransparency": {
            "C": "Transparency for the color of the bottom line across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisLineBottomWidth": {
            "C": "Width for the bottom line across the X axis<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisLineBottomLength": {
            "C": "Length for the bottom line across the X axis<br>",
            "D": null,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisLineBottomLineType": {
            "C": "Type of line for the bottom line across the X axis<br>",
            "D": "solid",
            "M": "X-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "xAxisLineBottomShow": {
            "C": "Flag to show/hide the  line in the X axis<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisTickFormat": {
            "C": "X axis format for the tick values in the X axis. It could be a string with the sprintf format or an array where the first parameter is the sprintf format and the second parameter is a modification applied to the value before is passed to the sprintf function, i.e. (\"/1000\", \"+ 100\", etc.)<br>",
            "D": false,
            "M": "X-Axis",
            "T": "string"
        },
        "xAxisTicks": {
            "C": "Approx number of tick lines in the X axis<br>",
            "D": 5,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxis2TickFormat": {
            "C": "X axis format for the tick values in the second X axis. It could be a string with the sprintf format or an array where the first parameter is the sprintf format and the second parameter is a modification applied to the value before is passed to the sprintf function, i.e. (\"/1000\", \"+ 100\", etc.)<br>",
            "D": false,
            "M": "X-Axis",
            "T": "string"
        },
        "xAxis2Ticks": {
            "C": "Approx number of tick lines in the second X axis<br>",
            "D": 5,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxisLogTicksColor": {
            "C": "Color for the log tick lines in the X axis on the bottom<br>",
            "D": "rgb(0,0,0)",
            "M": "X-Axis",
            "T": "color"
        },
        "xAxisLogTicksTransparency": {
            "C": "Transparency for the color of the log tick lines in the X axis on the bottom<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisLogTicksWidth": {
            "C": "Width for the log tick lines in the X axis on the bottom<br>",
            "D": 1,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisLogTicksLength": {
            "C": "Length for the log tick lines in the X axis on the bottom<br>",
            "D": 8,
            "M": "X-Axis",
            "T": "float"
        },
        "xAxisLogTicksLineType": {
            "C": "Type of line for the log tick lines in the X axis on the bottom<br>",
            "D": "solid",
            "M": "X-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "xAxisLogTicksShow": {
            "C": "Flag to show/hide the log tick lines in the X axis on the bottom<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisMinorTicks": {
            "C": "Number of minor ticks between major ticks in the X axis<br>",
            "D": 2,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxisHistogramShow": {
            "C": "Flag to show/hide the histogram in the X axis<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisHistogramHeight": {
            "C": "Size in pixels for the histogram in the X axis<br>",
            "D": 80,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxisRugShow": {
            "C": "Flag to show/hide a data rug in the X axis<br>",
            "D": false,
            "M": "X-Axis",
            "T": "boolean"
        },
        "xAxisRugHeight": {
            "C": "Size in pixels for the data rug in the X axis<br>",
            "D": 15,
            "M": "X-Axis",
            "T": "integer"
        },
        "xAxisRugPosition": {
            "C": "Position for the data rug in theX axis<br>",
            "D": "bottom",
            "M": "X-Axis",
            "O": [
                "bottom",
                "top",
                "both"
            ],
            "T": "string"
        },
        "yAxis": {
            "C": "Name of the samples, groups or variables to be displayed in the Y axis<br>",
            "D": [],
            "M": "Y-Axis",
            "T": "array"
        },
        "yAxisCurrent": {
            "C": "Sample id that is currently displayed in the Y axis. Important when there are more that one series displayed in the graph<br>",
            "D": 0,
            "M": "Y-Axis",
            "T": "integer"
        },
        "yAxisShow": {
            "C": "Flag to show/hide the Y axis on the left<br>",
            "D": true,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxis2Show": {
            "C": "Flag to show/hide the Y axis on the right<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxis2Rotate": {
            "C": "Flag to rotate 180 degrees the direction of the Y axis on the right<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "setMinY": {
            "C": "Set the minimum value for data in the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "setMaxY": {
            "C": "Set the maximum value for data in the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTime": {
            "C": "Flag to force date format in Y axis<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisExact": {
            "C": "Flag to force exact values in Y axis<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisSetValues": {
            "C": "Set the values for the axis in the Y axis<br>",
            "D": [],
            "M": "Y-Axis",
            "T": "array"
        },
        "yAxisSetMinorValues": {
            "C": "Set the minor values for the axis in the Y axis<br>",
            "D": [],
            "M": "Y-Axis",
            "T": "array"
        },
        "yAxisTransform": {
            "C": "Type of transformation for values in Y axis<br>",
            "D": false,
            "M": "Y-Axis",
            "O": [
                false,
                "log2",
                "log10",
                "-log2",
                "-log10",
                "exp2",
                "exp10",
                "sqrt",
                "percentile"
            ],
            "T": "string"
        },
        "yAxisTransformTicks": {
            "C": "Flag to transform the values of the ticks in the Y axis<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisTransformLinearTicks": {
            "C": "Flag to transform the values of the ticks back to linear scale in the Y axis<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisCeilValue": {
            "C": "Value to ceil the data in the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisFloorValue": {
            "C": "Value to floor the data in the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisFactorValue": {
            "C": "Value to factor the data in the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTitle": {
            "C": "Y axis title  on the left<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "string"
        },
        "yAxis2Title": {
            "C": "Y axis2 title  on the right<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "string"
        },
        "yAxisTitleDynamic": {
            "C": "Set the title for the Y axis dynamically as it changes when configured by the user<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisTitleFontStyle": {
            "C": "Font style for the axis title<br>",
            "D": "",
            "M": "Y-Axis",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "yAxisTitleColor": {
            "C": "Color for the text in axis title<br>",
            "D": "rgb(0,0,0)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisTitleFontSize": {
            "C": "Font size for the text in axis title. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the yAxisTitleScaleFontFactor<br>",
            "D": 8,
            "M": "Y-Axis",
            "T": "integer"
        },
        "yAxisTitleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the axis title font size in the canvas<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTitleAlign": {
            "C": "Alignment (or position) for the axis title<br>",
            "D": "center",
            "M": "Y-Axis",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "yAxisTitleBaseline": {
            "C": "Baseline (or reference line) for the axis title<br>",
            "D": "middle",
            "M": "Y-Axis",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "yAxisTitleRotate": {
            "C": "Rotation in degrees for the axis title<br>",
            "D": 0,
            "M": "Y-Axis",
            "T": "integer"
        },
        "yAxisTitleMargin": {
            "C": "Margin to pad or separate the characters in the axis title<br>",
            "D": 5,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTextFontStyle": {
            "C": "Font style for the axis text<br>",
            "D": "",
            "M": "Y-Axis",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "yAxisTextColor": {
            "C": "Color for the text in axis text<br>",
            "D": "rgb(0,0,0)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisTextFontSize": {
            "C": "Font size for the text in axis text. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the yAxisTextScaleFontFactor<br>",
            "D": 8,
            "M": "Y-Axis",
            "T": "integer"
        },
        "yAxisTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the axis text font size in the canvas<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTextAlign": {
            "C": "Alignment (or position) for the axis text<br>",
            "D": "center",
            "M": "Y-Axis",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "yAxisTextBaseline": {
            "C": "Baseline (or reference line) for the axis text<br>",
            "D": "middle",
            "M": "Y-Axis",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "yAxisTextRotate": {
            "C": "Rotation in degrees for the axis text<br>",
            "D": 0,
            "M": "Y-Axis",
            "T": "integer"
        },
        "yAxisTextMargin": {
            "C": "Margin to pad or separate the characters in the axis text<br>",
            "D": 5,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisGridMajorColor": {
            "C": "Color for the major grid lines in the Y axis on the left<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisGridMajorTransparency": {
            "C": "Transparency for the color of the major grid lines in the Y axis on the left<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisGridMajorWidth": {
            "C": "Width for the major grid lines in the Y axis on the left<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisGridMajorLength": {
            "C": "Length for the major grid lines in the Y axis on the left<br>",
            "D": 5,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisGridMajorLineType": {
            "C": "Type of line for the major grid lines in the Y axis on the left<br>",
            "D": "solid",
            "M": "Y-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "yAxisGridMajorShow": {
            "C": "Flag to show/hide the major grid lines in the Y axis<br>",
            "D": true,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisGridMinorColor": {
            "C": "Color for the minor grid lines in the Y axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisGridMinorTransparency": {
            "C": "Transparency for the color of the minor grid lines in the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisGridMinorWidth": {
            "C": "Width for the minor grid lines in the Y axis<br>",
            "D": 0.5,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisGridMinorLength": {
            "C": "Length for the minor grid lines in the Y axis<br>",
            "D": 5,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisGridMinorLineType": {
            "C": "Type of line for the minor grid lines in the Y axis<br>",
            "D": "solid",
            "M": "Y-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "yAxisGridMinorShow": {
            "C": "Flag to show/hide the minor grid lines in the Y axis<br>",
            "D": true,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisTicksColor": {
            "C": "Color for the marker lines across the Y axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisTicksTransparency": {
            "C": "Transparency for the color of the marker lines across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTicksWidth": {
            "C": "Width for the marker lines across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTicksLength": {
            "C": "Length for the marker lines across the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTicksLineType": {
            "C": "Type of line for the marker lines across the Y axis<br>",
            "D": "solid",
            "M": "Y-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "yAxisTicksShow": {
            "C": "Flag to show/hide the marker lines across the Y axis<br>",
            "D": true,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisTickRightColor": {
            "C": "Color for the right tick line across the Y axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisTickRightTransparency": {
            "C": "Transparency for the color of the right tick line across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTickRightWidth": {
            "C": "Width for the right tick line across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTickRightLength": {
            "C": "Length for the right tick line across the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTickRightLineType": {
            "C": "Type of line for the right tick line across the Y axis<br>",
            "D": "solid",
            "M": "Y-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "yAxisTickRightShow": {
            "C": "Flag to show/hide the right tick line across the Y axis<br>",
            "D": true,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisTickLeftColor": {
            "C": "Color for the left tick line across the Y axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisTickLeftTransparency": {
            "C": "Transparency for the color of the left tick line across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTickLeftWidth": {
            "C": "Width for the left tick line across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTickLeftLength": {
            "C": "Length for the left tick line across the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisTickLeftLineType": {
            "C": "Type of line for the left tick line across the Y axis<br>",
            "D": "solid",
            "M": "Y-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "yAxisTickLeftShow": {
            "C": "Flag to show/hide the left tick line across the Y axis<br>",
            "D": true,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisLineRightColor": {
            "C": "Color for the right line across the Y axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisLineRightTransparency": {
            "C": "Transparency for the color of the right line across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisLineRightWidth": {
            "C": "Width for the right line across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisLineRightLength": {
            "C": "Length for the right line across the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisLineRightLineType": {
            "C": "Type of line for the right line across the Y axis<br>",
            "D": "solid",
            "M": "Y-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "yAxisLineRightShow": {
            "C": "Flag to show/hide the  line in the Y axis<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisLineLeftColor": {
            "C": "Color for the left line across the Y axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisLineLeftTransparency": {
            "C": "Transparency for the color of the left line across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisLineLeftWidth": {
            "C": "Width for the left line across the Y axis<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisLineLeftLength": {
            "C": "Length for the left line across the Y axis<br>",
            "D": null,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisLineLeftLineType": {
            "C": "Type of line for the left line across the Y axis<br>",
            "D": "solid",
            "M": "Y-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "yAxisLineLeftShow": {
            "C": "Flag to show/hide the  line in the Y axis<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisTickFormat": {
            "C": "Y axis format for the tick values in the Y axis. It could be a string with the sprintf format or an array where the first parameter is the sprintf format and the second parameter is a modification applied to the value before is passed to the sprintf function, i.e. (\"/1000\", \"+ 100\", etc.)<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "string"
        },
        "yAxisTicks": {
            "C": "Approx number of tick lines in the Y axis<br>",
            "D": 5,
            "M": "Y-Axis",
            "T": "integer"
        },
        "yAxisLogTicksColor": {
            "C": "Color for the log tick lines in the Y axis on the left<br>",
            "D": "rgb(0,0,0)",
            "M": "Y-Axis",
            "T": "color"
        },
        "yAxisLogTicksTransparency": {
            "C": "Transparency for the color of the log tick lines in the Y axis on the left<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisLogTicksWidth": {
            "C": "Width for the log tick lines in the Y axis on the left<br>",
            "D": 1,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisLogTicksLength": {
            "C": "Length for the log tick lines in the Y axis on the left<br>",
            "D": 8,
            "M": "Y-Axis",
            "T": "float"
        },
        "yAxisLogTicksLineType": {
            "C": "Type of line for the log tick lines in the Y axis on the left<br>",
            "D": "solid",
            "M": "Y-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "yAxisLogTicksShow": {
            "C": "Flag to show/hide the log tick lines in the Y axis on the left<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisMinorTicks": {
            "C": "Number of minor ticks between major ticks in the Y axis<br>",
            "D": 2,
            "M": "Y-Axis",
            "T": "integer"
        },
        "yAxisHistogramShow": {
            "C": "Flag to show/hide the histogram in the Y axis<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisHistogramHeight": {
            "C": "Size in pixels for the histogram in the Y axis<br>",
            "D": 80,
            "M": "Y-Axis",
            "T": "integer"
        },
        "yAxisRugShow": {
            "C": "Flag to show/hide a data rug in the Y axis<br>",
            "D": false,
            "M": "Y-Axis",
            "T": "boolean"
        },
        "yAxisRugHeight": {
            "C": "Size in pixels for the data rug in the Y axis<br>",
            "D": 15,
            "M": "Y-Axis",
            "T": "integer"
        },
        "yAxisRugPosition": {
            "C": "Position for the data rug in theY axis<br>",
            "D": "left",
            "M": "Y-Axis",
            "O": [
                "left",
                "rigth",
                "both"
            ],
            "T": "string"
        },
        "zAxis": {
            "C": "Name of the samples, groups or variables to be displayed in the Z axis<br>",
            "D": [],
            "M": "Z-Axis",
            "T": "array"
        },
        "zAxisCurrent": {
            "C": "Sample id that is currently displayed in the Z axis. Important when there are more that one series displayed in the graph<br>",
            "D": 0,
            "M": "Z-Axis",
            "T": "integer"
        },
        "zAxisShow": {
            "C": "Flag to show/hide the Z axis<br>",
            "D": true,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "setMinZ": {
            "C": "Set the minimum value for data in the Z axis<br>",
            "D": null,
            "M": "Z-Axis",
            "T": "float"
        },
        "setMaxZ": {
            "C": "Set the maximum value for data in the Z axis<br>",
            "D": null,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisTime": {
            "C": "Flag to force date format in Z axis<br>",
            "D": false,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "zAxisExact": {
            "C": "Flag to force exact values in Z axis<br>",
            "D": false,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "zAxisSetValues": {
            "C": "Set the values for the axis in the Z axis<br>",
            "D": [],
            "M": "Z-Axis",
            "T": "array"
        },
        "zAxisSetMinorValues": {
            "C": "Set the minor values for the axis in the Z axis<br>",
            "D": [],
            "M": "Z-Axis",
            "T": "array"
        },
        "zAxisTransform": {
            "C": "Type of transformation for values in Z axis<br>",
            "D": false,
            "M": "Z-Axis",
            "O": [
                false,
                "log2",
                "log10",
                "-log2",
                "-log10",
                "exp2",
                "exp10",
                "sqrt",
                "percentile"
            ],
            "T": "string"
        },
        "zAxisTransformTicks": {
            "C": "Flag to transform the values of the ticks in the Z axis<br>",
            "D": false,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "zAxisTransformLinearTicks": {
            "C": "Flag to transform the values of the ticks back to linear scale in the Z axis<br>",
            "D": false,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "zAxisCeilValue": {
            "C": "Value to ceil the data in the Z axis<br>",
            "D": null,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisFloorValue": {
            "C": "Value to floor the data in the Z axis<br>",
            "D": null,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisFactorValue": {
            "C": "Value to factor the data in the Z axis<br>",
            "D": null,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisTitle": {
            "C": "Z axis title <br>",
            "D": false,
            "M": "Z-Axis",
            "T": "string"
        },
        "zAxis2Title": {
            "C": "Z axis2 title <br>",
            "D": false,
            "M": "Z-Axis",
            "T": "string"
        },
        "zAxisTitleDynamic": {
            "C": "Set the title for the Z axis dynamically as it changes when configured by the user<br>",
            "D": false,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "zAxisTitleFontStyle": {
            "C": "Font style for the axis title<br>",
            "D": "",
            "M": "Z-Axis",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "zAxisTitleColor": {
            "C": "Color for the text in axis title<br>",
            "D": "rgb(0,0,0)",
            "M": "Z-Axis",
            "T": "color"
        },
        "zAxisTitleFontSize": {
            "C": "Font size for the text in axis title. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the zAxisTitleScaleFontFactor<br>",
            "D": 8,
            "M": "Z-Axis",
            "T": "integer"
        },
        "zAxisTitleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the axis title font size in the canvas<br>",
            "D": 1,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisTitleAlign": {
            "C": "Alignment (or position) for the axis title<br>",
            "D": "center",
            "M": "Z-Axis",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "zAxisTitleBaseline": {
            "C": "Baseline (or reference line) for the axis title<br>",
            "D": "middle",
            "M": "Z-Axis",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "zAxisTitleRotate": {
            "C": "Rotation in degrees for the axis title<br>",
            "D": 0,
            "M": "Z-Axis",
            "T": "integer"
        },
        "zAxisTitleMargin": {
            "C": "Margin to pad or separate the characters in the axis title<br>",
            "D": 5,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisTextFontStyle": {
            "C": "Font style for the axis text<br>",
            "D": "",
            "M": "Z-Axis",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "zAxisTextColor": {
            "C": "Color for the text in axis text<br>",
            "D": "rgb(0,0,0)",
            "M": "Z-Axis",
            "T": "color"
        },
        "zAxisTextFontSize": {
            "C": "Font size for the text in axis text. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the zAxisTextScaleFontFactor<br>",
            "D": 8,
            "M": "Z-Axis",
            "T": "integer"
        },
        "zAxisTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the axis text font size in the canvas<br>",
            "D": 1,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisTextAlign": {
            "C": "Alignment (or position) for the axis text<br>",
            "D": "center",
            "M": "Z-Axis",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "zAxisTextBaseline": {
            "C": "Baseline (or reference line) for the axis text<br>",
            "D": "middle",
            "M": "Z-Axis",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "zAxisTextRotate": {
            "C": "Rotation in degrees for the axis text<br>",
            "D": 0,
            "M": "Z-Axis",
            "T": "integer"
        },
        "zAxisTextMargin": {
            "C": "Margin to pad or separate the characters in the axis text<br>",
            "D": 5,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisGridMajorColor": {
            "C": "Color for the major grid lines in the Z axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Z-Axis",
            "T": "color"
        },
        "zAxisGridMajorTransparency": {
            "C": "Transparency for the color of the major grid lines in the Z axis<br>",
            "D": 1,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisGridMajorWidth": {
            "C": "Width for the major grid lines in the Z axis<br>",
            "D": 1,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisGridMajorLength": {
            "C": "Length for the major grid lines in the Z axis<br>",
            "D": 5,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisGridMajorLineType": {
            "C": "Type of line for the major grid lines in the Z axis<br>",
            "D": "solid",
            "M": "Z-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "zAxisGridMajorShow": {
            "C": "Flag to show/hide the major grid lines in the Z axis<br>",
            "D": true,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "zAxisGridMinorColor": {
            "C": "Color for the minor grid lines in the Z axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Z-Axis",
            "T": "color"
        },
        "zAxisGridMinorTransparency": {
            "C": "Transparency for the color of the minor grid lines in the Z axis<br>",
            "D": 1,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisGridMinorWidth": {
            "C": "Width for the minor grid lines in the Z axis<br>",
            "D": 0.5,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisGridMinorLength": {
            "C": "Length for the minor grid lines in the Z axis<br>",
            "D": 5,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisGridMinorLineType": {
            "C": "Type of line for the minor grid lines in the Z axis<br>",
            "D": "solid",
            "M": "Z-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "zAxisGridMinorShow": {
            "C": "Flag to show/hide the minor grid lines in the Z axis<br>",
            "D": true,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "zAxisTicksColor": {
            "C": "Color for the marker lines across the Z axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Z-Axis",
            "T": "color"
        },
        "zAxisTicksTransparency": {
            "C": "Transparency for the color of the marker lines across the Z axis<br>",
            "D": 1,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisTicksWidth": {
            "C": "Width for the marker lines across the Z axis<br>",
            "D": 1,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisTicksLength": {
            "C": "Length for the marker lines across the Z axis<br>",
            "D": null,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisTicksLineType": {
            "C": "Type of line for the marker lines across the Z axis<br>",
            "D": "solid",
            "M": "Z-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "zAxisTicksShow": {
            "C": "Flag to show/hide the marker lines across the Z axis<br>",
            "D": true,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "zAxisTickFormat": {
            "C": "Z axis format for the tick values in the Z axis. It could be a string with the sprintf format or an array where the first parameter is the sprintf format and the second parameter is a modification applied to the value before is passed to the sprintf function, i.e. (\"/1000\", \"+ 100\", etc.)<br>",
            "D": false,
            "M": "Z-Axis",
            "T": "string"
        },
        "zAxisTicks": {
            "C": "Approx number of tick lines in the Z axis<br>",
            "D": 10,
            "M": "Z-Axis",
            "T": "integer"
        },
        "zAxisLogTicksColor": {
            "C": "Color for the log tick lines in the Z axis<br>",
            "D": "rgb(0,0,0)",
            "M": "Z-Axis",
            "T": "color"
        },
        "zAxisLogTicksTransparency": {
            "C": "Transparency for the color of the log tick lines in the Z axis<br>",
            "D": 1,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisLogTicksWidth": {
            "C": "Width for the log tick lines in the Z axis<br>",
            "D": 1,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisLogTicksLength": {
            "C": "Length for the log tick lines in the Z axis<br>",
            "D": 8,
            "M": "Z-Axis",
            "T": "float"
        },
        "zAxisLogTicksLineType": {
            "C": "Type of line for the log tick lines in the Z axis<br>",
            "D": "solid",
            "M": "Z-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "zAxisLogTicksShow": {
            "C": "Flag to show/hide the log tick lines in the Z axis<br>",
            "D": false,
            "M": "Z-Axis",
            "T": "boolean"
        },
        "rAxisPercentShow": {
            "C": "Flag to show on not the percent in each segment in the R axis<br>",
            "D": true,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisLabelOrientation": {
            "C": "Orientation to show the ticks values in circular plots<br>",
            "D": "perpendicular",
            "M": "R-Axis",
            "O": [
                "perpendicular",
                "circular"
            ],
            "T": "string"
        },
        "rAxisCurrent": {
            "C": "Sample id that is currently displayed in the R axis. Important when there are more that one series displayed in the graph<br>",
            "D": 0,
            "M": "R-Axis",
            "T": "integer"
        },
        "rAxisShow": {
            "C": "Flag to show/hide the R axis<br>",
            "D": true,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisTime": {
            "C": "Flag to force date format in R axis<br>",
            "D": false,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisExact": {
            "C": "Flag to force exact values in R axis<br>",
            "D": false,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisSetValues": {
            "C": "Set the values for the axis in the R axis<br>",
            "D": [],
            "M": "R-Axis",
            "T": "array"
        },
        "rAxisSetMinorValues": {
            "C": "Set the minor values for the axis in the R axis<br>",
            "D": [],
            "M": "R-Axis",
            "T": "array"
        },
        "rAxisTransform": {
            "C": "Type of transformation for values in R axis<br>",
            "D": false,
            "M": "R-Axis",
            "O": [
                false,
                "log2",
                "log10",
                "-log2",
                "-log10",
                "exp2",
                "exp10",
                "sqrt",
                "percentile"
            ],
            "T": "string"
        },
        "rAxisTransformTicks": {
            "C": "Flag to transform the values of the ticks in the R axis<br>",
            "D": false,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisTransformLinearTicks": {
            "C": "Flag to transform the values of the ticks back to linear scale in the R axis<br>",
            "D": false,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisCeilValue": {
            "C": "Value to ceil the data in the R axis<br>",
            "D": null,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisFloorValue": {
            "C": "Value to floor the data in the R axis<br>",
            "D": null,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisFactorValue": {
            "C": "Value to factor the data in the R axis<br>",
            "D": null,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisTitle": {
            "C": "R axis title <br>",
            "D": false,
            "M": "R-Axis",
            "T": "string"
        },
        "rAxis2Title": {
            "C": "R axis2 title <br>",
            "D": false,
            "M": "R-Axis",
            "T": "string"
        },
        "rAxisTitleDynamic": {
            "C": "Set the title for the R axis dynamically as it changes when configured by the user<br>",
            "D": false,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisTitleFontStyle": {
            "C": "Font style for the axis title<br>",
            "D": "",
            "M": "R-Axis",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "rAxisTitleColor": {
            "C": "Color for the text in axis title<br>",
            "D": "rgb(0,0,0)",
            "M": "R-Axis",
            "T": "color"
        },
        "rAxisTitleFontSize": {
            "C": "Font size for the text in axis title. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the rAxisTitleScaleFontFactor<br>",
            "D": 8,
            "M": "R-Axis",
            "T": "integer"
        },
        "rAxisTitleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the axis title font size in the canvas<br>",
            "D": 1,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisTitleAlign": {
            "C": "Alignment (or position) for the axis title<br>",
            "D": "center",
            "M": "R-Axis",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "rAxisTitleBaseline": {
            "C": "Baseline (or reference line) for the axis title<br>",
            "D": "middle",
            "M": "R-Axis",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "rAxisTitleRotate": {
            "C": "Rotation in degrees for the axis title<br>",
            "D": 0,
            "M": "R-Axis",
            "T": "integer"
        },
        "rAxisTitleMargin": {
            "C": "Margin to pad or separate the characters in the axis title<br>",
            "D": 5,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisTextFontStyle": {
            "C": "Font style for the axis text<br>",
            "D": "",
            "M": "R-Axis",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "rAxisTextColor": {
            "C": "Color for the text in axis text<br>",
            "D": "rgb(0,0,0)",
            "M": "R-Axis",
            "T": "color"
        },
        "rAxisTextFontSize": {
            "C": "Font size for the text in axis text. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the rAxisTextScaleFontFactor<br>",
            "D": 8,
            "M": "R-Axis",
            "T": "integer"
        },
        "rAxisTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the axis text font size in the canvas<br>",
            "D": 1,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisTextAlign": {
            "C": "Alignment (or position) for the axis text<br>",
            "D": "center",
            "M": "R-Axis",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "rAxisTextBaseline": {
            "C": "Baseline (or reference line) for the axis text<br>",
            "D": "middle",
            "M": "R-Axis",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "rAxisTextRotate": {
            "C": "Rotation in degrees for the axis text<br>",
            "D": 0,
            "M": "R-Axis",
            "T": "integer"
        },
        "rAxisTextMargin": {
            "C": "Margin to pad or separate the characters in the axis text<br>",
            "D": 5,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisGridMajorColor": {
            "C": "Color for the major grid lines in the R axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "R-Axis",
            "T": "color"
        },
        "rAxisGridMajorTransparency": {
            "C": "Transparency for the color of the major grid lines in the R axis<br>",
            "D": 1,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisGridMajorWidth": {
            "C": "Width for the major grid lines in the R axis<br>",
            "D": 1,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisGridMajorLength": {
            "C": "Length for the major grid lines in the R axis<br>",
            "D": 5,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisGridMajorLineType": {
            "C": "Type of line for the major grid lines in the R axis<br>",
            "D": "solid",
            "M": "R-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "rAxisGridMajorShow": {
            "C": "Flag to show/hide the major grid lines in the R axis<br>",
            "D": true,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisGridMinorColor": {
            "C": "Color for the minor grid lines in the R axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "R-Axis",
            "T": "color"
        },
        "rAxisGridMinorTransparency": {
            "C": "Transparency for the color of the minor grid lines in the R axis<br>",
            "D": 1,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisGridMinorWidth": {
            "C": "Width for the minor grid lines in the R axis<br>",
            "D": 0.5,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisGridMinorLength": {
            "C": "Length for the minor grid lines in the R axis<br>",
            "D": 5,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisGridMinorLineType": {
            "C": "Type of line for the minor grid lines in the R axis<br>",
            "D": "solid",
            "M": "R-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "rAxisGridMinorShow": {
            "C": "Flag to show/hide the minor grid lines in the R axis<br>",
            "D": true,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisTicksColor": {
            "C": "Color for the marker lines across the R axis<br>",
            "D": "rgb(204, 204, 204)",
            "M": "R-Axis",
            "T": "color"
        },
        "rAxisTicksTransparency": {
            "C": "Transparency for the color of the marker lines across the R axis<br>",
            "D": 1,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisTicksWidth": {
            "C": "Width for the marker lines across the R axis<br>",
            "D": 1,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisTicksLength": {
            "C": "Length for the marker lines across the R axis<br>",
            "D": null,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisTicksLineType": {
            "C": "Type of line for the marker lines across the R axis<br>",
            "D": "solid",
            "M": "R-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "rAxisTicksShow": {
            "C": "Flag to show/hide the marker lines across the R axis<br>",
            "D": true,
            "M": "R-Axis",
            "T": "boolean"
        },
        "rAxisTickFormat": {
            "C": "R axis format for the tick values in the R axis. It could be a string with the sprintf format or an array where the first parameter is the sprintf format and the second parameter is a modification applied to the value before is passed to the sprintf function, i.e. (\"/1000\", \"+ 100\", etc.)<br>",
            "D": false,
            "M": "R-Axis",
            "T": "string"
        },
        "rAxisTicks": {
            "C": "Approx number of tick lines in the R axis<br>",
            "D": 5,
            "M": "R-Axis",
            "T": "integer"
        },
        "rAxisLogTicksColor": {
            "C": "Color for the log tick lines in the R axis<br>",
            "D": "rgb(0,0,0)",
            "M": "R-Axis",
            "T": "color"
        },
        "rAxisLogTicksTransparency": {
            "C": "Transparency for the color of the log tick lines in the R axis<br>",
            "D": 1,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisLogTicksWidth": {
            "C": "Width for the log tick lines in the R axis<br>",
            "D": 1,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisLogTicksLength": {
            "C": "Length for the log tick lines in the R axis<br>",
            "D": 8,
            "M": "R-Axis",
            "T": "float"
        },
        "rAxisLogTicksLineType": {
            "C": "Type of line for the log tick lines in the R axis<br>",
            "D": "solid",
            "M": "R-Axis",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "rAxisLogTicksShow": {
            "C": "Flag to show/hide the log tick lines in the R axis<br>",
            "D": false,
            "M": "R-Axis",
            "T": "boolean"
        },
        "axisExtension": {
            "C": "Percentage to extend the values of the data to ensure all the data points are plotted inside and not over the edges of the graph<br>",
            "D": 0.1,
            "M": "Axis",
            "T": "float"
        },
        "axisAlgorithm": {
            "C": "Algorithm used to position tick labels on axes. See An Extension of Wilkinson’s Algorithm for Positioning Tick Labels on Axes. Justin Talbot, Sharon Lin, Pat Hanrahan<br>",
            "D": "rPretty",
            "M": "Axis",
            "O": [
                "heckbert",
                "wilkinson",
                "wilkinsonExtended",
                "rPretty"
            ],
            "T": "string"
        },
        "axisWilkinsonLoose": {
            "C": "Flag to indicate whether to use loose positioning when using the wilkinson algorithm to position the labels on the axis. There will not be a difference most of the times<br>",
            "D": false,
            "M": "Axis",
            "T": "boolean"
        },
        "axisCoordinate": {
            "C": "Flag to coordinate xAxis and xAxis2 in *-Line combination plots<br>",
            "D": false,
            "M": "Axis",
            "T": "boolean"
        },
        "guidesColor": {
            "C": "Color for the the variables and / or samples in one dimensional graphs and multidimensional heatmaps just for aesthetics<br>",
            "D": "rgb(204,204,204)",
            "M": "Plot area",
            "T": "color"
        },
        "guidesTransparency": {
            "C": "Transparency for the color of the the variables and / or samples in one dimensional graphs and multidimensional heatmaps just for aesthetics<br>",
            "D": 1,
            "M": "Plot area",
            "T": "float"
        },
        "guidesWidth": {
            "C": "Width for the the variables and / or samples in one dimensional graphs and multidimensional heatmaps just for aesthetics<br>",
            "D": 1,
            "M": "Plot area",
            "T": "float"
        },
        "guidesLength": {
            "C": "Length for the the variables and / or samples in one dimensional graphs and multidimensional heatmaps just for aesthetics<br>",
            "D": 5,
            "M": "Plot area",
            "T": "float"
        },
        "guidesLineType": {
            "C": "Type of line for the the variables and / or samples in one dimensional graphs and multidimensional heatmaps just for aesthetics<br>",
            "D": "solid",
            "M": "Plot area",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "guidesShow": {
            "C": "Flag to show/hide the the variables and / or samples in one dimensional graphs and multidimensional heatmaps just for aesthetics<br>",
            "D": false,
            "M": "Plot area",
            "T": "boolean"
        },
        "blockContrast": {
            "C": "A flag to creates a shade between the samples so there are two backgrounds, one for the odd samples and one for the even samples<br>",
            "D": false,
            "M": "Plot area",
            "T": "boolean"
        },
        "plotByVariable": {
            "C": "Flag to indicate whether to group the data variable rather than by sample<br>",
            "D": false,
            "M": "Plot area",
            "T": "boolean"
        },
        "is3DPlot": {
            "C": "Flag to create or not a 3D plot<br>",
            "D": false,
            "M": "Plot area",
            "T": "boolean"
        },
        "showDataValues": {
            "C": "Flag to show/hide the data values in the one bar graphs<br>",
            "D": false,
            "M": "Plot area",
            "T": "boolean"
        },
        "binned": {
            "C": "Flag to bin the data points in dotplots and boxplots<br>",
            "D": false,
            "M": "Plot area",
            "T": "boolean"
        },
        "binAlignment": {
            "C": "Alignment for the data points when binned<br>",
            "D": "center",
            "M": "Plot area",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "jitter": {
            "C": "Flag to jitter the data points in dotplots, boxplots and scatter2D plots<br>",
            "D": false,
            "M": "Plot area",
            "T": "boolean"
        },
        "jitterFactor": {
            "C": "Factor for jittering. The larger the more jitter<br>",
            "D": 0.8,
            "M": "Plot area",
            "T": "float"
        },
        "sina": {
            "C": "Flag to jitter the data points in dotplots, boxplots and scatter2D plots with sina style<br>",
            "D": false,
            "M": "Plot area",
            "T": "boolean"
        },
        "objectBorderColor": {
            "C": "Color for the border of all objects in one dimensional graphs. It turns into the non-transparent fill color if set to false<br>",
            "D": "rgba(0,0,0,0)",
            "M": "Plot area",
            "T": "color"
        },
        "objectColorTransparency": {
            "C": "The transparency for the color fill of all objects in one dimensional graphs. A value between 0 and 1<br>",
            "D": 1,
            "M": "Plot area",
            "T": "float"
        },
        "dotplotOutlineThreshold": {
            "C": "Maximum number of data points before skipping plotting their outline but only the fill color<br>",
            "D": 5000,
            "M": "Plot area",
            "T": "integer"
        },
        "linesOnGroups": {
            "C": "Flag to create lines on groups when multiple grouping factors are used<br>",
            "D": true,
            "M": "Plot area",
            "T": "boolean"
        },
        "lineDecoration": {
            "C": "Lines decorations in the line graphs<br>",
            "D": "symbol",
            "M": "Line Graphs",
            "O": [
                false,
                "dot",
                "symbol",
                "pattern"
            ],
            "T": "string"
        },
        "lineErrorType": {
            "C": "Line error type in the line graphs. The line type must be spline for the area error type. <br>",
            "D": "bar",
            "M": "Line Graphs",
            "O": [
                "bar",
                "area"
            ],
            "T": "string"
        },
        "coordinateLineColor": {
            "C": "Flag to used same color in BarLine plots. If set to true the color of the bars and the lines will be coordinated<br>",
            "D": false,
            "M": "Line Graphs",
            "T": "boolean"
        },
        "lineType": {
            "C": "Type of line used to join the points in line graphs<br>",
            "D": "rect",
            "M": "Line Graphs",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "tension": {
            "C": "Curvature for the splines and hulls<br>",
            "D": 0.3,
            "M": "Line Graphs",
            "T": "float"
        },
        "tensionSegments": {
            "C": "Number of segments to smooth a quadratic curve<br>",
            "D": 16,
            "M": "Line Graphs",
            "T": "integer"
        },
        "boxplotOutliersRatio": {
            "C": "Ratio for the size of the outliers with respect to boxplot<br>",
            "D": 10,
            "M": "Boxplot Graphs",
            "T": "integer"
        },
        "boxplotOutliersColor": {
            "C": "Color for the outlier data points in boxplots<br>",
            "D": false,
            "M": "Boxplot Graphs",
            "T": "color"
        },
        "boxplotOutliersBorderColor": {
            "C": "Color for the border of outlier data points in boxplots<br>",
            "D": false,
            "M": "Boxplot Graphs",
            "T": "color"
        },
        "boxplotOutliersShape": {
            "C": "Shape for the outlier data points<br>",
            "D": "circle",
            "M": "Boxplot Graphs",
            "O": [
                "circle",
                "square",
                "triangle",
                "diamond",
                "plus",
                "minus",
                "star",
                "circleOpen",
                "squareOpen",
                "triangleOpen",
                "diamondOpen"
            ],
            "T": "string"
        },
        "boxplotWhiskersType": {
            "C": "Boxplot whiskers type<br>",
            "D": "double",
            "M": "Boxplot Graphs",
            "O": [
                "single",
                "double",
                "none"
            ],
            "T": "string"
        },
        "boxplotType": {
            "C": "Boxplot type<br>",
            "D": "boxWhiskers",
            "M": "Boxplot Graphs",
            "O": [
                "boxWhiskers",
                "range"
            ],
            "T": "string"
        },
        "boxplotNotched": {
            "C": "Flag to notch boxplots<br>",
            "D": false,
            "M": "Boxplot Graphs",
            "T": "boolean"
        },
        "boxplotTransparency": {
            "C": "Fraction to adjust color transparency for the boxplot id individual data points are shown<br>",
            "D": 0.4,
            "M": "Boxplot Graphs",
            "T": "float"
        },
        "boxplotColor": {
            "C": "Color for the boxplot if individual data points are shown<br>",
            "D": false,
            "M": "Boxplot Graphs",
            "T": "color"
        },
        "boxplotVarWidth": {
            "C": "Flag to adjust the width of boxplots. Similar to R if true then the width is proportional to the sqare root of the number of observations<br>",
            "D": false,
            "M": "Boxplot Graphs",
            "T": "boolean"
        },
        "boxplotCoef": {
            "C": "Number that determines how far the plot ‘whiskers’ extend out from the box<br>",
            "D": 1.5,
            "M": "Boxplot Graphs",
            "T": "float"
        },
        "boxplotHingeFunction": {
            "C": "Function to calculate the boxplor hinges. See https://chemicalstatistician.wordpress.com/2013/08/12/exploratory-data-analysis-the-5-number-summary-two-different-methods-in-r-2/<br>",
            "D": "summary",
            "M": "Boxplot Graphs",
            "O": [
                "summary",
                "fivenum"
            ],
            "T": "string"
        },
        "showBoxplotOriginalData": {
            "C": "Flag to show/hide the observed data point in boxplots. (Should be called showBoxplotDataPoints)<br>",
            "D": false,
            "M": "Boxplot Graphs",
            "T": "boolean"
        },
        "boxplotDataPointTransparency": {
            "C": "Fraction to adjust color transparency for the data points when displaying original data in boxplots<br>",
            "D": 0.8,
            "M": "Boxplot Graphs",
            "T": "float"
        },
        "boxplotBorderColor": {
            "C": "Color for the line of the borders in boxplots<br>",
            "D": "rgb(0,0,0)",
            "M": "Boxplot Graphs",
            "T": "color"
        },
        "boxplotMedianColor": {
            "C": "Color for the line of the median of data in boxplots<br>",
            "D": false,
            "M": "Boxplot Graphs",
            "T": "color"
        },
        "boxplotMedianWidth": {
            "C": "Width for the line of the median of data in boxplots<br>",
            "D": 2,
            "M": "Boxplot Graphs",
            "T": "integer"
        },
        "boxplotMean": {
            "C": "Flag to show mean of data in boxplots<br>",
            "D": false,
            "M": "Boxplot Graphs",
            "T": "boolean"
        },
        "boxplotMeanColor": {
            "C": "Color for the data mean in boxplots<br>",
            "D": "rgb(255,215,0)",
            "M": "Boxplot Graphs",
            "T": "color"
        },
        "boxplotMeanBorderColor": {
            "C": "Color for the border of the data mean in boxplots<br>",
            "D": "rgb(255,0,0)",
            "M": "Boxplot Graphs",
            "T": "color"
        },
        "boxplotConnect": {
            "C": "Flag to show data in boxplots connected<br>",
            "D": false,
            "M": "Boxplot Graphs",
            "T": "boolean"
        },
        "boxplotConnectWidth": {
            "C": "Width for the line of the connection of boxes in boxplots<br>",
            "D": 2,
            "M": "Boxplot Graphs",
            "T": "integer"
        },
        "showViolinBoxplot": {
            "C": "Flag to show/hide the violin plot in boxplots<br>",
            "D": false,
            "M": "Violin Plots",
            "T": "boolean"
        },
        "violinTrim": {
            "C": "Flag to trim violin plots<br>",
            "D": true,
            "M": "Violin Plots",
            "T": "boolean"
        },
        "violinScale": {
            "C": "Type for scaling violin plots<br>",
            "D": "width",
            "M": "Violin Plots",
            "O": [
                "area",
                "count",
                "width"
            ],
            "T": "string"
        },
        "showBoxplotIfViolin": {
            "C": "Flag to show/hide the boxplots when violin plot are show. It does not affect anything unless violins are shown<br>",
            "D": false,
            "M": "Violin Plots",
            "T": "boolean"
        },
        "boxplotWidthRatioIfViolin": {
            "C": "A number between 0.1 and 1 to adjust the width of the boxplot when violins are shown. It does not affect anything unless violins are shown<br>",
            "D": 0.33,
            "M": "Violin Plots",
            "T": "float"
        },
        "violinTransparency": {
            "C": "Fraction to adjust color transparency for the violins<br>",
            "D": 0.4,
            "M": "Violin Plots",
            "T": "float"
        },
        "violinColor": {
            "C": "Color for the violins. If specified all the violins will have the assigned color; otherwise it will be automatically assigned<br>",
            "D": false,
            "M": "Violin Plots",
            "T": "color"
        },
        "violinBorderColor": {
            "C": "Color for the violin borders<br>",
            "D": "rgb(0,0,0)",
            "M": "Violin Plots",
            "T": "color"
        },
        "showViolinQuantiles": {
            "C": "Flag to show/hide the quantile 0.25 and 0.75 in violin plots<br>",
            "D": false,
            "M": "Violin Plots",
            "T": "boolean"
        },
        "areaType": {
            "C": "Types of area graphs when displaying multiple series. The options include overlapping which is the default, stacked, and percent area graphs<br>",
            "D": "overlapping",
            "M": "Area Graphs",
            "O": [
                "overlapping",
                "stacked",
                "percent"
            ],
            "T": "string"
        },
        "barType": {
            "C": "Flag to produce normal or lollipop bar graphs<br>",
            "D": "normal",
            "M": "Bar Graphs",
            "O": [
                "normal",
                "lollipop",
                "arrow",
                "swimmer"
            ],
            "T": "string"
        },
        "barPath": {
            "C": "Show the path for the bar graph<br>",
            "D": false,
            "M": "Bar Graphs",
            "T": "boolean"
        },
        "barPathTransparency": {
            "C": "Transparency for the bar graph path<br>",
            "D": 0.1,
            "M": "Bar Graphs",
            "T": "boolean"
        },
        "barPathColor": {
            "C": "Color for the bar graph path. If false, it will default to the color of the graph<br>",
            "D": false,
            "M": "Bar Graphs",
            "T": "color"
        },
        "barLollipopFactor": {
            "C": "Ratio for the top (dot) of the lollipop in bar graphs. The higher the value the bigger the lollipop. See widthFactor to adjust the bar width (choose a value between 0.5 and 0.6)<br>",
            "D": 1.5,
            "M": "Lollipop Graphs",
            "T": "integer"
        },
        "barLollipopOpen": {
            "C": "Pattern open for th lollipop<br>",
            "D": false,
            "M": "Lollipop Graphs",
            "T": "boolean"
        },
        "swimHigh": {
            "C": "Variable to use in Swimmer plot. Defaults to the first variable in the data set. See https://blogs.sas.com/content/graphicallyspeaking/2014/06/22/swimmer-plot/<br>",
            "D": false,
            "M": "Swimmer Graphs",
            "O": [
                false
            ],
            "T": "string"
        },
        "swimStart": {
            "C": "Variable to use in Swimmer Plot. Defaults to the second variable in the data set. See https://blogs.sas.com/content/graphicallyspeaking/2014/06/22/swimmer-plot/<br>",
            "D": false,
            "M": "Swimmer Graphs",
            "O": [
                false
            ],
            "T": "string"
        },
        "swimEnd": {
            "C": "Variable to use in Swimmer Plot. Defaults to the third variable in the data set. See https://blogs.sas.com/content/graphicallyspeaking/2014/06/22/swimmer-plot/<br>",
            "D": false,
            "M": "Swimmer Graphs",
            "O": [
                false
            ],
            "T": "string"
        },
        "swimStatus": {
            "C": "Name of sample annotation to use in Swimmer Plot. Defaults to Status. See https://blogs.sas.com/content/graphicallyspeaking/2014/06/22/swimmer-plot/<br>",
            "D": false,
            "M": "Swimmer Graphs",
            "O": [
                false
            ],
            "T": "string"
        },
        "swimHighCap": {
            "C": "Name of sample annotation to use in Swimmer Plot. Defaults to High Cap. See https://blogs.sas.com/content/graphicallyspeaking/2014/06/22/swimmer-plot/<br>",
            "D": false,
            "M": "Swimmer Graphs",
            "O": [
                false
            ],
            "T": "string"
        },
        "dotplotType": {
            "C": "Flag to produce normal, stacked or movement dotplot graphs. Movement plot are only applicable when data is grouped<br>",
            "D": "normal",
            "M": "Dotplot Graphs",
            "O": [
                "normal",
                "stacked",
                "movement"
            ],
            "T": "string"
        },
        "ganttStart": {
            "C": "Variable to use in Gantt plots as start date. Defaults to the first variable in the data set<br>",
            "D": false,
            "M": "Gantt Charts",
            "O": [
                false
            ],
            "T": "string"
        },
        "ganttEnd": {
            "C": "Variable to use in Gantt plots as end date. Defaults to the second variable in the data set<br>",
            "D": false,
            "M": "Gantt Charts",
            "O": [
                false
            ],
            "T": "string"
        },
        "ganttCompletion": {
            "C": "Variable annotation in the x object to use in Gantt plots as completion percentage. Must be a value between 0 and 1<br>",
            "D": false,
            "M": "Gantt Charts",
            "O": [
                false
            ],
            "T": "string"
        },
        "ganttDependency": {
            "C": "Variable annotation in the x object to use in Gantt plots as dependency. Must be a valid sample / group name<br>",
            "D": false,
            "M": "Gantt Charts",
            "O": [
                false
            ],
            "T": "string"
        },
        "ganttDependencyEnd": {
            "C": "Variable annotation for the type of ending for the dependency line. Options are arrow, square or round<br>",
            "D": false,
            "M": "Gantt Charts",
            "O": [
                false
            ],
            "T": "string"
        },
        "ganttDependencyColor": {
            "C": "Color for the variable metadata used for the dependency line. Defaults to rgb(0,0,0)<br>",
            "D": false,
            "M": "Gantt Charts",
            "T": "color"
        },
        "ganttDependencyThickness": {
            "C": "Variable annotation for the thickness of the dependency line. Defaults to 1<br>",
            "D": false,
            "M": "Gantt Charts",
            "T": "float"
        },
        "ganttCompletionTransparency": {
            "C": "Fraction to adjust color transparency for completion<br>",
            "D": 0.5,
            "M": "Gantt Charts",
            "T": "float"
        },
        "meterType": {
            "C": "Type of meter. <br>",
            "D": "gauge",
            "M": "Meter Graphs",
            "O": [
                "gauge",
                "speedometer",
                "vertical",
                "horizontal",
                "state",
                "digital",
                "number"
            ],
            "T": "string"
        },
        "meterMin": {
            "C": "Minimum value in the meter<br>",
            "D": null,
            "M": "Meter Graphs",
            "T": "float"
        },
        "meterMax": {
            "C": "Maximum value in the meter<br>",
            "D": null,
            "M": "Meter Graphs",
            "T": "float"
        },
        "meterStart": {
            "C": "Start value for the meter in degrees<br>",
            "D": 270,
            "M": "Meter Graphs",
            "T": "float"
        },
        "meterEnd": {
            "C": "End value for the meter in degrees<br>",
            "D": 90,
            "M": "Meter Graphs",
            "T": "float"
        },
        "meterSegments": {
            "C": "Meter Segments<br>",
            "D": [],
            "M": "Meter Graphs",
            "T": "array"
        },
        "meterColors": {
            "C": "Meter Colors<br>",
            "D": [],
            "M": "Meter Graphs",
            "T": "array"
        },
        "meterColorScheme": {
            "C": "Color schemes can be user defined which will take the colors in the color property or one provided in canvasXpress. The order of the colors will be used to sequentially select when a different color is needed in a particular visualization<br>",
            "D": "Spectral",
            "M": "Meter Graphs",
            "O": [
                "YlGn",
                "YlGnBu",
                "GnBu",
                "BuGn",
                "PuBuGn",
                "PuBu",
                "BuPu",
                "RdPu",
                "PuRd",
                "OrRd",
                "YlOrRd",
                "YlOrBr",
                "Purples",
                "Blues",
                "Greens",
                "Oranges",
                "Reds",
                "Greys",
                "PuOr",
                "BrBG",
                "PRGn",
                "PiYG",
                "RdBu",
                "RdGy",
                "RdYlBu",
                "Spectral",
                "RdYlGn",
                "Accent",
                "Dark2",
                "Paired",
                "Pastel1",
                "Pastel2",
                "Set1",
                "Set2",
                "Set3",
                "Default",
                "Basic",
                "Light",
                "Favorite",
                "Pastel",
                "Balanced",
                "Rpalette",
                "RlatticeBackground",
                "RlatticeShingle",
                "RlatticeLine",
                "RlatticePolygon",
                "Bootstrap",
                "Economist",
                "EconomistBG",
                "Excel",
                "Excel2",
                "Excel3",
                "GGPlot",
                "Solarized",
                "SolarizedBase",
                "PaulTol",
                "ColorBlind",
                "Tableau",
                "TableauGrey",
                "TableauColorBlind",
                "TableauTrafficLight",
                "TableauPurpleGrey",
                "TableauBlueRed",
                "TableauGreenOrange",
                "TableauCyclic",
                "TableauPairSequential",
                "TableauTripleDiverging",
                "WallStreetJournal",
                "WallStreetJournal2",
                "WallStreetJournal3",
                "WallStreetJournalRedGreen",
                "WallStreetJournalBlackGreen",
                "WallStreetJournalDemRep",
                "Stata",
                "Stata2",
                "Stata3",
                "StataMono",
                "BlackAndWhite",
                "CanvasXpress",
                "CanvasXpressT"
            ],
            "T": "string"
        },
        "meterVar": {
            "C": "Name of the variable use to create the meter. The first variable will be used if not specified or if it is non-valid<br>",
            "D": false,
            "M": "Meter Graphs",
            "O": [
                false
            ],
            "T": "string"
        },
        "meterGroup": {
            "C": "Name of the sample category to use to create the meters<br>",
            "D": false,
            "M": "Meter Graphs",
            "O": [
                false
            ],
            "T": "string"
        },
        "meterSummary": {
            "C": "Summary to calculate for the meters<br>",
            "D": "average",
            "M": "Meter Graphs",
            "O": [
                "count",
                "average",
                "sum",
                "percentage",
                "percentageTotal",
                "countTotal",
                "sumTotal"
            ],
            "T": "string"
        },
        "meterTopology": {
            "C": "Topology set up for the meters<br>",
            "D": "auto",
            "M": "Meter Graphs",
            "O": [
                "auto",
                "grid",
                "horizontal",
                "vertical"
            ],
            "T": "string"
        },
        "meterNeedleColor": {
            "C": "Color for the Meter Needle Color<br>",
            "D": "rgb(0,0,0)",
            "M": "Meter Graphs",
            "T": "color"
        },
        "meterBackgroundColor": {
            "C": "Color for the Meter Background Color<br>",
            "D": "rgb(229,229,229)",
            "M": "Meter Graphs",
            "T": "color"
        },
        "meterThickness": {
            "C": "Thickness in pixels for the vertical, horizontal and state meters<br>",
            "D": 50,
            "M": "Meter Graphs",
            "T": "integer"
        },
        "fishParents": {
            "C": "Fish Parents<br>",
            "D": [],
            "M": "Fish Graphs",
            "T": "array"
        },
        "fishTimepoints": {
            "C": "Fish Timepoints<br>",
            "D": [],
            "M": "Fish Graphs",
            "T": "array"
        },
        "fishSeparateIndependentClones": {
            "C": "Separate indepenent clones<br>",
            "D": false,
            "M": "Fish Graphs",
            "T": "boolean"
        },
        "fishShape": {
            "C": "Fish Shape<br>",
            "D": "polygon",
            "M": "Fish Graphs",
            "O": [
                "spline",
                "polygon"
            ],
            "T": "string"
        },
        "fishAxis": {
            "C": "Fish Axis (array with lines across the X Axis)<br>",
            "D": [],
            "M": "Fish Graphs",
            "T": "array"
        },
        "fishAxisLabels": {
            "C": "Fish Axis Labels (array with names for the lines across the X Axis). Must have the same dimension as the fishAxis<br>",
            "D": [],
            "M": "Fish Graphs",
            "T": "array"
        },
        "fishCloneLabels": {
            "C": "Fish Clone Labels (array with names for the clones). Must have the same dimension as the fishParents<br>",
            "D": [],
            "M": "Fish Graphs",
            "T": "array"
        },
        "sankeyNodeWidth": {
            "C": "Width for the Sankey nodes<br>",
            "D": 20,
            "M": "Sankey Diagrams",
            "T": "integer"
        },
        "sankeyNodePadding": {
            "C": "Padding between the Sankey nodes<br>",
            "D": 10,
            "M": "Sankey Diagrams",
            "T": "integer"
        },
        "sankeySource": {
            "C": "Name of a sample annotation to use as source in the sankey diagrams<br>",
            "D": false,
            "M": "Sankey Diagrams",
            "O": [
                false
            ],
            "T": "string"
        },
        "sankeyTarget": {
            "C": "Name of a sample annotation to use as target in the sankey diagrams<br>",
            "D": false,
            "M": "Sankey Diagrams",
            "O": [
                false
            ],
            "T": "string"
        },
        "sankeyNodesColor": {
            "C": "Color for the sankey nodes<br>",
            "D": "rgb(255,255,255)",
            "M": "Sankey Diagrams",
            "T": "color"
        },
        "sankeyLinksColor": {
            "C": "Color for the sankey lines (links)<br>",
            "D": "rgba(150,150,150,0.5)",
            "M": "Sankey Diagrams",
            "T": "color"
        },
        "sankeyOutlineColor": {
            "C": "Color for the sankey outline<br>",
            "D": "rgba(0,0,0,0)",
            "M": "Sankey Diagrams",
            "T": "color"
        },
        "sankeyCoordinateColor": {
            "C": "Flag to use same color for the nodes and for the lines (links) in the Sankey diagram<br>",
            "D": false,
            "M": "Sankey Diagrams",
            "T": "boolean"
        },
        "sankeyLabelFontStyle": {
            "C": "Font style for the sankey diagram labels<br>",
            "D": "",
            "M": "Sankey Diagrams",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "sankeyLabelColor": {
            "C": "Color for the text in sankey diagram labels<br>",
            "D": "rgb(0,0,0)",
            "M": "Sankey Diagrams",
            "T": "color"
        },
        "sankeyLabelFontSize": {
            "C": "Font size for the text in sankey diagram labels. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the sankeyLabelScaleFontFactor<br>",
            "D": 11,
            "M": "Sankey Diagrams",
            "T": "integer"
        },
        "sankeyLabelScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the sankey diagram labels font size in the canvas<br>",
            "D": 1,
            "M": "Sankey Diagrams",
            "T": "float"
        },
        "sankeyLabelAlign": {
            "C": "Alignment (or position) for the sankey diagram labels<br>",
            "D": "center",
            "M": "Sankey Diagrams",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "sankeyLabelBaseline": {
            "C": "Baseline (or reference line) for the sankey diagram labels<br>",
            "D": "middle",
            "M": "Sankey Diagrams",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "sankeyLabelRotate": {
            "C": "Rotation in degrees for the sankey diagram labels<br>",
            "D": 90,
            "M": "Sankey Diagrams",
            "T": "integer"
        },
        "sankeyLabelMargin": {
            "C": "Margin to pad or separate the characters in the sankey diagram labels<br>",
            "D": 0,
            "M": "Sankey Diagrams",
            "T": "float"
        },
        "sankeyLabelShow": {
            "C": "Flag to show/hide the labels in the Sankey diagrams<br>",
            "D": true,
            "M": "Sankey Diagrams",
            "T": "boolean"
        },
        "sankeyTitleFontStyle": {
            "C": "Font style for the sankey diagram titles<br>",
            "D": "",
            "M": "Sankey Diagrams",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "sankeyTitleColor": {
            "C": "Color for the text in sankey diagram titles<br>",
            "D": "rgb(0,0,0)",
            "M": "Sankey Diagrams",
            "T": "color"
        },
        "sankeyTitleFontSize": {
            "C": "Font size for the text in sankey diagram titles. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the sankeyTitleScaleFontFactor<br>",
            "D": 11,
            "M": "Sankey Diagrams",
            "T": "integer"
        },
        "sankeyTitleScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the sankey diagram titles font size in the canvas<br>",
            "D": 1,
            "M": "Sankey Diagrams",
            "T": "float"
        },
        "sankeyTitleAlign": {
            "C": "Alignment (or position) for the sankey diagram titles<br>",
            "D": "center",
            "M": "Sankey Diagrams",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "sankeyTitleBaseline": {
            "C": "Baseline (or reference line) for the sankey diagram titles<br>",
            "D": "middle",
            "M": "Sankey Diagrams",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "sankeyTitleRotate": {
            "C": "Rotation in degrees for the sankey diagram titles<br>",
            "D": 0,
            "M": "Sankey Diagrams",
            "T": "integer"
        },
        "sankeyTitleMargin": {
            "C": "Margin to pad or separate the characters in the sankey diagram titles<br>",
            "D": 0,
            "M": "Sankey Diagrams",
            "T": "float"
        },
        "sankeyTitleShow": {
            "C": "Flag to show/hide the titles in the Sankey diagrams<br>",
            "D": true,
            "M": "Sankey Diagrams",
            "T": "boolean"
        },
        "sankeyAxes": {
            "C": "Axes to include in the alluvial/sankey plot. It must sample annotations of the string type in the x object<br>",
            "D": [],
            "M": "Sankey Diagrams",
            "T": "array"
        },
        "hierarchy": {
            "C": "Hierarchy for trees and bubble graphs made up of sample annotations present the data x object<br>",
            "D": [],
            "M": "Hierarchy",
            "T": "array"
        },
        "hierarchyVar": {
            "C": "Variable name to use in the sankey, sunburst and bubble graphs. This is used when the data set has more than a single variable. Otherwise the first variable will be selected<br>",
            "D": false,
            "M": "Hierarchy",
            "T": "string"
        },
        "treeLinkColor": {
            "C": "Color for the tree lines (links)<br>",
            "D": "rgb(150,150,150)",
            "M": "Trees",
            "T": "color"
        },
        "treeNodeOutlineColor": {
            "C": "Color for the tree node outline<br>",
            "D": "rgb(83,105,255)",
            "M": "Trees",
            "T": "color"
        },
        "treeLinkWidth": {
            "C": "Width for the Tree lines<br>",
            "D": 1,
            "M": "Trees",
            "T": "integer"
        },
        "treeCircular": {
            "C": "Flag to plot a circular tree layout<br>",
            "D": false,
            "M": "Trees",
            "T": "boolean"
        },
        "treeInverted": {
            "C": "Flag to plot the tree inverted<br>",
            "D": false,
            "M": "Trees",
            "T": "boolean"
        },
        "colorBy": {
            "C": "Name of a variable annotation or a sample name or the string variable to color the variables<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false,
                "variable"
            ],
            "T": "string",
            "F": "getXZData"
        },
        "colorKey": {
            "C": "Object to assign custom colors to sample annotations and variable annotations included in the data object. The key of the object is the name of an annotation in the data.x object, or the name of an annotation in the data.z object. The value for each key could be either: (1) a scalar with a valid color scheme (see this.meta.def.colorSchemes), or (2) an array with valid colors, or (3) an object to specify custom colors for each of the values of the annotation. A default color will be assigned to a data point whose value was not included the object. CanvasXpress will handle string and numeric annotation approprietly. However, if an object is specified like that one in number (3) the annotation will be treated as categorical even if the annotation is numeric<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "object"
        },
        "colorByData": {
            "C": "String that identify the object containing a two dimensional array with discrete values used to color data points when drawing a multidimensional Heatmap. It must be located within the data.y object (for example: data.y.data2)<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "string"
        },
        "colorLegendTitle": {
            "C": "Title for the color legend<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "string"
        },
        "shapeBy": {
            "C": "Name of a variable annotation or a sample name or the string variable to shape the variables. When shapeByData is specified shapeBy is used for the title in the legend<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false,
                "variable"
            ],
            "T": "string",
            "F": "getXZData"
        },
        "shapeByContinuous": {
            "C": "Flag to use pie shapes with continuous data as opposed to by binning the data and show regular shapes<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "boolean"
        },
        "shapeKey": {
            "C": "Object to assign custom shapes to sample annotations and variable annotations included in the data object. The key of the object is the name of an annotation in the data.x object or the name of an annotation in the data.z object. A default shape will be assigned to a data point whose value was not included the object<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "object"
        },
        "shapeByData": {
            "C": "String that identify the object containing a two dimensional array with values used to shape data points when drawing a multidimensional Heatmap. It must be located within the data.y object (for example: data.y.data2)<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "string"
        },
        "shapeByShape": {
            "C": "String that identify the shape to use in regular and multidimensional heatmaps. shapeByData will take precedence over this property<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false,
                "sphere",
                "square",
                "triangle",
                "star",
                "rhombus",
                "octagon",
                "oval",
                "plus",
                "minus",
                "mdavid"
            ],
            "T": "string"
        },
        "shapeLegendTitle": {
            "C": "Title for the shape legend<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "string"
        },
        "sizeBy": {
            "C": "Name of a variable annotation or a sample name or the string variable to size the variables. When sizeByData is specified sizeBy is used for the title in the legend<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false,
                "variable"
            ],
            "T": "string",
            "F": "getXZData"
        },
        "sizeByContinuous": {
            "C": "Flag to show the size data continuously as opposed to by binning the sizes<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "boolean"
        },
        "sizeKey": {
            "C": "Object to assign custom sizes to sample annotations and variable annotations included in the data object. The key of the object is the name of an annotation in the data.x object or the name of an annotation in the data.z object. A default size will be assigned to a data point whose value was not included the object<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "object"
        },
        "sizeByData": {
            "C": "String that identify the object containing a two dimensional array with values used to size data points when drawing a multidimensional Heatmap. It must be located within the data.y object (for example: data.y.data3)<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "string"
        },
        "sizeLegendTitle": {
            "C": "Title for the size legend<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "string"
        },
        "outlineBy": {
            "C": "Name of the annotation for the outline when drawing a multidimensional Heatmap<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "string"
        },
        "outlineByData": {
            "C": "String that identify the object containing a two dimensional array with values used to color the outline data points when drawing a multidimensional Heatmap. It must be located within the data.y object (for example: data.y.data4)<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "string"
        },
        "patternBy": {
            "C": "Name of a variable annotation or a sample name or the string variable to pattern the variables. When patternByData is specified patternBy is used for the title in the legend<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false,
                "variable"
            ],
            "T": "string",
            "F": "getXZData"
        },
        "patternKey": {
            "C": "Object to assign custom patterns to sample annotations and variable annotations included in the data object. The key of the object is the name of an annotation in the data.x object or the name of an annotation in the data.z object. A default pattern will be assigned to a data point whose value was not included the object<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "object"
        },
        "patternByData": {
            "C": "String that identify the object containing a two dimensional array with values used to pattern the data points when drawing a multidimensional Heatmap. It must be located within the data.y object (for example: data.y.data4)<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "string"
        },
        "connectBy": {
            "C": "Name of a variable annotation to connect the variables<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string",
            "F": "getXZData"
        },
        "connectByNoColor": {
            "C": "Flag to prevent coloring the lines by the connectBy annotation. Usefull when connectBy is used along with colorBy to avoid confusion of colors<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "boolean"
        },
        "connectByColor": {
            "C": "Color for the connectBy lines<br>",
            "D": "rgb(204,204,204)",
            "M": "Data Point Attributes",
            "T": "color"
        },
        "connectByWidth": {
            "C": "Width for the line of the connectBy line<br>",
            "D": 2,
            "M": "Data Point Attributes",
            "T": "integer"
        },
        "connectKey": {
            "C": "Object to assign custom colors to lines when samples are connected by a sample annotations included in the data object. The key of the object is the name of an annotation in the data.x object. A default connect will be assigned to a data point whose value was not included the object<br>",
            "D": false,
            "M": "Data Point Attributes",
            "T": "object"
        },
        "treemapBy": {
            "C": "Array of sample annotations to treemap the variables. The array may also include sample to use as last level<br>",
            "D": [],
            "M": "Data Point Attributes",
            "T": "array"
        },
        "stackBy": {
            "C": "Name of a sample annotation to stack the samples of each variable in Bar graphs<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string",
            "F": "getZData"
        },
        "dodgeBy": {
            "C": "Name of a sample annotation to dodge the samples of each variable in Bar graphs<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string",
            "F": "getXData"
        },
        "lineBy": {
            "C": "Name of a sample annotation to stack the samples of each variable in Line graphs<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string",
            "F": "getXData"
        },
        "ribbonBy": {
            "C": "Name of a sample annotation(s) to create a ribbon of each variable in scatter plots. If a single annotation is passed then it will be used as a standard deviation. If two annotations are passed then, it will be used as upper and lower confidence intervals. Alternatively it could be a pair of arrays witht the actual data. Works in coordination with the lineBy parameter<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string"
        },
        "ribbonByType": {
            "C": "Type of ribbon to create<br>",
            "D": "line",
            "M": "Data Point Attributes",
            "O": [
                "line",
                "area"
            ],
            "T": "string"
        },
        "motionBy": {
            "C": "Utility to create dynamic filtering of data in Scatter plots<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false,
                "variable"
            ],
            "T": "string"
        },
        "markerBy": {
            "C": "Utility to create dynamic markers in Map. It must have a latitude and longitude metadata too<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false,
                "variable"
            ],
            "T": "string"
        },
        "ellipseBy": {
            "C": "Utility to create error ellipses in Scatter plots<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false,
                "variable"
            ],
            "T": "string",
            "F": "getZData"
        },
        "confidenceBy": {
            "C": "Name of a variable annotation to color the confidence intervals<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false,
                "variable"
            ],
            "T": "string",
            "F": "getZData"
        },
        "ridgeBy": {
            "C": "Utility to create ridgelines in Scatter2D plots<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string"
        },
        "pieBy": {
            "C": "Utility to create pie with a sample annotation<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string"
        },
        "pivotBy": {
            "C": "Utility to pivot data with a sample annotation<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string"
        },
        "colorLabelBy": {
            "C": "Name of the variable annotation to color the labels in Scatter2D plots<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string",
            "F": "getZData"
        },
        "sizeLabelBy": {
            "C": "Name of the variable annotation to size the labels in Scatter2D plots<br>",
            "D": false,
            "M": "Data Point Attributes",
            "O": [
                false
            ],
            "T": "string",
            "F": "getZData"
        },
        "motionWidth": {
            "C": "Size in pixels for the motion widget when used to reproduce user customizations<br>",
            "D": 250,
            "M": "Motion Charts",
            "T": "integer"
        },
        "motionCurrentFontStyle": {
            "C": "Font style for the motion charts<br>",
            "D": "",
            "M": "Motion Charts",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "motionCurrentColor": {
            "C": "Color for the text in motion charts<br>",
            "D": "rgb(0,0,0,0.3)",
            "M": "Motion Charts",
            "T": "color"
        },
        "motionCurrentFontSize": {
            "C": "Font size for the text in motion charts. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the motionCurrentScaleFontFactor<br>",
            "D": 60,
            "M": "Motion Charts",
            "T": "integer"
        },
        "motionCurrentScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the motion charts font size in the canvas<br>",
            "D": 1,
            "M": "Motion Charts",
            "T": "float"
        },
        "motionCurrentAlign": {
            "C": "Alignment (or position) for the motion charts<br>",
            "D": "center",
            "M": "Motion Charts",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "motionCurrentBaseline": {
            "C": "Baseline (or reference line) for the motion charts<br>",
            "D": "middle",
            "M": "Motion Charts",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "motionCurrentRotate": {
            "C": "Rotation in degrees for the motion charts<br>",
            "D": 0,
            "M": "Motion Charts",
            "T": "integer"
        },
        "motionCurrentMargin": {
            "C": "Margin to pad or separate the characters in the motion charts<br>",
            "D": 5,
            "M": "Motion Charts",
            "T": "float"
        },
        "htmlWidget": {
            "C": "Name of a variable / sample annotation to filter the data with an external HTML widget. Changes are not reflected when the customizer is open<br>",
            "D": false,
            "M": "HTML Widgets",
            "O": [
                false
            ],
            "T": "string",
            "F": "getXZData2"
        },
        "htmlWidgetType": {
            "C": "Type of HTML widget to use. Changes are not reflected when the customizer is open<br>",
            "D": "auto",
            "M": "HTML Widgets",
            "O": [
                "auto",
                "radio",
                "dropdown",
                "range"
            ],
            "T": "string"
        },
        "htmlWidgetHeight": {
            "C": "Height in pixels for the HTML widget. Changes are not reflected when the customizer is open<br>",
            "D": 120,
            "M": "HTML Widgets",
            "T": "integer"
        },
        "scatterType": {
            "C": "Type of scatter plot<br>",
            "D": false,
            "M": "Scatter Plots",
            "O": [
                false,
                "line",
                "bar",
                "dot",
                "area",
                "image",
                "lineImage",
                "lineStep",
                "boxplot",
                "visium",
                "manhattan",
                "manhattanCNV",
                "bin2d",
                "polygon",
                "stream"
            ],
            "T": "string"
        },
        "scatterContext": {
            "C": "Flag to use Scatter2D when the graphType is not but the scatterType is line, bar, dot, area or boxplot<br>",
            "D": false,
            "M": "Scatter Plots",
            "T": "boolean"
        },
        "scatterLineAlpha": {
            "C": "Transparency applied to lines in scatter plots<br>",
            "D": 1,
            "M": "Scatter Plots",
            "T": "float"
        },
        "scatterPointAlpha": {
            "C": "Thickness applied to data points in scatter plots<br>",
            "D": 1,
            "M": "Scatter Plots",
            "T": "float"
        },
        "groupingFactorWindow": {
            "C": "The width for the data when grouping in Scatter2D plots. This is the analogous parameter to cut_width in R. It defaults to a fifth of the data range. The scatterType must be boxplot to take this parameter into effect<br>",
            "D": false,
            "M": "Scatter Plots",
            "T": "float"
        },
        "functionColor": {
            "C": "Color for the function plots<br>",
            "D": "rgb(0,0,0)",
            "M": "Scatter Plots",
            "T": "color"
        },
        "cXscatterColor": {
            "C": "Color for the scatter cXplots<br>",
            "D": "rgb(0,0,0)",
            "M": "Scatter Plots",
            "T": "color"
        },
        "showDataLabels": {
            "C": "Flag to show/hide the data labels in scatter plots<br>",
            "D": false,
            "M": "Scatter Plots",
            "T": "boolean"
        },
        "isDataLabels": {
            "C": "Flag to put a background in data labels<br>",
            "D": false,
            "M": "Scatter Plots",
            "T": "boolean"
        },
        "isDataLabelsBackgroundColor": {
            "C": "Flag to use the color in the colorDataLabels as a background in data labels<br>",
            "D": false,
            "M": "Scatter Plots",
            "T": "boolean"
        },
        "dataLabelBackgroundColor": {
            "C": "Color for the data labels background<br>",
            "D": "rgb(255,255,255)",
            "M": "Scatter Plots",
            "T": "color"
        },
        "dataLabelBackgroundBorderColor": {
            "C": "Color for the border in data labels background<br>",
            "D": "rgb(0,0,0)",
            "M": "Scatter Plots",
            "T": "color"
        },
        "dataLabelBackgroundBorderSize": {
            "C": "Size for the border line in data labels background<br>",
            "D": 0.5,
            "M": "Scatter Plots",
            "T": "float"
        },
        "dataLabelBackgroundBorderLineType": {
            "C": "Type of line for the border in data labels background<br>",
            "D": "solid",
            "M": "Scatter Plots",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "scatterAxesEqual": {
            "C": "Keep same range in both axes<br>",
            "D": false,
            "M": "Scatter Plots",
            "T": "boolean"
        },
        "scatterOutlineThreshold": {
            "C": "Maximum number of data points before skipping plotting their outline but only the fill color<br>",
            "D": 50000,
            "M": "Scatter Plots",
            "T": "integer"
        },
        "scatterStreamType": {
            "C": "Type of stream scatter plot<br>",
            "D": "mirror",
            "M": "Stream Plots",
            "O": [
                "mirror",
                "ridge",
                "proportional"
            ],
            "T": "string"
        },
        "scatterStreamBandwidth": {
            "C": "Scatter stream bandwidth. Tensor for the wiggles of the stream wiggles. A vaulue between 0 and 1<br>",
            "D": 0.75,
            "M": "Stream Plots",
            "T": "float"
        },
        "scatterStreamNumber": {
            "C": "Number of values for the wiggles<br>",
            "D": 1000,
            "M": "Stream Plots",
            "T": "integer"
        },
        "scatterStreamExtraSpan": {
            "C": "Scatter stream extra extension for the wiggles. A vaulue between 0 and 1 as in percent<br>",
            "D": 0.01,
            "M": "Stream Plots",
            "T": "float"
        },
        "scatterStreamTrueRange": {
            "C": "Expand the X axis<br>",
            "D": "both",
            "M": "Stream Plots",
            "O": [
                "both",
                "min_x",
                "max_x",
                "none"
            ],
            "T": "string"
        },
        "scatterStreamWiggles": {
            "C": "Order for the streamgraph wiggles<br>",
            "D": [],
            "M": "Stream Plots",
            "T": "array"
        },
        "visiumFlip": {
            "C": "Invert the data in visium plots. <br>",
            "D": false,
            "M": "Visium Plots",
            "T": "boolean"
        },
        "visiumPanning": {
            "C": "No panning on visium plots so dragging will always zoom<br>",
            "D": false,
            "M": "Visium Plots",
            "T": "boolean"
        },
        "visiumFixedAspectRatio": {
            "C": "Fix aspect ratio for visium plots<br>",
            "D": true,
            "M": "Visium Plots",
            "T": "boolean"
        },
        "chromosomeLengths": {
            "C": "Manhattan Chromosomes length is a sorted array by chromosome with the length in base pairs for each chromosome. It is required when scatterType is manhattan<br>",
            "D": [],
            "M": "Manhattan Plots",
            "T": "array"
        },
        "armLengths": {
            "C": "Manhattan Chromosomes arm length is a sorted array by chromosome with the length in base pairs for each chromosomeshort arm. It has to have the same dimesions as the chromosomeLengths<br>",
            "D": [],
            "M": "Manhattan Plots",
            "T": "array"
        },
        "manhattanMarkerChromosomeNumber": {
            "C": "Sample name included in the data.y.smps object used to map to the chromosome number<br>",
            "D": false,
            "M": "Manhattan Plots",
            "T": "string"
        },
        "manhattanMarkerPosition": {
            "C": "Sample name included in the data.y.smps object used to map to the position in base pairs<br>",
            "D": false,
            "M": "Manhattan Plots",
            "O": [
                false
            ],
            "T": "string"
        },
        "manhattanMarkerLogPValue": {
            "C": "Sample name included in the data.y.smps object used to map to the negative log 10 p value<br>",
            "D": false,
            "M": "Manhattan Plots",
            "O": [
                false
            ],
            "T": "string"
        },
        "manhattanCNV": {
            "C": "Sample name included in the data.y.smps object used to map to the copy number value<br>",
            "D": false,
            "M": "Manhattan Plots",
            "O": [
                false
            ],
            "T": "string"
        },
        "manhattanRangeStart": {
            "C": "Sample name included in the data.y.smps object used to map the start position<br>",
            "D": false,
            "M": "Manhattan Plots",
            "O": [
                false
            ],
            "T": "string"
        },
        "manhattanRangeEnd": {
            "C": "Sample name included in the data.y.smps object used to map the end position<br>",
            "D": false,
            "M": "Manhattan Plots",
            "O": [
                false
            ],
            "T": "string"
        },
        "showmanhattanRangeMiddle": {
            "C": "Flag to show/hide the show dot in the middle of the range in manhattan plots<br>",
            "D": false,
            "M": "Manhattan Plots",
            "T": "boolean"
        },
        "manhattanRangeLineWidth": {
            "C": "Number of pixels for the line width in manhattan plots<br>",
            "D": 10,
            "M": "Manhattan Plots",
            "T": "integer"
        },
        "manhattanColors": {
            "C": "Colors for the manhattan plots alternative chromosomes<br>",
            "D": [
                "rgb(128,128,128)",
                "rgb(135,206,235)"
            ],
            "M": "Manhattan Plots",
            "T": "array"
        },
        "manhattanContrastColor": {
            "C": "Manhattan contrast color<br>",
            "D": "rgba(0,0,0,0.1)",
            "M": "Manhattan Plots",
            "T": "array"
        },
        "selectionMode": {
            "C": "Mode use to highlight selected data points in visualizations<br>",
            "D": "highlight",
            "M": "Data Selection",
            "O": [
                "highlight",
                "ghost",
                "name",
                "filter"
            ],
            "T": "string"
        },
        "selectionColor": {
            "C": "Color for the The color used for selected data points when selection mode is to be highlight<br>",
            "D": "rgb(255,0,0)",
            "M": "Data Selection",
            "T": "color"
        },
        "selectionMetadata": {
            "C": "Matadata (or factor) to use to display selected data points instead of the variable name. This metadata has to be in the data.z object. This property is only valid when the selectionMode is name and the visualization is a Scatter plot<br>",
            "D": false,
            "M": "Data Selection",
            "O": [
                false
            ],
            "T": "string"
        },
        "selectedDataPoints": {
            "C": "Variable / Sample names of data points (in the data object) to initially select<br>",
            "D": [],
            "M": "Data Selection",
            "T": "array"
        },
        "isContour": {
            "C": "Flag to show the contour<br>",
            "D": false,
            "M": "Contours",
            "T": "boolean"
        },
        "contourFilled": {
            "C": "Flag to color the contour plot<br>",
            "D": false,
            "M": "Contours",
            "T": "boolean"
        },
        "contourFilledTransparency": {
            "C": "Transparency applied to the filled contours<br>",
            "D": 1,
            "M": "Contours",
            "T": "float"
        },
        "showContourBands": {
            "C": "Flag to show/hide the contour bands<br>",
            "D": true,
            "M": "Contours",
            "T": "boolean"
        },
        "contourBandsColor": {
            "C": "Color for the the bands in contours<br>",
            "D": "rgb(0,0,255)",
            "M": "Contours",
            "T": "color"
        },
        "contourLevelWidth": {
            "C": "Width of contour levels<br>",
            "D": null,
            "M": "Contours",
            "T": "integer"
        },
        "contourLevelNumber": {
            "C": "Numbe of contour levels. Overridden by contourLevelWidth<br>",
            "D": 10,
            "M": "Contours",
            "T": "integer"
        },
        "contourStat": {
            "C": "Contour density type<br>",
            "D": "density",
            "M": "Contours",
            "O": [
                "density",
                "ndensity",
                "count"
            ],
            "T": "string"
        },
        "contourType": {
            "C": "Contour type<br>",
            "D": "normal",
            "M": "Contours",
            "O": [
                "normal",
                "raster",
                "point"
            ],
            "T": "string"
        },
        "contourLevels": {
            "C": "Numeric vector to set the contour levels. It is automatically calculated if not defined using the axisAlgorithm setting and the contourLevelNumber<br>",
            "D": [],
            "M": "Contours",
            "T": "array"
        },
        "showContourLevel": {
            "C": "Flag to show/hide the levels in contours<br>",
            "D": false,
            "M": "Contours",
            "T": "boolean"
        },
        "showContourDataPoints": {
            "C": "Flag to show/hide the data points in contours<br>",
            "D": false,
            "M": "Contours",
            "T": "boolean"
        },
        "contourDataPointsColor": {
            "C": "Color for the data points in contours when the contour is filled<br>",
            "D": "rgb(0,0,0)",
            "M": "Contours",
            "T": "color"
        },
        "contourColorScheme": {
            "C": "Color scheme to use in contours<br>",
            "D": "Viridis",
            "M": "Contours",
            "O": [
                "Viridis",
                "YlGn",
                "YlGnBu",
                "GnBu",
                "BuGn",
                "PuBuGn",
                "PuBu",
                "BuPu",
                "RdPu",
                "PuRd",
                "OrRd",
                "YlOrRd",
                "YlOrBr",
                "Purples",
                "Blues",
                "BluesDark",
                "Greens",
                "Oranges",
                "Reds",
                "Greys",
                "PuOr",
                "BrBG",
                "PRGn",
                "PiYG",
                "RdBu",
                "RdGy",
                "RdYlBu",
                "Spectral",
                "RdYlGn",
                "Accent",
                "Dark2",
                "Paired",
                "Pastel1",
                "Pastel2",
                "Set1",
                "Set2",
                "Set3",
                "Default",
                "Basic",
                "Light",
                "Favorite",
                "Pastel",
                "Balanced",
                "Rpalette",
                "RlatticeBackground",
                "RlatticeShingle",
                "RlatticeLine",
                "RlatticePolygon",
                "Bootstrap",
                "Economist",
                "EconomistBG",
                "Excel",
                "Excel2",
                "Excel3",
                "GGPlot",
                "Solarized",
                "SolarizedBase",
                "PaulTol",
                "ColorBlind",
                "Tableau",
                "TableauGrey",
                "TableauColorBlind",
                "TableauTrafficLight",
                "TableauPurpleGrey",
                "TableauBlueRed",
                "TableauGreenOrange",
                "TableauCyclic",
                "TableauPairSequential",
                "TableauTripleDiverging",
                "WallStreetJournal",
                "WallStreetJournal2",
                "WallStreetJournal3",
                "WallStreetJournalRedGreen",
                "WallStreetJournalBlackGreen",
                "WallStreetJournalDemRep",
                "Stata",
                "Stata2",
                "Stata3",
                "StataMono",
                "BlackAndWhite",
                "CanvasXpress",
                "CanvasXpressT"
            ],
            "T": "string"
        },
        "showHistogram": {
            "C": "Flag or sample annotation to create histogram. If true is specified then the histogram will be done with all data<br>",
            "D": false,
            "M": "Histograms",
            "T": "string"
        },
        "histogramRight": {
            "C": "Histogram right is a boolean.  If true, the histogram cells are right-closed (left open) intervals<br>",
            "D": true,
            "M": "Histograms",
            "T": "boolean"
        },
        "histogramLowest": {
            "C": "Histogram lowest is a boolean. If true, an x[i] equal to the breaks value will be included in the first (or last, for right = FALSE) bar<br>",
            "D": true,
            "M": "Histograms",
            "T": "boolean"
        },
        "histogramBins": {
            "C": "Approximate number of bins in a histogram. It may vary to the actual number used in the histogram to ensure a pretty size for the intervals in the histogram. Default is the same as in ggplot which is 30<br>",
            "D": 30,
            "M": "Histograms",
            "T": "integer"
        },
        "histogramBreaks": {
            "C": "Numeric vector to set the histogram breaks. It is automatically calculated if not defined using the axisAlgorithm setting and the histogramBins<br>",
            "D": [],
            "M": "Histograms",
            "T": "array"
        },
        "histogramBinWidth": {
            "C": "Width in actual units for the histogram bin<br>",
            "D": false,
            "M": "Histograms",
            "T": "float"
        },
        "histogramType": {
            "C": "Type of histogram when multiple series are present<br>",
            "D": "dodged",
            "M": "Histograms",
            "O": [
                "dodged",
                "staggered",
                "stacked"
            ],
            "T": "string"
        },
        "showHistogramDensity": {
            "C": "Flag to show/hide the density kernel in histograms<br>",
            "D": false,
            "M": "Histograms",
            "T": "boolean"
        },
        "showHistogramPath": {
            "C": "Flag to show/hide the histograms path<br>",
            "D": false,
            "M": "Histograms",
            "T": "boolean"
        },
        "showFilledHistogramPath": {
            "C": "Flag to show/hide the filled histogram path<br>",
            "D": false,
            "M": "Histograms",
            "T": "boolean"
        },
        "histogramPathFillTransparency": {
            "C": "Transparency applied to the filled histogram path<br>",
            "D": 0.85,
            "M": "Histograms",
            "T": "float"
        },
        "histogramPathColor": {
            "C": "Color for the histogram path. If not specified the it defaults to the color of the histogram bars<br>",
            "D": false,
            "M": "Histograms",
            "T": "color"
        },
        "histogramPathWidth": {
            "C": "Width for the line of the histogram path line<br>",
            "D": 2,
            "M": "Histograms",
            "T": "integer"
        },
        "showFilledHistogramDensity": {
            "C": "Flag to show/hide the filled histogram density<br>",
            "D": false,
            "M": "Histograms",
            "T": "boolean"
        },
        "histogramDensityFillTransparency": {
            "C": "Transparency applied to the filled histogram density<br>",
            "D": 0.85,
            "M": "Histograms",
            "T": "float"
        },
        "showHistogramDataPoints": {
            "C": "Flag to show/hide the original data point in histograms<br>",
            "D": false,
            "M": "Histograms",
            "T": "boolean"
        },
        "showHistogramQuantiles": {
            "C": "Flag to show/hide the quantile 0.25 and 0.75 in density plots<br>",
            "D": false,
            "M": "Histograms",
            "T": "boolean"
        },
        "showHistogramMedian": {
            "C": "Flag to show/hide the histogram median<br>",
            "D": false,
            "M": "Histograms",
            "T": "boolean"
        },
        "histogramMedianLineType": {
            "C": "Line type for the histogram median<br>",
            "D": "dashed",
            "M": "Histograms",
            "O": [
                "solid",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "showHistogramBars": {
            "C": "Flag to hide the histogram bars<br>",
            "D": false,
            "M": "Histograms",
            "T": "boolean"
        },
        "histogramSizeEstimator": {
            "C": "Histogram size estimator<br>",
            "D": "sturges",
            "M": "Histograms",
            "O": [
                "sturges",
                "freedmanDiaconis",
                "scott"
            ],
            "T": "string"
        },
        "histogramStat": {
            "C": "Histogram density type<br>",
            "D": "count",
            "M": "Histograms",
            "O": [
                "density",
                "count"
            ],
            "T": "string"
        },
        "histogramAsDotplot": {
            "C": "Flag to use dots as histogram bars<br>",
            "D": false,
            "M": "Histograms",
            "T": "boolean"
        },
        "histogramDotplotColor": {
            "C": "Color for the data points in dotplot histograms<br>",
            "D": "rgb(215,48,39)",
            "M": "Histograms",
            "T": "color"
        },
        "histogramDotplotBorderColor": {
            "C": "Color for the border in data points in dotplot histograms<br>",
            "D": "rgb(0,0,0)",
            "M": "Histograms",
            "T": "color"
        },
        "histogramDotplotBorderSize": {
            "C": "Size for the border line in data points in dotplot histograms<br>",
            "D": 0.5,
            "M": "Histograms",
            "T": "float"
        },
        "histogramDotplotBorderLineType": {
            "C": "Type of line for the border in data points in dotplot histograms<br>",
            "D": "solid",
            "M": "Histograms",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "histogramStackRatio": {
            "C": "Stack ratio for dotplot histograms. I has to be a value between 0 and 1<br>",
            "D": 1,
            "M": "Histograms",
            "T": "boolean"
        },
        "histogramStackDir": {
            "C": "Direction to stack the dots in dotplot histograms<br>",
            "D": "down",
            "M": "Histograms",
            "O": [
                "down",
                "center",
                "centerwhole"
            ],
            "T": "string"
        },
        "showScatterDensity": {
            "C": "Flag to show/hide the density kernel in histograms<br>",
            "D": false,
            "M": "Density Plots",
            "T": "boolean"
        },
        "densityKernel": {
            "C": "Histogram density kernels<br>",
            "D": "gaussian",
            "M": "Density Plots",
            "O": [
                "gaussian",
                "rectangular",
                "triangular",
                "epanechnikov",
                "quartic",
                "biweight",
                "cosine",
                "optcosine"
            ],
            "T": "string"
        },
        "densityPosition": {
            "C": "Histogram density position<br>",
            "D": "normal",
            "M": "Density Plots",
            "O": [
                "normal",
                "stacked",
                "filled"
            ],
            "T": "string"
        },
        "bandwidthRule": {
            "C": "Bandwidth rule <br>",
            "D": "nrd0",
            "M": "Density Plots",
            "O": [
                "nrd0",
                "nrd",
                "silverman"
            ],
            "T": "string"
        },
        "bandwidthCut": {
            "C": "Bandwidth cut<br>",
            "D": 3,
            "M": "Density Plots",
            "T": "integer"
        },
        "bandwidthAdjust": {
            "C": "Bandwidth adjust for the window<br>",
            "D": 1,
            "M": "Density Plots",
            "T": "float"
        },
        "ridgelineScale": {
            "C": "Scale for ridgeline<br>",
            "D": 1.5,
            "M": "Ridgeline Plots",
            "T": "float"
        },
        "ridgelineViolin": {
            "C": "Flag to use a violin to calculate the ridgeline plot<br>",
            "D": false,
            "M": "Ridgeline Plots",
            "T": "boolean"
        },
        "fitLineColor": {
            "C": "Color for the fit line<br>",
            "D": "rgb(255,215,0)",
            "M": "Fit Lines",
            "T": "color"
        },
        "fitLineTransparency": {
            "C": "Transparency for the color of the fit line<br>",
            "D": 1,
            "M": "Fit Lines",
            "T": "float"
        },
        "fitLineWidth": {
            "C": "Width for the fit line<br>",
            "D": 2,
            "M": "Fit Lines",
            "T": "float"
        },
        "fitLineLength": {
            "C": "Length for the fit line<br>",
            "D": null,
            "M": "Fit Lines",
            "T": "float"
        },
        "fitLineType": {
            "C": "Type of line for the fit line<br>",
            "D": "solid",
            "M": "Fit Lines",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "fitLineShow": {
            "C": "Flag to show/hide the fit line<br>",
            "D": true,
            "M": "Fit Lines",
            "T": "boolean"
        },
        "confidenceIntervalColor": {
            "C": "Color for the confidence intervals<br>",
            "D": "rgb(50,50,50)",
            "M": "Confidence Intervals",
            "T": "color"
        },
        "showConfidenceIntervals": {
            "C": "Flag to show/hide the confidence intervals in the regression plots <br>",
            "D": true,
            "M": "Confidence Intervals",
            "T": "boolean"
        },
        "confidenceLevel": {
            "C": "Confidence level for regressions and ellipses<br>",
            "D": 0.95,
            "M": "Confidence Intervals",
            "T": "float"
        },
        "confidenceIntervalColorCoordinate": {
            "C": "Flag to color coordinate the confidence intervals and line fit<br>",
            "D": false,
            "M": "Confidence Intervals",
            "T": "boolean"
        },
        "showRegressionFit": {
            "C": "Flag to show/hide the Flag to show the regression fit in Scatter2D plots<br>",
            "D": false,
            "M": "Regression",
            "T": "boolean"
        },
        "showRegressionFitEquation": {
            "C": "Flag to show/hide the Flag to show the regression fit equation in Scatter2D plots<br>",
            "D": true,
            "M": "Regression",
            "T": "boolean"
        },
        "regressionFitEquationPosition": {
            "C": "Position for the regression fit equation in Scatter2D plots<br>",
            "D": "top",
            "M": "Regression",
            "O": [
                "top",
                "bottom"
            ],
            "T": "string"
        },
        "showRegressionFullRange": {
            "C": "Flag to show/hide the full range in regression plots<br>",
            "D": false,
            "M": "Regression",
            "T": "boolean"
        },
        "regressionType": {
            "C": "Type of linear least-squares fitting methods for simple data analysis<br>",
            "D": "linear",
            "M": "Regression",
            "O": [
                "linear",
                "exponential",
                "logarithmic",
                "power",
                "polynomial"
            ],
            "T": "string"
        },
        "regressionOrder": {
            "C": "Specifies the number of degrees to solve for in polynomial regressions<br>",
            "D": 2,
            "M": "Regression",
            "T": "integer"
        },
        "showLoessFit": {
            "C": "Flag to show/hide the Flag to show the loess fit in Scatter2D plots<br>",
            "D": false,
            "M": "Loess",
            "T": "boolean"
        },
        "loessDegree": {
            "C": "Loess degree. 0 : Constant, 1 : Linear, 2 : Quadratic<br>",
            "D": 2,
            "M": "Loess",
            "O": [
                0,
                1,
                2
            ],
            "T": "string"
        },
        "loessSteps": {
            "C": "Loess steps. Number of steps to smooth the line<br>",
            "D": 30,
            "M": "Loess",
            "T": "integer"
        },
        "loessBandwidth": {
            "C": "Loess bandwidth. Thickness for the confidence of the loess curve. A vaulue between 0 and 1<br>",
            "D": 0.8,
            "M": "Loess",
            "T": "float"
        },
        "loessCell": {
            "C": "Loess cell. If interpolation is used this controls the accuracy of the approximation via the maximum number of points in a cell in the kd tree. Cells with more than floor(n*span*cell) points are subdivided<br>",
            "D": 0.2,
            "M": "Loess",
            "T": "float"
        },
        "loessSpan": {
            "C": "Loess span. Factor to adjust the gaussian shape of the loess curve. A vaulue between 0 and 1<br>",
            "D": 0.75,
            "M": "Loess",
            "T": "float"
        },
        "loessNormalize": {
            "C": "Flag to normalize loess fit in Scatter2D plots<br>",
            "D": true,
            "M": "Loess",
            "T": "boolean"
        },
        "loessFamily": {
            "C": "Loess Family. Type of error distribution to be optimized in fitting. The default, gaussian, is fitting with least squares. Fitting with Tukeys biweight M-Estimator is used if family is symmetric<br>",
            "D": "gaussian",
            "M": "Loess",
            "O": [
                "gaussian",
                "symmetric"
            ],
            "T": "string"
        },
        "loessSurface": {
            "C": "Loess Surface. The fitted surface to be computed exactly (direct) or via interpolation from a kd tree<br>",
            "D": "interpolate",
            "M": "Loess",
            "O": [
                "direct",
                "interpolate"
            ],
            "T": "string"
        },
        "loessStatistics": {
            "C": "LoessStatistics. The statistics to be computed exactly, approximately or not at all? Exact computation can be very slow <br>",
            "D": "approximate",
            "M": "Loess",
            "O": [
                "approximate",
                "exact"
            ],
            "T": "string"
        },
        "showKMConfidenceIntervals": {
            "C": "Flag to show/hide the confidence intervals in Kaplan-Meier plots <br>",
            "D": true,
            "M": "Kaplan Meier Plots",
            "T": "boolean"
        },
        "showKMMedianSurvivalTime": {
            "C": "Flag to show/hide the median survival time in Kaplan-Meier plots <br>",
            "D": false,
            "M": "Kaplan Meier Plots",
            "T": "boolean"
        },
        "kmConfidenceLevel": {
            "C": "Confidence level for Kaplan Meier plots<br>",
            "D": 0.95,
            "M": "Kaplan Meier Plots",
            "T": "float"
        },
        "kmConfidenceIntervalType": {
            "C": "Confidence intervals type for Kaplan Meier estimates<br>",
            "D": "log",
            "M": "Kaplan Meier Plots",
            "O": [
                "ordinary",
                "log",
                "loglog"
            ],
            "T": "string"
        },
        "kmInvertCensored": {
            "C": "Flag to indicate whether zero values are censored or not in Kaplan-Meier plots<br>",
            "D": false,
            "M": "Kaplan Meier Plots",
            "T": "boolean"
        },
        "kmCensoredRug": {
            "C": "Flag to indicate whether to show the censored data as a rug in Kaplan-Meier plots<br>",
            "D": false,
            "M": "Kaplan Meier Plots",
            "T": "boolean"
        },
        "kmRiskTable": {
            "C": "Data to show the number of subjects at risk in Kaplan-Meier plots. It will be aligned to the major ticks in the x Axis<br>",
            "D": false,
            "M": "Kaplan Meier Plots",
            "T": "string"
        },
        "kmPvalue": {
            "C": "Flag to show the p-value in Kaplan-Meier plots<br>",
            "D": false,
            "M": "Kaplan Meier Plots",
            "T": "boolean"
        },
        "kmTime": {
            "C": "Data to use as time2 in Kaplan-Meier plots. It must be a numeric factor as it will be used to set the range for the events in the Kaplan-Meier plot<br>",
            "D": false,
            "M": "Kaplan Meier Plots",
            "T": "string"
        },
        "kmCxplot": {
            "C": "Flag to indicate Kaplan-Meier plot was generated through survminer<br>",
            "D": false,
            "M": "Kaplan Meier Plots",
            "T": "boolean"
        },
        "kmColors": {
            "C": "Array with colors for the Kaplan-Meier plots<br>",
            "D": [],
            "M": "Kaplan Meier Plots",
            "T": "array"
        },
        "quantiles": {
            "C": "Array with quantiles to use in quantile regression plots<br>",
            "D": [
                "0.25",
                "0.5",
                "0.75"
            ],
            "M": "Quantile Regression Plots",
            "T": "array"
        },
        "showQuantileRegressionFit": {
            "C": "Flag to show/hide the Quantile Regression fit in Scatter2D plots<br>",
            "D": false,
            "M": "Quantile Regression Plots",
            "T": "boolean"
        },
        "binplotBins": {
            "C": "Approximate number of bins in a bin plot. It may vary considerably to the actual number used in the bin plot to ensure a pretty size for the intervals in the bin plot. ggplots default is 30<br>",
            "D": [],
            "M": "Bin Plots",
            "T": "array"
        },
        "binplotBinWidth": {
            "C": "Width in actual units for the histogram bin<br>",
            "D": [],
            "M": "Bin Plots",
            "T": "array"
        },
        "binplotDrop": {
            "C": "Flag to drop cells with zero counts in binplots<br>",
            "D": true,
            "M": "Bin Plots",
            "T": "boolean"
        },
        "binplotShape": {
            "C": "Type for the shape to use in binplots<br>",
            "D": "hexagon",
            "M": "Bin Plots",
            "O": [
                "rectangle",
                "hexagon",
                "oval"
            ],
            "T": "string"
        },
        "binplotColorScheme": {
            "C": "Color scheme to use in binplots<br>",
            "D": "BluesDark",
            "M": "Bin Plots",
            "O": [
                "YlGn",
                "YlGnBu",
                "GnBu",
                "BuGn",
                "PuBuGn",
                "PuBu",
                "BuPu",
                "RdPu",
                "PuRd",
                "OrRd",
                "YlOrRd",
                "YlOrBr",
                "Purples",
                "Blues",
                "BluesDark",
                "Greens",
                "Oranges",
                "Reds",
                "Greys",
                "PuOr",
                "BrBG",
                "PRGn",
                "PiYG",
                "RdBu",
                "RdGy",
                "RdYlBu",
                "Spectral",
                "RdYlGn",
                "Accent",
                "Dark2",
                "Paired",
                "Pastel1",
                "Pastel2",
                "Set1",
                "Set2",
                "Set3",
                "Default",
                "Basic",
                "Light",
                "Favorite",
                "Pastel",
                "Balanced",
                "Rpalette",
                "RlatticeBackground",
                "RlatticeShingle",
                "RlatticeLine",
                "RlatticePolygon",
                "Bootstrap",
                "Economist",
                "EconomistBG",
                "Excel",
                "Excel2",
                "Excel3",
                "GGPlot",
                "Solarized",
                "SolarizedBase",
                "PaulTol",
                "ColorBlind",
                "Tableau",
                "TableauGrey",
                "TableauColorBlind",
                "TableauTrafficLight",
                "TableauPurpleGrey",
                "TableauBlueRed",
                "TableauGreenOrange",
                "TableauCyclic",
                "TableauPairSequential",
                "TableauTripleDiverging",
                "WallStreetJournal",
                "WallStreetJournal2",
                "WallStreetJournal3",
                "WallStreetJournalRedGreen",
                "WallStreetJournalBlackGreen",
                "WallStreetJournalDemRep",
                "Stata",
                "Stata2",
                "Stata3",
                "StataMono",
                "BlackAndWhite",
                "CanvasXpress",
                "CanvasXpressT"
            ],
            "T": "string"
        },
        "maxDOENumber": {
            "C": "Maximum number of graphs when creating a DOE<br>",
            "D": 8,
            "M": "DOE",
            "T": "integer"
        },
        "includeDOE": {
            "C": "Array containing the factors to include when exploring the DOE. If left empty all the factors will be included<br>",
            "D": [],
            "M": "DOE",
            "T": "array"
        },
        "autoexpandDOE": {
            "C": "Flag to automatically expand verticaly the extent of the meta data-plots when changing the size of the graphs<br>",
            "D": true,
            "M": "DOE",
            "T": "boolean"
        },
        "extendedDOE": {
            "C": "Flag to extend DOE to include variables / samples<br>",
            "D": true,
            "M": "DOE",
            "T": "boolean"
        },
        "asDOE": {
            "C": "Object with configurations to create DOE<br>",
            "D": false,
            "M": "DOE",
            "T": "object"
        },
        "scatterPlotMatrix": {
            "C": "Could be a boolean to plot a matrix of 2D scatterplots or a sample annotation to color and segregate the plots<br>",
            "D": false,
            "M": "Scatter Plot Matrix",
            "O": [
                true,
                false
            ],
            "T": "string"
        },
        "scatterPlotMatrixType": {
            "C": "Type for the matrix of 2D scatterplots. Draw either in both panels, upper only or lower only. Show any combination of correlation, histogram, density and variability (boxplots). Also specify whether to use all versus all or only the first data set<br>",
            "D": "both",
            "M": "Scatter Plot Matrix",
            "O": [
                "both",
                "upper",
                "lower",
                "correlation",
                "correlationHistogram",
                "correlationDensity",
                "all",
                "first"
            ],
            "T": "string"
        },
        "showScatterPlotMatrixLabels": {
            "C": "Flag to show/hide the labels in the scatter plot matrix<br>",
            "D": false,
            "M": "Scatter Plot Matrix",
            "T": "boolean"
        },
        "xRotate": {
            "C": "Starting number of degrees to rotate graph arround the X axis<br>",
            "D": 45,
            "M": "3D Attributes",
            "T": "float"
        },
        "yRotate": {
            "C": "Starting number of degrees to rotate graph arround the Y axis<br>",
            "D": 0,
            "M": "3D Attributes",
            "T": "float"
        },
        "zRotate": {
            "C": "Starting number of degrees to rotate graph arround the Z axis<br>",
            "D": 0,
            "M": "3D Attributes",
            "T": "float"
        },
        "x3DRatio": {
            "C": "Value between 0 - 1 for adjusting the 3D of the X Axis<br>",
            "D": 1,
            "M": "3D Attributes",
            "T": "float"
        },
        "y3DRatio": {
            "C": "Value between 0 - 1 for adjusting the 3D of the Y Axis<br>",
            "D": 1,
            "M": "3D Attributes",
            "T": "float"
        },
        "z3DRatio": {
            "C": "Value between 0 - 1 for adjusting the 3D of the Z Axis<br>",
            "D": 1,
            "M": "3D Attributes",
            "T": "float"
        },
        "show3DGrid": {
            "C": "Flag to show/hide the X,Y,Z grid in 3D plots<br>",
            "D": true,
            "M": "3D Attributes",
            "T": "boolean"
        },
        "rotationSensitivity": {
            "C": "Factor to adjust the sensitivity of the mouse when rotating the graph<br>",
            "D": 450,
            "M": "3D Attributes",
            "T": "integer"
        },
        "rotationStep": {
            "C": "Number of degrees used when the plot is automatically rotated<br>",
            "D": 2,
            "M": "3D Attributes",
            "T": "integer"
        },
        "perspectiveFactor": {
            "C": "Factor to use to make the 3D perspective. The higher the number the more perspective. Perspective of zero is no perspective at all<br>",
            "D": 2.2,
            "M": "3D Attributes",
            "T": "float"
        },
        "outline3DColor": {
            "C": "Color for the outline of the 3D Scatters<br>",
            "D": "rgb(0,0,0)",
            "M": "3D Attributes",
            "T": "color"
        },
        "heatmapAutoAdjust": {
            "C": "Flag to adjust the color spectrum of the heatmaps when zooming in/out. The full spectrum range will be utilized to cover the selcted cells in the heatmap if the flag is set to true<br>",
            "D": false,
            "M": "Heatmap Graphs",
            "T": "boolean"
        },
        "heatmapCellBox": {
            "C": "Flag to print a box around the heatmap cells<br>",
            "D": true,
            "M": "Heatmap Graphs",
            "T": "boolean"
        },
        "heatmapCellBoxColor": {
            "C": "Color for the heatmap boxes around the cells<br>",
            "D": "rgb(102,102,102)",
            "M": "Heatmap Graphs",
            "T": "color"
        },
        "heatmapCellBoxWidth": {
            "C": "Width for the heatmap boxes around the cells<br>",
            "D": 1,
            "M": "Heatmap Graphs",
            "T": "float"
        },
        "heatmapCellBoxColorHighlight": {
            "C": "Color for the highlighted heatmap cells<br>",
            "D": "rgb(255,215,0)",
            "M": "Heatmap Graphs",
            "T": "color"
        },
        "heatmapCellBoxHighlightWidth": {
            "C": "Width for the highlighting heatmap boxes around the cells<br>",
            "D": 1,
            "M": "Heatmap Graphs",
            "T": "float"
        },
        "varTitleLabelPosition": {
            "C": "Position for variable labels<br>",
            "D": "bottom",
            "M": "Heatmap Graphs",
            "O": [
                "bottom",
                "top"
            ],
            "T": "string"
        },
        "smpTitleLabelPosition": {
            "C": "Position for sample labels<br>",
            "D": "left",
            "M": "Heatmap Graphs",
            "O": [
                "left",
                "right"
            ],
            "T": "string"
        },
        "heatmapType": {
            "C": "Type of Heatmap used to overlay a layer on top of an image. Special for spatial transcriptomics and UpSet plots<br>",
            "D": "normal",
            "M": "Heatmap Graphs",
            "O": [
                "normal",
                "circle",
                "hexagon",
                "upset",
                "correlation"
            ],
            "T": "string"
        },
        "heatmapCollapse": {
            "C": "Flag to collapse cells in heatmaps of type circle or hexagon. If true cells are ploted without outline otherwise the outline is the foreground color<br>",
            "D": false,
            "M": "Heatmap Graphs",
            "T": "boolean"
        },
        "showHeatmapIndicator": {
            "C": "Flag to show/hide the heatmap color indicator<br>",
            "D": true,
            "M": "Heatmap Color Indicators",
            "T": "boolean"
        },
        "heatmapIndicatorHeight": {
            "C": "Length in pixels for the heatmap indicator<br>",
            "D": 40,
            "M": "Heatmap Color Indicators",
            "T": "integer"
        },
        "heatmapIndicatorWidth": {
            "C": "Length in pixels for the heatmap indicator line width used for increase the size of the indicator<br>",
            "D": 200,
            "M": "Heatmap Color Indicators",
            "T": "integer"
        },
        "adjustAspectRatioHeatmapIndicator": {
            "C": "Flag to ensure the heatmap indicator scales appropriately when the graph is rendered or the user manually resizes the graph, the adjustAspectRatio flag must be set to true for the adjustAspectRatioHeatmapIndicator to take effect<br>",
            "D": true,
            "M": "Heatmap Color Indicators",
            "T": "boolean"
        },
        "heatmapIndicatorPosition": {
            "C": "Position for the heatmap indicator<br>",
            "D": "right",
            "M": "Heatmap Color Indicators",
            "O": [
                "topLeft",
                "top",
                "topRight",
                "right"
            ],
            "T": "string"
        },
        "heatmapIndicatorBeforeOverlays": {
            "C": "Flag to place the heatmap indicator before the overlay legends<br>",
            "D": true,
            "M": "Heatmap Color Indicators",
            "T": "boolean"
        },
        "heatmapIndicatorHistogram": {
            "C": "Flag to show histogram in the heatmap indicator<br>",
            "D": false,
            "M": "Heatmap Color Indicators",
            "T": "boolean"
        },
        "heatmapIndicatorHistogramColor": {
            "C": "Color for the heatmap indicator histogram<br>",
            "D": "rgb(0,255,255)",
            "M": "Heatmap Color Indicators",
            "T": "color"
        },
        "oncoprintCNA": {
            "C": "String to identify the data object to use to draw the copy number alterations; that is the amplifications (which will be colored red) and deletions (which will be colored blue). It MUST be a file with only two categorical levels<br>",
            "D": false,
            "M": "Oncoprint Graphs",
            "T": "boolean"
        },
        "oncoprintMUT": {
            "C": "String to identify the data object to use to draw the mutations. For example missense, non-synonymous, truncating, etc. Each level will be colored in a shade of green<br>",
            "D": false,
            "M": "Oncoprint Graphs",
            "T": "boolean"
        },
        "oncoprintHeatmapSwitch": {
            "C": "Switch to Oncoprint or Heatmap visualization. Requieres data in the data object<br>",
            "D": false,
            "M": "Oncoprint Graphs",
            "T": "boolean"
        },
        "oncoprintNoAlterations": {
            "C": "Switch to show variables and samples without any alterations<br>",
            "D": true,
            "M": "Oncoprint Graphs",
            "T": "boolean"
        },
        "oncoprintColSummary": {
            "C": "Flag to show column summary in oncoprints<br>",
            "D": false,
            "M": "Oncoprint Graphs",
            "T": "boolean"
        },
        "oncoprintRowSummary": {
            "C": "Flag to show row summary in oncoprints<br>",
            "D": false,
            "M": "Oncoprint Graphs",
            "T": "boolean"
        },
        "showHeatmapOncoprint": {
            "C": "Flag to show/hide the heatmap along with the oncoprint<br>",
            "D": false,
            "M": "Oncoprint Graphs",
            "T": "boolean"
        },
        "oncoprintHeatmapPosition": {
            "C": "Position for the heatmap in the oncoprint<br>",
            "D": "bottom",
            "M": "Oncoprint Graphs",
            "O": [
                "right",
                "bottom",
                "left",
                "top"
            ],
            "T": "string"
        },
        "nUpSets": {
            "C": "Number of sets to draw<br>",
            "D": 5,
            "M": "UpSet Plots",
            "T": "integer"
        },
        "nUpSetIntercepts": {
            "C": "Number of intercepts to draw<br>",
            "D": 40,
            "M": "UpSet Plots",
            "T": "integer"
        },
        "upSetSets": {
            "C": "Array containing the names of the sets to include<br>",
            "D": [],
            "M": "UpSet Plots",
            "T": "array"
        },
        "upSetIntercepts": {
            "C": "Array containing the names of the intercepts to include. Sets must be separated by &&<br>",
            "D": [],
            "M": "UpSet Plots",
            "T": "array"
        },
        "upsetShadeColor": {
            "C": "Color for the row shading in matrix<br>",
            "D": "rgb(159,159,159)",
            "M": "UpSet Plots",
            "T": "color"
        },
        "upsetShadeAlpha": {
            "C": "Transparency of shading in matrix<br>",
            "D": 0.1,
            "M": "UpSet Plots",
            "T": "float"
        },
        "upsetMatrixDotAlpha": {
            "C": "Transparency of the empty intersections points in the matrix<br>",
            "D": 0.2,
            "M": "UpSet Plots",
            "T": "float"
        },
        "upsetMatrixColor": {
            "C": "Color for the the intersection points<br>",
            "D": "rgb(59,59,59)",
            "M": "UpSet Plots",
            "T": "color"
        },
        "upsetMainBarColor": {
            "C": "Color for the the main bar plot<br>",
            "D": "rgb(59,59,59)",
            "M": "UpSet Plots",
            "T": "color"
        },
        "upsetSetsBarColor": {
            "C": "Color for the set bar plot<br>",
            "D": "rgb(59,59,59)",
            "M": "UpSet Plots",
            "T": "color"
        },
        "upsetPointSizeFactor": {
            "C": "Adjust the size of points in matrix plot<br>",
            "D": 1,
            "M": "UpSet Plots",
            "T": "float"
        },
        "upsetLineSizeFactor": {
            "C": "Adjust width of lines in matrix plot<br>",
            "D": 1,
            "M": "UpSet Plots",
            "T": "float"
        },
        "upsetMatrixPlotBarRatio": {
            "C": "Ratio between matrix plot and main bar plot<br>",
            "D": 0.7,
            "M": "UpSet Plots",
            "T": "float"
        },
        "treemapBorderWidth": {
            "C": "Width for the treemap border<br>",
            "D": 3,
            "M": "Treemap Graphs",
            "T": "integer"
        },
        "treemapBorderColor": {
            "C": "Color for the treemap header and border<br>",
            "D": "rgb(204,204,204)",
            "M": "Treemap Graphs",
            "T": "color"
        },
        "correlationAxis": {
            "C": "Axis used for the correlation<br>",
            "D": "samples",
            "M": "Correlation Graphs",
            "O": [
                "samples",
                "variables"
            ],
            "T": "string"
        },
        "correlationAnchorLegend": {
            "C": "Flag to show a region above the correlation plot that anchror a sample/variable to a position<br>",
            "D": false,
            "M": "Correlation Graphs",
            "T": "boolean"
        },
        "correlationAnchorLegendAlignWidth": {
            "C": "Length in pixels of the height of the correlation anchor legend<br>",
            "D": 40,
            "M": "Correlation Graphs",
            "T": "integer"
        },
        "correlationLabelInterval": {
            "C": "Interval for the sample or variable labels in the correlation plot<br>",
            "D": 1,
            "M": "Correlation Graphs",
            "T": "integer"
        },
        "correlationType": {
            "C": "Shape to use in the correlation graphs<br>",
            "D": "diamond",
            "M": "Correlation Graphs",
            "O": [
                "diamond",
                "circle"
            ],
            "T": "string"
        },
        "showVarDendrogram": {
            "C": "Flag to show/hide the variable (column) dendrogram<br>",
            "D": true,
            "M": "Dendrograms",
            "T": "boolean"
        },
        "varDendrogramUseHeight": {
            "C": "Boolean flag to allow the use of height in the provided Newick string for branch representation in the variable (column) dendrogram<br>",
            "D": false,
            "M": "Dendrograms",
            "T": "boolean"
        },
        "varDendrogramHang": {
            "C": "Flag to use extend the lines to the end of the terminal nodes when the newick is provided for the variable (column) dendrogram<br>",
            "D": true,
            "M": "Dendrograms",
            "T": "boolean"
        },
        "varDendrogramNewick": {
            "C": "Custom dendrogram in Newick format created outside CanvasXpress to define and specify the hierarchy for the variable (column) dendrogram.<br>",
            "D": false,
            "M": "Dendrograms",
            "T": "string"
        },
        "varDendrogramPosition": {
            "C": "Position for the variable (column) dendrogram in the plot. It could be top, bottom, right or left depending on the orientation of the graph<br>",
            "D": "top",
            "M": "Dendrograms",
            "O": [
                "top",
                "bottom"
            ],
            "T": "string"
        },
        "colorVarDendrogramBy": {
            "C": "Name of metadata annotation to color the variable (column) dendrogram<br>",
            "D": false,
            "M": "Dendrograms",
            "O": [
                false
            ],
            "T": "string"
        },
        "showSmpDendrogram": {
            "C": "Flag to show/hide the sample (row) dendrogram<br>",
            "D": true,
            "M": "Dendrograms",
            "T": "boolean"
        },
        "smpDendrogramUseHeight": {
            "C": "Boolean flag to allow the use of height in the provided Newick string for branch representation in the sample (row) dendrogram<br>",
            "D": false,
            "M": "Dendrograms",
            "T": "boolean"
        },
        "smpDendrogramHang": {
            "C": "Flag to use extend the lines to the end of the terminal nodes when the newick is provided for the sample (row) dendrogram<br>",
            "D": true,
            "M": "Dendrograms",
            "T": "boolean"
        },
        "smpDendrogramNewick": {
            "C": "Custom dendrogram in Newick format created outside CanvasXpress to define and specify the hierarchy for the sample (row) dendrogram.<br>",
            "D": false,
            "M": "Dendrograms",
            "T": "string"
        },
        "smpDendrogramPosition": {
            "C": "Position for the sample (row) dendrogram in the plot. It could be top, bottom, right or left depending on the orientation of the graph<br>",
            "D": "left",
            "M": "Dendrograms",
            "O": [
                "left",
                "right"
            ],
            "T": "string"
        },
        "colorSmpDendrogramBy": {
            "C": "Name of metadata annotation to color the sample (row) dendrogram<br>",
            "D": false,
            "M": "Dendrograms",
            "O": [
                false
            ],
            "T": "string"
        },
        "dendrogramHeight": {
            "C": "Size in pixels for the dendrogram<br>",
            "D": 80,
            "M": "Dendrograms",
            "T": "integer"
        },
        "dendrogramColor": {
            "C": "Color for the dendrograms<br>",
            "D": "rgb(0,0,0)",
            "M": "Dendrograms",
            "T": "color"
        },
        "clusteringDistance": {
            "C": "Distance metric to use when clustering data<br>",
            "D": "euclidianDistance",
            "M": "Clustering",
            "O": [
                "euclidianDistance",
                "manhattanDistance",
                "maxDistance"
            ],
            "T": "string"
        },
        "linkage": {
            "C": "Linkage type to use when clustering data<br>",
            "D": "complete",
            "M": "Clustering",
            "O": [
                "single",
                "complete",
                "average"
            ],
            "T": "string"
        },
        "clusterAxis": {
            "C": "Axis to use when clustering data<br>",
            "D": "samples",
            "M": "Clustering",
            "O": [
                "samples",
                "variables"
            ],
            "T": "string"
        },
        "kmeansVarClusters": {
            "C": "Number of clusters when clustering variable data with kmeans<br>",
            "D": 3,
            "M": "Clustering",
            "T": "integer"
        },
        "kmeansSmpClusters": {
            "C": "Number of clusters when clustering sample data with kmeans<br>",
            "D": 3,
            "M": "Clustering",
            "T": "integer"
        },
        "maxIterations": {
            "C": "Number of maximum iterations when clustering data with kmeans for one dimensional graphs or maximum number of iterations when calculating force direct layout networks<br>",
            "D": 500,
            "M": "Clustering",
            "T": "integer"
        },
        "imputeMethod": {
            "C": "Imputation method for missing data when clustering<br>",
            "D": "mean",
            "M": "Clustering",
            "O": [
                "mean",
                "median"
            ],
            "T": "string"
        },
        "samplesClustered": {
            "C": "Configuration property to cluster samples<br>",
            "D": false,
            "M": "Clustering",
            "T": "boolean"
        },
        "variablesClustered": {
            "C": "Configuration property to cluster variables<br>",
            "D": false,
            "M": "Clustering",
            "T": "boolean"
        },
        "samplesKmeaned": {
            "C": "Configuration property to k-mean samples<br>",
            "D": false,
            "M": "Clustering",
            "T": "boolean"
        },
        "variablesKmeaned": {
            "C": "Configuration property to k-mean variables<br>",
            "D": false,
            "M": "Clustering",
            "T": "boolean"
        },
        "vennLegendColors": {
            "C": "Flag to use the venn colors to use for the legends instead of the letters<br>",
            "D": false,
            "M": "Venn Diagrams",
            "T": "boolean"
        },
        "vennGroups": {
            "C": "Number of groups in the Venn diagram<br>",
            "D": 4,
            "M": "Venn Diagrams",
            "T": "integer"
        },
        "vennColors": {
            "C": "Colors for the Venn bubles. If not specified the colors will be chosen from the colors array. Colors in this array need to be at least the same number of groups in the Venn diagram<br>",
            "D": [],
            "M": "Venn Diagrams",
            "T": "array"
        },
        "pieType": {
            "C": "Position for the pices of the pie<br>",
            "D": "separated",
            "M": "Pie Charts",
            "O": [
                "separated",
                "solid"
            ],
            "T": "string"
        },
        "pieSegmentPrecision": {
            "C": "Number of decimals for values in the Pie charts<br>",
            "D": 0,
            "M": "Pie Charts",
            "T": "integer"
        },
        "pieSegmentSeparation": {
            "C": "Length in pixels for the separation of the pieces of the pie charts<br>",
            "D": 1,
            "M": "Pie Charts",
            "T": "integer"
        },
        "pieSegmentLabels": {
            "C": "Location for the values in the pie charts<br>",
            "D": "inside",
            "M": "Pie Charts",
            "O": [
                "inside",
                "outside"
            ],
            "T": "string"
        },
        "pieLabelType": {
            "C": "Pie label type to show the percentage of the slice or the actual number<br>",
            "D": "percentage",
            "M": "Pie Charts",
            "O": [
                "percentage",
                "value"
            ],
            "T": "string"
        },
        "maxPieSectors": {
            "C": "Max pie sectors. After that number the sectors will be put in a sector named other<br>",
            "D": 20,
            "M": "Pie Charts",
            "T": "float"
        },
        "showPieValues": {
            "C": "Flag to show/hide the values for the pie<br>",
            "D": true,
            "M": "Pie Charts",
            "T": "boolean"
        },
        "showPieSampleLabel": {
            "C": "Flag to show/hide the sample label when plotting multiple pies<br>",
            "D": true,
            "M": "Pie Charts",
            "T": "boolean"
        },
        "startPieSectors": {
            "C": "Starting degrees for pie sectors. 0 is equivalent to 3:00 oclock<br>",
            "D": 270,
            "M": "Pie Charts",
            "T": "float"
        },
        "pieInnerRadius": {
            "C": "Percentage of the radius in the pies to remove to make a donut. It must be a number between 0 to 1<br>",
            "D": 0,
            "M": "Pie Charts",
            "T": "float"
        },
        "pieColors": {
            "C": "Pie Colors. Defaults to the parameter colors<br>",
            "D": [],
            "M": "Pie Charts",
            "T": "array"
        },
        "circularType": {
            "C": "Property to set the subtype of circular graph. If set to sunburst or bubble then smpOverlays can be used to build a hierarchy for the graph<br>",
            "D": "normal",
            "M": "Circular Graphs",
            "O": [
                "normal",
                "radar",
                "sunburst",
                "chord",
                "bubble"
            ],
            "T": "string"
        },
        "chordThickness": {
            "C": "Relative length in pixels of the chord thickness in the circular graphs. Only applicable to the chord subtype<br>",
            "D": 28,
            "M": "Circular Graphs",
            "T": "integer"
        },
        "chordColor": {
            "C": "Color the ribbon according to either the source or the target of the connection<br>",
            "D": "source",
            "M": "Circular Graphs",
            "O": [
                "source",
                "target"
            ],
            "T": "string"
        },
        "bubbleColor": {
            "C": "Color for the Bubbles. Only applicable to the bubble subtype<br>",
            "D": "rgba(204,204,204,0.33)",
            "M": "Circular Graphs",
            "T": "color"
        },
        "bubbleOutlineColor": {
            "C": "Color for the Outline of bubbles. Only applicable to the bubble subtype<br>",
            "D": "rgb(0,0,0)",
            "M": "Circular Graphs",
            "T": "color"
        },
        "bubbleLabel": {
            "C": "Position for the labels in bubble circular plot<br>",
            "D": "auto",
            "M": "Circular Graphs",
            "O": [
                "first",
                "last",
                "all",
                "auto",
                "none"
            ],
            "T": "string"
        },
        "bubbleLabelPosition": {
            "C": "Position for the labels in bubble circular plot<br>",
            "D": "center",
            "M": "Circular Graphs",
            "O": [
                "top",
                "center",
                "down"
            ],
            "T": "string"
        },
        "bubbleLabelLineType": {
            "C": "Line type when label is away from the bubble<br>",
            "D": "arch",
            "M": "Circular Graphs",
            "O": [
                "line",
                "arch"
            ],
            "T": "string"
        },
        "circularCenterProportion": {
            "C": "Proportion of the center of the circular graph to use as void; that is the fraction of the radius in the middle of the graph<br>",
            "D": 0.3,
            "M": "Circular Graphs",
            "T": "float"
        },
        "arcSegmentsSeparation": {
            "C": "Number of degrees to separate the arc segments in the circular plots. The arc segments can be set with the segregateSampleBy property<br>",
            "D": 8,
            "M": "Circular Graphs",
            "T": "integer"
        },
        "circularRotate": {
            "C": "Number of degrees to rotate the circular graph to adjust the starting point<br>",
            "D": 0,
            "M": "Circular Graphs",
            "T": "integer"
        },
        "circularArc": {
            "C": "Number of degrees to extend the circular graph<br>",
            "D": 360,
            "M": "Circular Graphs",
            "T": "integer"
        },
        "ringSeparation": {
            "C": "Number of pixels to separate the rings in the circular plots<br>",
            "D": 5,
            "M": "Circular Graphs",
            "T": "integer"
        },
        "ringGraphType": {
            "C": "Array containing the graph type for each ring in the circular plot<br>",
            "D": [],
            "M": "Circular Graphs",
            "T": "array"
        },
        "ringGraphWeight": {
            "C": "Array containing the proportion of the dimensions for each data ring in the circular plot. It must be a value between 0.1 and 1. If not specified then all ring will be weighted the same<br>",
            "D": [],
            "M": "Circular Graphs",
            "T": "array"
        },
        "arcSegmentsRadius": {
            "C": "Array containing the proportion of the radius for each arc segment in the circular plot. If not specified then all radius will be the same. The plot will be scaled based of the largest value in the array<br>",
            "D": [],
            "M": "Circular Graphs",
            "T": "array"
        },
        "ringsOrder": {
            "C": "Array containing the order of the rings. The array includes the levels of the factor specified as either segregateSamplesBy when show the ideogram or segregateVariablesBy when there is no ideogram. It may also include any of the following terms: dendrogram, ideogram, labels, scale, percent and data. If there are sample overlays, the array may also contain any of the factor names include in the this.data.x object. This array supersede any other configurations for example for the sample overlays. CanvasXpress will honored all other configurations if left empty<br>",
            "D": [],
            "M": "Circular Graphs",
            "T": "array"
        },
        "rAxis": {
            "C": "Radial axis for circular plots. It must be the name of a variable. Only applicable to 2 Dimensional circular plots<br>",
            "D": false,
            "M": "Circular Graphs",
            "T": "string"
        },
        "rAxisZero": {
            "C": "Flag to force the rAxis property to start from zero otherwise it starts from the minimum value<br>",
            "D": false,
            "M": "Circular Graphs",
            "T": "boolean"
        },
        "showCircularConnections": {
            "C": "Flag to show/hide the connections in circular graphs<br>",
            "D": true,
            "M": "Circular Graphs",
            "T": "boolean"
        },
        "connections": {
            "C": "Array to store connections in circular graphs<br>",
            "D": [],
            "M": "Circular Graphs",
            "T": "array"
        },
        "circularLetterSeparationFactor": {
            "C": "Factor to adjust the spacing between letters in the circular graphs. The greater the number the closer the letters in the labels<br>",
            "D": 1.5,
            "M": "Circular Graphs",
            "T": "float"
        },
        "circularConnectionsTransparency": {
            "C": "Percentage of transparency applied to the connections in the circular graphs<br>",
            "D": 0.5,
            "M": "Circular Graphs",
            "T": "float"
        },
        "overlayLevelOrientation": {
            "C": "Orientation to show the segregation levels<br>",
            "D": "circular",
            "M": "Circular Graphs",
            "O": [
                "perpendicular",
                "circular"
            ],
            "T": "string"
        },
        "smpLabelOrientation": {
            "C": "Orientation to show the sample names<br>",
            "D": "perpendicular",
            "M": "Circular Graphs",
            "O": [
                "perpendicular",
                "circular"
            ],
            "T": "string"
        },
        "circularLabelsAlign": {
            "C": "Position to align the variable and sample names in circular plot<br>",
            "D": "outside",
            "M": "Circular Graphs",
            "O": [
                "inside",
                "outside"
            ],
            "T": "string"
        },
        "circularScalesAlign": {
            "C": "Position to align the percent and radial axes in circular plot<br>",
            "D": "inside",
            "M": "Circular Graphs",
            "O": [
                "inside",
                "outside"
            ],
            "T": "string"
        },
        "circularAnchorsAlign": {
            "C": "Position to align the anchors in circular plot<br>",
            "D": "inside",
            "M": "Circular Graphs",
            "O": [
                "inside",
                "outside"
            ],
            "T": "string"
        },
        "circularAnchors2Align": {
            "C": "Position to align the anchors2 in circular plot<br>",
            "D": "outside",
            "M": "Circular Graphs",
            "O": [
                "inside",
                "outside"
            ],
            "T": "string"
        },
        "circularDataPosition": {
            "C": "Position to align the data in 2D radial graphs and ideograms<br>",
            "D": "distributed",
            "M": "Circular Graphs",
            "O": [
                "absolute",
                "distributed"
            ],
            "T": "string"
        },
        "circularAnchorLength": {
            "C": "Length in pixels of the height of the circular anchor<br>",
            "D": 15,
            "M": "Circular Graphs",
            "T": "integer"
        },
        "circularAnchorColor": {
            "C": "Color for the circular anchor<br>",
            "D": "rgb(0,0,255)",
            "M": "Circular Graphs",
            "T": "color"
        },
        "ideogramChromosome": {
            "C": "Factor name included in the data.z object used to map to the chromosome number<br>",
            "D": "chr",
            "M": "Circular Graphs",
            "T": "string"
        },
        "ideogramChromosomePosition": {
            "C": "Factor name included in the data.z object used to map to the chromosome position<br>",
            "D": "pos",
            "M": "Circular Graphs",
            "T": "string"
        },
        "showIdeogram": {
            "C": "Flag to show/hide the Human Chromosome Ideogram. Force circular plots to be two dimensional<br>",
            "D": false,
            "M": "Ideograms",
            "T": "boolean"
        },
        "ideogram": {
            "C": "Ideogram. Additional ideograms can be loaded by appending to the CanvasXpress.chromosomes object. The format of the ideogram is based on the R data for USCS.hg19.chr<br> CanvasXpress.chromosomes = {<br> &nbsp;&nbsp;hg19 : {<br> &nbsp;&nbsp;&nbsp;&nbsp;order : [ 1, 2, 3, 4, 5, 6, 7, 8, ...],<br> &nbsp;&nbsp;&nbsp;&nbsp;data : {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 : [ [ 0, 2300000, \"p36.33\", \"gneg\" ], ...],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 : [ [ 0, 4300000, \"p25.3\", \"gneg\" ],  ...],<br> &nbsp;&nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;}<br> }<br>",
            "D": "hg38",
            "M": "Ideograms",
            "O": [
                "hg19",
                "hg38"
            ],
            "T": "string"
        },
        "ideogramChromosomeNumber": {
            "C": "Chromosome number<br>",
            "D": "1",
            "M": "Ideograms",
            "T": "string"
        },
        "ideogramShowFullChromosome": {
            "C": "Show the full chromosome<br>",
            "D": true,
            "M": "Ideograms",
            "T": "boolean"
        },
        "ideogramSegmentFontStyle": {
            "C": "Font style for the ideogram segment<br>",
            "D": "",
            "M": "Ideograms",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "ideogramSegmentColor": {
            "C": "Color for the text in ideogram segment<br>",
            "D": "rgb(0,0,0)",
            "M": "Ideograms",
            "T": "color"
        },
        "ideogramSegmentFontSize": {
            "C": "Font size for the text in ideogram segment. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the ideogramSegmentScaleFontFactor<br>",
            "D": 10,
            "M": "Ideograms",
            "T": "integer"
        },
        "ideogramSegmentScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the ideogram segment font size in the canvas<br>",
            "D": 1,
            "M": "Ideograms",
            "T": "float"
        },
        "ideogramSegmentAlign": {
            "C": "Alignment (or position) for the ideogram segment<br>",
            "D": "center",
            "M": "Ideograms",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "ideogramSegmentBaseline": {
            "C": "Baseline (or reference line) for the ideogram segment<br>",
            "D": "middle",
            "M": "Ideograms",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "ideogramSegmentRotate": {
            "C": "Rotation in degrees for the ideogram segment<br>",
            "D": 0,
            "M": "Ideograms",
            "T": "integer"
        },
        "ideogramSegmentMargin": {
            "C": "Margin to pad or separate the characters in the ideogram segment<br>",
            "D": 8,
            "M": "Ideograms",
            "T": "float"
        },
        "ideogramHeight": {
            "C": "Default size in pixels of the ideogram height<br>",
            "D": 20,
            "M": "Ideograms",
            "T": "integer"
        },
        "tagCloudTextWeightFactor": {
            "C": "Factor weight for text in tag cloud visualizations<br>",
            "D": 1,
            "M": "Tag Cloud",
            "T": "integer"
        },
        "tagCloudTextGridSize": {
            "C": "Size for the grid in text tag cloud visualizations<br>",
            "D": 8,
            "M": "Tag Cloud",
            "T": "integer"
        },
        "tagCloudTextEllipticity": {
            "C": "Ellipticity for the for text in tag cloud visualizations<br>",
            "D": 0.65,
            "M": "Tag Cloud",
            "T": "float"
        },
        "tagCloudTextRotateRatio": {
            "C": "Ratio for rotation of text in cloud visualizations<br>",
            "D": 0.1,
            "M": "Tag Cloud",
            "T": "float"
        },
        "tagCloudShape": {
            "C": "Shape for the tag cloud<br>",
            "D": false,
            "M": "Tag Cloud",
            "O": [
                false,
                "circle",
                "cardioid",
                "diamond",
                "square",
                "triangle",
                "triangle2",
                "pentagon",
                "star"
            ],
            "T": "string"
        },
        "tagCloudMask": {
            "C": "Add a shadow for the selected shape<br>",
            "D": false,
            "M": "Tag Cloud",
            "T": "boolean"
        },
        "calculateLayout": {
            "C": "Flag to force or not to calculate the network layout<br>",
            "D": true,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "networkFreeze": {
            "C": "Flag to prevent autoscaling for the network layout. Useful when images are part of the network<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "networkMaxIterations": {
            "C": "Number of iterations to separate subnetworks<br>",
            "D": 15,
            "M": "Network Graphs",
            "T": "integer"
        },
        "networkFreezeOnLoad": {
            "C": "Flag to prevent autoscaling for the network layout after loading. Useful when images are part of the network<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "preScaleNetwork": {
            "C": "Flag to prescale or not the network. This is an aesthetic parameter to make the graph look nicer... Sometimes..<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "ignoreEventlessOrder": {
            "C": "Flag to render all nodes at one time rather that rendering first the eventless nodes and then the non-eventless nodes<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "networkLayoutType": {
            "C": "Type of network layout<br>",
            "D": "forceDirected",
            "M": "Network Graphs",
            "O": [
                "forceDirected",
                "circular",
                "radial",
                "cola"
            ],
            "T": "string"
        },
        "networkRoot": {
            "C": "Node Id of the network root<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "string"
        },
        "isNetworkMetrics": {
            "C": "Flag to calculate all network metrics: betweenness, closeness, eccentricity and degree<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "showNetworkRadialLayout": {
            "C": "Flag to show/hide the radial layout wire<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "is3DNetwork": {
            "C": "Flag to create or not a 3D network<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "networkNodesOnTop": {
            "C": "Order to use when drawing the nodes and edges in the networks. Useful for very populated netwrok graphs. When is set to true all the edges will be in the background<br>",
            "D": true,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "moveParentsWithChildren": {
            "C": "Flag to make parents move when a child is moved<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "boolean"
        },
        "highlightNode": {
            "C": "Name of nodes in the data.nodes object to highlight<br>",
            "D": [],
            "M": "Network Graphs",
            "T": "array"
        },
        "nodeHighlightColor": {
            "C": "Color for the highlighted nodes<br>",
            "D": "rgb(255,0,0)",
            "M": "Network Graphs",
            "T": "color"
        },
        "showNodeNameThreshold": {
            "C": "Thereshold used to set the limit to hide or display the name of nodes in a network. If the number of nodes exceed this thereshold then the name will not be shown<br>",
            "D": 50,
            "M": "Network Graphs",
            "T": "integer"
        },
        "showNodeNameSizeThreshold": {
            "C": "Thereshold used to set the limit to hide or display the name of nodes in a network based on the size of the node. If the number of node size exceed this thereshold then the name will be shown<br>",
            "D": 20,
            "M": "Network Graphs",
            "T": "integer"
        },
        "nodeSizeScaleFactor": {
            "C": "Scaling factor for increasing size of all nodes in the network<br>",
            "D": 1,
            "M": "Network Graphs",
            "T": "float"
        },
        "edgeColor": {
            "C": "Color for the edges<br>",
            "D": "rgb(0,0,0)",
            "M": "Network Graphs",
            "T": "color"
        },
        "edgeSeparationFactor": {
            "C": "Factor to adjust the separation between the edge and the node in the networks<br>",
            "D": 1,
            "M": "Network Graphs",
            "T": "float"
        },
        "labelNodePosition": {
            "C": "Default position for the node label<br>",
            "D": "auto",
            "M": "Network Graphs",
            "O": [
                "auto",
                "center",
                "top",
                "right",
                "bottom",
                "left"
            ],
            "T": "string"
        },
        "nodeFontStyle": {
            "C": "Font style for the node<br>",
            "D": "",
            "M": "Network Graphs",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "nodeColor": {
            "C": "Color for the nodes<br>",
            "D": "rgb(245,245,245)",
            "M": "Network Graphs",
            "T": "color"
        },
        "nodeFontSize": {
            "C": "Font size for the text in node. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the nodeScaleFontFactor<br>",
            "D": 11,
            "M": "Network Graphs",
            "T": "integer"
        },
        "nodeScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the node font size in the canvas<br>",
            "D": 1,
            "M": "Network Graphs",
            "T": "float"
        },
        "nodeAlign": {
            "C": "Alignment (or position) for the node<br>",
            "D": "center",
            "M": "Network Graphs",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "nodeBaseline": {
            "C": "Baseline (or reference line) for the node<br>",
            "D": "middle",
            "M": "Network Graphs",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "nodeRotate": {
            "C": "Rotation in degrees for the node<br>",
            "D": 0,
            "M": "Network Graphs",
            "T": "integer"
        },
        "nodeMargin": {
            "C": "Margin to pad or separate the characters in the node<br>",
            "D": 8,
            "M": "Network Graphs",
            "T": "float"
        },
        "networkVendor": {
            "C": "Network vendor<br>",
            "D": false,
            "M": "Network Graphs",
            "T": "string"
        },
        "networkProgressBarPosition": {
            "C": "Position for the progress bar<br>",
            "D": "bottom",
            "M": "Network Graphs",
            "O": [
                "none",
                "bottom",
                "center",
                "top"
            ],
            "T": "string"
        },
        "networkConvergenceThreshold": {
            "C": "Threshold for the convergence of the network<br>",
            "D": 0.05,
            "M": "Network Algorithm Parameters",
            "T": "float"
        },
        "attractiveForceFunction": {
            "C": "Type of function to apply when calculating attractive force in forceDirected network layouts. Fruchterman-Reingold uses square while Eades uses log<br>",
            "D": "square",
            "M": "Network Algorithm Parameters",
            "O": [
                "square",
                "cubic",
                "log",
                "pow",
                "sqrt"
            ],
            "T": "string"
        },
        "repulsiveForceFunction": {
            "C": "Type of function to apply when calculating repulsive force in forceDirected network layouts. Fruchterman-Reingold uses square while Eades uses log<br>",
            "D": "square",
            "M": "Network Algorithm Parameters",
            "O": [
                "square",
                "cubic",
                "log",
                "pow",
                "sqrt"
            ],
            "T": "string"
        },
        "useBarnesHutSimulation": {
            "C": "Flag to use Barnes–Hut simulation<br>",
            "D": false,
            "M": "Network Algorithm Parameters",
            "T": "boolean"
        },
        "networkDisjoint": {
            "C": "Flag to use positioning forces rather than centering forces. Applicable only to force directed layouts that contain multiple subnetworks<br>",
            "D": true,
            "M": "Network Algorithm Parameters",
            "T": "boolean"
        },
        "networkSpeed": {
            "C": "Network Speed<br>",
            "D": 0.1,
            "M": "Network Algorithm Parameters",
            "T": "float"
        },
        "networkGravity": {
            "C": "Network Gravity<br>",
            "D": 0.75,
            "M": "Network Algorithm Parameters",
            "T": "float"
        },
        "networkSpringLength": {
            "C": "Ideal length for links (springs in physical model)<br>",
            "D": 35,
            "M": "Network Algorithm Parameters",
            "T": "integer"
        },
        "networkSpringCoeff": {
            "C": "Hooks law coefficient. 1 - solid spring<br>",
            "D": 0.0008,
            "M": "Network Algorithm Parameters",
            "T": "float"
        },
        "networkRepulsion": {
            "C": "Coulombs law coefficient. Its used to repel nodes thus should be negative if you make it positive nodes start attract each other<br>",
            "D": -1,
            "M": "Network Algorithm Parameters",
            "T": "float"
        },
        "networkTheta": {
            "C": "Theta coefficient from Barnes Hut simulation. Ranged between (0, 1). The closer its to 1 the more nodes algorithm will have to go through. Setting it to one makes Barnes Hut simulation no different from brute-force forces calculation (each node is considered)<br>",
            "D": 0.8,
            "M": "Network Algorithm Parameters",
            "T": "float"
        },
        "networkDragCoeff": {
            "C": "Drag force coefficient. Used to slow down system, thus should be less than 1. The closer it is to 0 the less tight system will be<br>",
            "D": 0.09,
            "M": "Network Algorithm Parameters",
            "T": "float"
        },
        "networkTimeStep": {
            "C": "Default time step (dt) for forces integration<br>",
            "D": 20,
            "M": "Network Algorithm Parameters",
            "T": "integer"
        },
        "networkColaLinkDistance": {
            "C": "Ideal length for links<br>",
            "D": 20,
            "M": "Network Cola Algorithm Parameters",
            "T": "integer"
        },
        "networkColaAvoidOverlaps": {
            "C": "Flag to avoid overlaps of nodes in the cola network<br>",
            "D": true,
            "M": "Network Cola Algorithm Parameters",
            "T": "boolean"
        },
        "networkColaHandleDisconnected": {
            "C": "Handle disconnected nodes in the cola network<br>",
            "D": true,
            "M": "Network Cola Algorithm Parameters",
            "T": "boolean"
        },
        "networkColaConvergenceThreshold": {
            "C": "Threshold for the convergence of the cola network<br>",
            "D": 0.01,
            "M": "Network Cola Algorithm Parameters",
            "T": "float"
        },
        "networkColaGroupCompactness": {
            "C": "Compactness for the groups in the cola network<br>",
            "D": 0.000001,
            "M": "Network Cola Algorithm Parameters",
            "T": "float"
        },
        "networkColaSymmetricDiffLinkLengths": {
            "C": "Symmetric difference for the link lengths in the cola network<br>",
            "D": 5,
            "M": "Network Cola Algorithm Parameters",
            "T": "integer"
        },
        "networkColaJaccardLinkLength": {
            "C": "Ideal length foreach link based on the graph structure around that link. You can use this to create extra space around hub-nodes in dense graphs<br>",
            "D": false,
            "M": "Network Cola Algorithm Parameters",
            "T": "float"
        },
        "networkColaJaccardLinkLengthDefault": {
            "C": "Default length foreach link based on the graph structure around that link. You can use this to create extra space around hub-nodes in dense graphs<br>",
            "D": 1,
            "M": "Network Cola Algorithm Parameters",
            "T": "float"
        },
        "networkColaFlowLayoutAxis": {
            "C": "Causes constraints to be generated such that directed graphs are laid out either from left-to-right or top-to-bottom. A separation constraint is generated in the selected axis for each edge that is not involved in a cycle<br>",
            "D": false,
            "M": "Network Cola Algorithm Parameters",
            "O": [
                false,
                "x",
                "y"
            ],
            "T": "string"
        },
        "networkColaFlowLayoutSeparation": {
            "C": "Causes constraints to be generated such that directed graphs are laid out either from left-to-right or top-to-bottom. A separation constraint is generated in the selected axis for each edge that is not involved in a cycle<br>",
            "D": 10,
            "M": "Network Cola Algorithm Parameters",
            "T": "float"
        },
        "networkColaStartUnconstrainedIterations": {
            "C": "Number of iterations to run unconstrained<br>",
            "D": 0,
            "M": "Network Cola Algorithm Parameters",
            "T": "integer"
        },
        "networkColaUserConstraintIterations": {
            "C": "Number of user iterations to run unconstrained<br>",
            "D": 0,
            "M": "Network Cola Algorithm Parameters",
            "T": "integer"
        },
        "networkColaAllConstraintsIterations": {
            "C": "Number of iterations to run all constraints<br>",
            "D": 0,
            "M": "Network Cola Algorithm Parameters",
            "T": "integer"
        },
        "networkColaGridSnapIterations": {
            "C": "Number of iterations to run grid snap<br>",
            "D": 0,
            "M": "Network Cola Algorithm Parameters",
            "T": "integer"
        },
        "networkColaKeepRunning": {
            "C": "Flag to keep running the cola network<br>",
            "D": true,
            "M": "Network Cola Algorithm Parameters",
            "T": "boolean"
        },
        "networkColaCenterGraph": {
            "C": "Flag to center the cola network<br>",
            "D": true,
            "M": "Network Cola Algorithm Parameters",
            "T": "boolean"
        },
        "colorNodeBy": {
            "C": "Name of the attribute to color the nodes<br>",
            "D": false,
            "M": "Network Node and Edge Attributes",
            "T": "string"
        },
        "shapeNodeBy": {
            "C": "Name of the attribute to shape the nods<br>",
            "D": false,
            "M": "Network Node and Edge Attributes",
            "T": "string"
        },
        "sizeNodeBy": {
            "C": "Name of the attribute to size the nodes<br>",
            "D": false,
            "M": "Network Node and Edge Attributes",
            "T": "string"
        },
        "patternNodeBy": {
            "C": "Name of the attribute to pattern the nodes<br>",
            "D": false,
            "M": "Network Node and Edge Attributes",
            "T": "string"
        },
        "colorEdgeBy": {
            "C": "Name of the attribute to color the edges<br>",
            "D": false,
            "M": "Network Node and Edge Attributes",
            "T": "string"
        },
        "sizeEdgeBy": {
            "C": "Name of the attribute to size the edges<br>",
            "D": false,
            "M": "Network Node and Edge Attributes",
            "T": "string"
        },
        "minEdgeSize": {
            "C": "Number of pixels to add to the minimum thickness for the edges when the edges are sized by a property. Should be a value between 0 and 1.5<br>",
            "D": 0,
            "M": "Network Node and Edge Attributes",
            "T": "float"
        },
        "maxEdgeSize": {
            "C": "Thickness for the edges when the edges are sized by a property. Should be a value between 10 and 20<br>",
            "D": 10,
            "M": "Network Node and Edge Attributes",
            "T": "float"
        },
        "showNetworkCommunities": {
            "C": "Flag to show/hide the network communities<br>",
            "D": false,
            "M": "Network Communities",
            "T": "boolean"
        },
        "calculateNetworkCommunities": {
            "C": "Flag to calculate the network communities using the jLouvain algorithm. If this flag is false the property community and communityColor for each node will need to be provided, otherwise all nodes will belong to a single community<br>",
            "D": true,
            "M": "Network Communities",
            "T": "boolean"
        },
        "coordinateNetworkConvexHullCommunityColor": {
            "C": "Flag to coordinate colors of the nodes with convex hull for the network communities<br>",
            "D": false,
            "M": "Network Communities",
            "T": "boolean"
        },
        "hullScale": {
            "C": "Scaling factor for extension of the hulls in the network communities<br>",
            "D": 1.25,
            "M": "Network Communities",
            "T": "float"
        },
        "genomeTicks": {
            "C": "Number of ticks in the genome browser<br>",
            "D": 50,
            "M": "Genome Browser",
            "T": "integer"
        },
        "wireColor": {
            "C": "Color for the ticks in the genome browser<br>",
            "D": "rgba(204,204,204,0.1)",
            "M": "Genome Browser",
            "T": "color"
        },
        "periodTicksLabels": {
            "C": "Number of ticks to skip between values in the genome browser<br>",
            "D": 5,
            "M": "Genome Browser",
            "T": "integer"
        },
        "genomeResolution": {
            "C": "Number to adjust the splines curvature<br>",
            "D": "low",
            "M": "Genome Browser",
            "O": [
                "low",
                "medium",
                "high"
            ],
            "T": "string"
        },
        "trackNameFontStyle": {
            "C": "Font style for the track name<br>",
            "D": "",
            "M": "Genome Browser Tracks",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "trackNameColor": {
            "C": "Color for the text in track name<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Tracks",
            "T": "color"
        },
        "trackNameFontSize": {
            "C": "Font size for the text in track name. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the trackNameScaleFontFactor<br>",
            "D": 11,
            "M": "Genome Browser Tracks",
            "T": "integer"
        },
        "trackNameScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the track name font size in the canvas<br>",
            "D": 1,
            "M": "Genome Browser Tracks",
            "T": "float"
        },
        "trackNameAlign": {
            "C": "Alignment (or position) for the track name<br>",
            "D": "center",
            "M": "Genome Browser Tracks",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "trackNameBaseline": {
            "C": "Baseline (or reference line) for the track name<br>",
            "D": "middle",
            "M": "Genome Browser Tracks",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "trackNameRotate": {
            "C": "Rotation in degrees for the track name<br>",
            "D": 0,
            "M": "Genome Browser Tracks",
            "T": "integer"
        },
        "trackNameMargin": {
            "C": "Margin to pad or separate the characters in the track name<br>",
            "D": 8,
            "M": "Genome Browser Tracks",
            "T": "float"
        },
        "trackFillColor": {
            "C": "Color for the fill of the tracks in the genome browser<br>",
            "D": "rgb(255,255,255)",
            "M": "Genome Browser Tracks",
            "T": "color"
        },
        "trackDirColor": {
            "C": "Color for the strand direction of the tracks in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Tracks",
            "T": "color"
        },
        "subtracksMaxDefault": {
            "C": "Maximum number of subtracks to show in a track<br>",
            "D": 8,
            "M": "Genome Browser Tracks",
            "T": "integer"
        },
        "trackConfigurableProperties": {
            "C": "Track configurable properties<br> @tracks {name:[string];Track name;[]}<br>",
            "D": [
                "name",
                "hideName",
                "hideFeatureNames",
                "type",
                "height",
                "fill",
                "outline",
                "data",
                "hide",
                "connect",
                "subtracksMax",
                "highlight"
            ],
            "M": "Genome Browser Tracks",
            "T": "array"
        },
        "showFeatureNameThereshold": {
            "C": "Threshehold used to set te limit when there are too many features in the genome browser<br>",
            "D": 20,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureNameFontStyle": {
            "C": "Font style for the feature name<br>",
            "D": "",
            "M": "Genome Browser Features",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "featureNameColor": {
            "C": "Color for the text in feature name<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Features",
            "T": "color"
        },
        "featureNameFontSize": {
            "C": "Font size for the text in feature name. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the featureNameScaleFontFactor<br>",
            "D": 11,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureNameScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the feature name font size in the canvas<br>",
            "D": 1,
            "M": "Genome Browser Features",
            "T": "float"
        },
        "featureNameAlign": {
            "C": "Alignment (or position) for the feature name<br>",
            "D": "center",
            "M": "Genome Browser Features",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "featureNameBaseline": {
            "C": "Baseline (or reference line) for the feature name<br>",
            "D": "middle",
            "M": "Genome Browser Features",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "featureNameRotate": {
            "C": "Rotation in degrees for the feature name<br>",
            "D": 0,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureNameMargin": {
            "C": "Margin to pad or separate the characters in the feature name<br>",
            "D": 8,
            "M": "Genome Browser Features",
            "T": "float"
        },
        "featureFillColor": {
            "C": "Color for the fill of the feature in the genome browser<br>",
            "D": "rgb(255,255,255)",
            "M": "Genome Browser Features",
            "T": "color"
        },
        "featureDirColor": {
            "C": "Color for the strand direction of the feature in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Features",
            "T": "color"
        },
        "maxFeatureStringLen": {
            "C": "Maximum length in characters a feature label can have so anything above is truncated<br>",
            "D": 30,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureWidthDefault": {
            "C": "Default size in pixels of the feature width<br>",
            "D": 3,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureHeightDefault": {
            "C": "Default size in pixels of the feature height<br>",
            "D": 14,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureSpliceStyle": {
            "C": "Default style for splicing in boxes<br>",
            "D": "rect",
            "M": "Genome Browser Features",
            "O": [
                "rect",
                "broken"
            ],
            "T": "string"
        },
        "featureTraceHeight": {
            "C": "Default size in pixels of the trace height<br>",
            "D": 40,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureTraceTrim": {
            "C": "Default triming for nucleotide values in the traces (expressed in percent)<br>",
            "D": 1,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureTracesShow": {
            "C": "Flag use to show traces<br>",
            "D": true,
            "M": "Genome Browser Features",
            "T": "boolean"
        },
        "featureQualityHeight": {
            "C": "Default size in pixels of the quality height<br>",
            "D": 14,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureQualityValues": {
            "C": "Flag use to show values for the quality<br>",
            "D": false,
            "M": "Genome Browser Features",
            "T": "boolean"
        },
        "featureQualityShow": {
            "C": "Flag use to show quality<br>",
            "D": true,
            "M": "Genome Browser Features",
            "T": "boolean"
        },
        "featureSignalToNoiseHeight": {
            "C": "Default size in pixels of the quality height<br>",
            "D": 14,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureSignalToNoiseValues": {
            "C": "Flag use to show values for the quality<br>",
            "D": false,
            "M": "Genome Browser Features",
            "T": "boolean"
        },
        "featureSignalToNoiseShow": {
            "C": "Flag use to show quality<br>",
            "D": true,
            "M": "Genome Browser Features",
            "T": "boolean"
        },
        "featureCoordinateHeight": {
            "C": "Default size in pixels of the coordinates height<br>",
            "D": 14,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureCoordinateShow": {
            "C": "Flag use to show coordinates<br>",
            "D": true,
            "M": "Genome Browser Features",
            "T": "boolean"
        },
        "featureTranslateHeight": {
            "C": "Default size in pixels of the translation height<br>",
            "D": 14,
            "M": "Genome Browser Features",
            "T": "integer"
        },
        "featureTranslateShow": {
            "C": "Flag use to show tranlation<br>",
            "D": true,
            "M": "Genome Browser Features",
            "T": "boolean"
        },
        "featureTypeDefault": {
            "C": "Default type for the feature in the genome browser<br>",
            "D": "line",
            "M": "Genome Browser Features",
            "O": [
                "box",
                "bar",
                "heatmap",
                "sequence",
                "triangle",
                "line"
            ],
            "T": "string"
        },
        "featureStaggered": {
            "C": "Flag use to stagger the features in the genome panel<br>",
            "D": false,
            "M": "Genome Browser Features",
            "T": "boolean"
        },
        "featureConfigurableProperties": {
            "C": "Feature configurable properties<br> @features {id:[string];Feature id;[],fill:[color];Color for the feature;[]}<br>",
            "D": [
                "id",
                "name",
                "label",
                "hideName",
                "fill",
                "outline",
                "dir",
                "showDir",
                "connect",
                "offset",
                "data",
                "subtype",
                "quality",
                "signalToNoise",
                "coordinate",
                "sequence",
                "trace",
                "gaps",
                "translate",
                "hide",
                "counter"
            ],
            "M": "Genome Browser Features",
            "T": "array"
        },
        "sequenceFontStyle": {
            "C": "Font style for the sequence<br>",
            "D": "",
            "M": "Genome Browser Sequences",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "sequenceColor": {
            "C": "Color for the text in sequence<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceFontSize": {
            "C": "Font size for the text in sequence. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the sequenceScaleFontFactor<br>",
            "D": 11,
            "M": "Genome Browser Sequences",
            "T": "integer"
        },
        "sequenceScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the sequence font size in the canvas<br>",
            "D": 1,
            "M": "Genome Browser Sequences",
            "T": "float"
        },
        "sequenceAlign": {
            "C": "Alignment (or position) for the sequence<br>",
            "D": "center",
            "M": "Genome Browser Sequences",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "sequenceBaseline": {
            "C": "Baseline (or reference line) for the sequence<br>",
            "D": "middle",
            "M": "Genome Browser Sequences",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "sequenceRotate": {
            "C": "Rotation in degrees for the sequence<br>",
            "D": 0,
            "M": "Genome Browser Sequences",
            "T": "integer"
        },
        "sequenceMargin": {
            "C": "Margin to pad or separate the characters in the sequence<br>",
            "D": 8,
            "M": "Genome Browser Sequences",
            "T": "float"
        },
        "sequenceFillColor": {
            "C": "Color for the background when showing sequnces in the box or sequence object in the Genome. The default is to use the background of the object. If specied a valid color then all the background of sequences will be uniform<br>",
            "D": false,
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceGAPColor": {
            "C": "Color for the deletions, insertions and gaps in the genome browser<br>",
            "D": "rgb(255,0,255)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceAColor": {
            "C": "Color for the adenines and alanines in the genome browser<br>",
            "D": "rgb(0,103,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceBColor": {
            "C": "Color for the degenerate C/G/T and asparagines in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceCColor": {
            "C": "Color for the cytosines and cysteins in the genome browser<br>",
            "D": "rgb(0,0,255)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceDColor": {
            "C": "Color for the degenerate A/G/T and aspartic acids in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceEColor": {
            "C": "Color for the glutamic acids in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceFColor": {
            "C": "Color for the phenylalanines in the genome browser<br>",
            "D": "rgb(0,0,255)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceGColor": {
            "C": "Color for the guanines and glycines in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceHColor": {
            "C": "Color for the degenerate A/C/T and histidines in the genome browser<br>",
            "D": "rgb(255,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceIColor": {
            "C": "Color for the isoleucines in the genome browser<br>",
            "D": "rgb(0,103,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceKColor": {
            "C": "Color for the degenerate G/T and lysines in the genome browser<br>",
            "D": "rgb(255,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceLColor": {
            "C": "Color for the leucines in the genome browser<br>",
            "D": "rgb(0,103,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceMColor": {
            "C": "Color for the degenerate A/G and methionines in the genome browser<br>",
            "D": "rgb(0,103,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceNColor": {
            "C": "Color for the degenerate A/C/G/T and asparagines in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequencePColor": {
            "C": "Color for the prolines in the genome browser<br>",
            "D": "rgb(255,165,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceQColor": {
            "C": "Color for the glutamines in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceRColor": {
            "C": "Color for the degenerate A/G and arginines in the genome browser<br>",
            "D": "rgb(255,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceSColor": {
            "C": "Color for the degenerate G/C and serines in the genome browser<br>",
            "D": "rgb(255,165,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceTColor": {
            "C": "Color for the thymidines and threonines in the genome browser<br>",
            "D": "rgb(255,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceUColor": {
            "C": "Color for the uracils in the genome browser<br>",
            "D": "rgb(255,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceVColor": {
            "C": "Color for the degenerate A/C/G and valines in the genome browser<br>",
            "D": "rgb(0,103,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceWColor": {
            "C": "Color for the degenerate A/T and tryptophans in the genome browser<br>",
            "D": "rgb(0,0,255)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceXColor": {
            "C": "Color for the any aminoacid code in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceYColor": {
            "C": "Color for the degenerate C/T and tyrosines in the genome browser<br>",
            "D": "rgb(0,0,255)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceZColor": {
            "C": "Color for the glutamines in the genome browser<br>",
            "D": "rgb(0,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceStartColor": {
            "C": "Color for the start codon in the genome browser<br>",
            "D": "rgb(0,204,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "sequenceEndColor": {
            "C": "Color for the end codon in the genome browser<br>",
            "D": "rgb(255,0,0)",
            "M": "Genome Browser Sequences",
            "T": "color"
        },
        "debug": {
            "C": "Flag to turn on alerts<br>",
            "D": false,
            "M": "Debug",
            "T": "boolean"
        },
        "debugWithArea": {
            "C": "Flag to render object areas when debugging<br>",
            "D": false,
            "M": "Debug",
            "T": "boolean"
        },
        "verbose": {
            "C": "Flag to turn on/off verbose<br>",
            "D": false,
            "M": "Debug",
            "T": "boolean"
        },
        "offline": {
            "C": "Flag to work offline<br>",
            "D": false,
            "M": "Debug",
            "T": "boolean"
        },
        "showVersion": {
            "C": "Flag to show/hide the version when mouse over top-left corner of the canvas<br>",
            "D": true,
            "M": "Debug",
            "T": "boolean"
        },
        "showCode": {
            "C": "Flag to show/hide the code for the canvas<br>",
            "D": false,
            "M": "Debug",
            "T": "boolean"
        },
        "codeType": {
            "C": "Output type for the JSON code<br>",
            "D": "params",
            "M": "Debug",
            "O": [
                "pretty",
                "compact",
                "tab",
                "params"
            ],
            "T": "string"
        },
        "disableEvents": {
            "C": "Flag to disable all events<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableCode": {
            "C": "Flag to disable showing the code<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableMenu": {
            "C": "Flag to disable showing the menu on right clicks<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableToolbar": {
            "C": "Flag to disable showing the toolbar<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableTooltipCallout": {
            "C": "Flag to disable the tooltip callouts<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableDataTable": {
            "C": "Flag to disable showing data table<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableChat": {
            "C": "Flag to disable chat with AI<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableDataFilters": {
            "C": "Flag to disable showing data filters<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableCustomizer": {
            "C": "Flag to disable the data explorer<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableCanvas": {
            "C": "Flag to disable all canvas events<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableDrag": {
            "C": "Flag to disable drg events in canvas<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableKeys": {
            "C": "Flag to disable key binding events. This prevent some default browser shortcuts and it is system specific. Please see the Event section bellow<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableShowShortcuts": {
            "C": "Flag to disable showing shortcuts<br>",
            "D": true,
            "M": "Events",
            "T": "boolean"
        },
        "disablePlusMinusKeys": {
            "C": "Flag to disable plus / minus key binding events<br>",
            "D": true,
            "M": "Events",
            "T": "boolean"
        },
        "disableUndoRedoKeys": {
            "C": "Flag to disable undo / redo key binding events<br>",
            "D": true,
            "M": "Events",
            "T": "boolean"
        },
        "disableDocument": {
            "C": "Flag to disable mousemove and mouseup in the document<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableWindow": {
            "C": "Flag to disable resizing the canvas when the window is resized. <br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableWheel": {
            "C": "Flag to disable wheel. <br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "disableBeacon": {
            "C": "Flag to disable beacon. <br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "playable": {
            "C": "Flag to make the plot playable if there are after rendering functions<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "resizable": {
            "C": "Flag to disable resizing the canvas by dragging the mouse over the edges<br>",
            "D": true,
            "M": "Events",
            "T": "boolean"
        },
        "resizableX": {
            "C": "Flag to disable resizing the width of the canvas by dragging the mouse over the edges<br>",
            "D": true,
            "M": "Events",
            "T": "boolean"
        },
        "resizableY": {
            "C": "Flag to disable resizing the height of canvas by dragging the mouse over the edges<br>",
            "D": true,
            "M": "Events",
            "T": "boolean"
        },
        "movable": {
            "C": "Flag to disable moving the canvas by dragging the mouse from the move image in the toolbar<br>",
            "D": true,
            "M": "Events",
            "T": "boolean"
        },
        "maxSubMenus": {
            "C": "Maximum number of submenus in the context menus<br>",
            "D": 25,
            "M": "Events",
            "T": "integer"
        },
        "showPrimaryMenus": {
            "C": "Flag to show/hide the primary menus in toolbar<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "maxItemMenuCheckbox": {
            "C": "Maximum number of items in a menu before it becomes a scroll box<br>",
            "D": 10,
            "M": "Events",
            "T": "integer"
        },
        "infoTimeOut": {
            "C": "Time in milliseconds to wait between updates for the mouse over info to show up<br>",
            "D": 3000,
            "M": "Events",
            "T": "integer"
        },
        "infoTimeIn": {
            "C": "Time in milliseconds to start showing info after a mouse over<br>",
            "D": 50,
            "M": "Events",
            "T": "integer"
        },
        "broadcast": {
            "C": "Flag to enable broadcasting to other canvasXpress objects in the page<br>",
            "D": true,
            "M": "Events",
            "T": "boolean"
        },
        "broadcastGroup": {
            "C": "Group Id for canvas to broadcast to. If not specified then it broadcasts to all canvases<br>",
            "D": false,
            "M": "Events",
            "T": "string"
        },
        "showMousePositionOnDrag": {
            "C": "Flag to show/hide the mouse position when dragging in relation to the zero coordinate (top-right) of the canvas<br>",
            "D": true,
            "M": "Events",
            "T": "boolean"
        },
        "toolbarType": {
            "C": "Toolbar type<br>",
            "D": "under",
            "M": "Events",
            "O": [
                "over",
                "under",
                "fixed"
            ],
            "T": "string"
        },
        "toolbarSize": {
            "C": "Height for the toolbar in graphs<br>",
            "D": 30,
            "M": "Events",
            "T": "integer"
        },
        "toolbarItems": {
            "C": "Array containing the items in the toolbar. All items included by default<br>",
            "D": [
                "Save",
                "Chat",
                "History",
                "Table",
                "Tabs",
                "Explore",
                "Lasso",
                "Customize",
                "Password",
                "Maximize"
            ],
            "M": "Events",
            "T": "array"
        },
        "lazyLoad": {
            "C": "Load canvas only if shown in viewport<br>",
            "D": false,
            "M": "Events",
            "T": "boolean"
        },
        "hoverTemplate": {
            "C": "HTML string to use as template for the hover info<br>",
            "D": false,
            "M": "Events",
            "T": "string"
        },
        "showAnimation": {
            "C": "Flag to show/hide the animation for the graphs<br>",
            "D": true,
            "M": "Animations and Visualization Transitions",
            "T": "boolean"
        },
        "showTransition": {
            "C": "Flag to show/hide the transitions for the graphs<br>",
            "D": false,
            "M": "Animations and Visualization Transitions",
            "T": "boolean"
        },
        "transitionStep": {
            "C": "Steps for transition<br>",
            "D": 30,
            "M": "Animations and Visualization Transitions",
            "T": "integer"
        },
        "transitionStaggering": {
            "C": "Steps for transitionioning data objects<br>",
            "D": 10,
            "M": "Animations and Visualization Transitions",
            "T": "integer"
        },
        "transitionFunction": {
            "C": "Easing function for the transition<br>",
            "D": "easeInOutQuad",
            "M": "Animations and Visualization Transitions",
            "O": [
                "linear",
                "easeInQuad",
                "easeOutQuad",
                "easeInOutQuad",
                "easeInCubic",
                "easeOutCubic",
                "easeInOutCubic",
                "easeInQuart",
                "easeOutQuart",
                "easeInOutQuart",
                "easeInQuint",
                "easeOutQuint",
                "easeInOutQuint"
            ],
            "T": "string"
        },
        "stripBackgroundColor": {
            "C": "Color for the layout label strip background<br>",
            "D": "rgba(255,255,255,0)",
            "M": "Combination Plots",
            "T": "color"
        },
        "stripBackgroundBorderColor": {
            "C": "Color for the border in layout label strip background<br>",
            "D": "rgba(0,0,0)",
            "M": "Combination Plots",
            "T": "color"
        },
        "stripBackgroundBorderSize": {
            "C": "Size for the border line in layout label strip background<br>",
            "D": 1,
            "M": "Combination Plots",
            "T": "float"
        },
        "stripBackgroundBorderLineType": {
            "C": "Type of line for the border in layout label strip background<br>",
            "D": "solid",
            "M": "Combination Plots",
            "O": [
                "rect",
                "solid",
                "spline",
                "dotted",
                "dashed",
                "dotdash",
                "longdash",
                "twodash"
            ],
            "T": "string"
        },
        "stripTextFontStyle": {
            "C": "Font style for the label strip text in layout graphs<br>",
            "D": "",
            "M": "Combination Plots",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "stripTextColor": {
            "C": "Color for the text in label strip text in layout graphs<br>",
            "D": "rgb(0,0,0)",
            "M": "Combination Plots",
            "T": "color"
        },
        "stripTextFontSize": {
            "C": "Font size for the text in label strip text in layout graphs. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the stripTextScaleFontFactor<br>",
            "D": 11,
            "M": "Combination Plots",
            "T": "integer"
        },
        "stripTextScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the label strip text in layout graphs font size in the canvas<br>",
            "D": 1,
            "M": "Combination Plots",
            "T": "float"
        },
        "stripTextAlign": {
            "C": "Alignment (or position) for the label strip text in layout graphs<br>",
            "D": "center",
            "M": "Combination Plots",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "stripTextBaseline": {
            "C": "Baseline (or reference line) for the label strip text in layout graphs<br>",
            "D": "middle",
            "M": "Combination Plots",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "stripTextRotate": {
            "C": "Rotation in degrees for the label strip text in layout graphs<br>",
            "D": 0,
            "M": "Combination Plots",
            "T": "integer"
        },
        "stripTextMargin": {
            "C": "Margin to pad or separate the characters in the label strip text in layout graphs<br>",
            "D": 5,
            "M": "Combination Plots",
            "T": "float"
        },
        "stripShow": {
            "C": "Flag to show/hide the the layout label strip<br>",
            "D": true,
            "M": "Combination Plots",
            "T": "boolean"
        },
        "stripThickness": {
            "C": "Thickness of the layout label strip<br>",
            "D": 30,
            "M": "Combination Plots",
            "T": "float"
        },
        "stripTextLines": {
            "C": "Lines for the layout label strip<br>",
            "D": 2,
            "M": "Combination Plots",
            "T": "integer"
        },
        "stripTextMaxLength": {
            "C": "Maximum length for the layout label strip. If longer, text will be ellipsed<br>",
            "D": 100,
            "M": "Combination Plots",
            "T": "integer"
        },
        "layoutTopology": {
            "C": "Topology of the canvas. Number of columns and rows separated by X. For example: 2X1, 1X3, etc<br>",
            "D": false,
            "M": "Combination Plots",
            "T": "string"
        },
        "layoutAdjust": {
            "C": "Flag to force recalculating the ranges in the axes when multiple graphs are displayed in the canvas<br>",
            "D": false,
            "M": "Combination Plots",
            "T": "boolean"
        },
        "layoutGlobalGroups": {
            "C": "Flag to force same groups across all layout plots<br>",
            "D": false,
            "M": "Combination Plots",
            "T": "boolean"
        },
        "layoutCollapse": {
            "C": "Flag to make layout graphs without any space in between<br>",
            "D": false,
            "M": "Combination Plots",
            "T": "boolean"
        },
        "layoutSpacing": {
            "C": "Spacing between layout graphs<br>",
            "D": 8,
            "M": "Combination Plots",
            "T": "integer"
        },
        "layoutType": {
            "C": "Type of layout to place the position for the labels in the trellis plot. Identify the axis that will be used to place the first segregating factor. rows will use the first segregating factor in the rows and the second in the columns. cols will use the first segregating factor in the columns and the second in the rows. wrap will wrap the segregating factors putting the sample factors in the columns<br>",
            "D": "wrap",
            "M": "Combination Plots",
            "O": [
                "wrap",
                "rows",
                "cols"
            ],
            "T": "string"
        },
        "layoutRemoveEmpty": {
            "C": "Flag to remove empty combinations in segregated layouts<br>",
            "D": true,
            "M": "Combination Plots",
            "T": "boolean"
        },
        "layoutCanvasCompartments": {
            "C": "Flag to draw lines around each graph in the layout in the canvas. Used only when debugging<br>",
            "D": false,
            "M": "Combination Plots",
            "T": "boolean"
        },
        "layoutLabelFontStyle": {
            "C": "Font style for the label text in layout graphs<br>",
            "D": "",
            "M": "Combination Plots",
            "O": [
                "",
                "bold",
                "italic",
                "bold italic"
            ],
            "T": "string"
        },
        "layoutLabelColor": {
            "C": "Color for the text in label text in layout graphs<br>",
            "D": "rgb(0,0,0)",
            "M": "Combination Plots",
            "T": "color"
        },
        "layoutLabelFontSize": {
            "C": "Font size for the text in label text in layout graphs. Be aware that auto scaling font must be turned off for this property to take effect. A more convenient way to modify the size is to use the layoutLabelScaleFontFactor<br>",
            "D": 11,
            "M": "Combination Plots",
            "T": "integer"
        },
        "layoutLabelScaleFontFactor": {
            "C": "Scaling factor used to increase or decrease the label text in layout graphs font size in the canvas<br>",
            "D": 1,
            "M": "Combination Plots",
            "T": "float"
        },
        "layoutLabelAlign": {
            "C": "Alignment (or position) for the label text in layout graphs<br>",
            "D": "center",
            "M": "Combination Plots",
            "O": [
                "left",
                "center",
                "right"
            ],
            "T": "string"
        },
        "layoutLabelBaseline": {
            "C": "Baseline (or reference line) for the label text in layout graphs<br>",
            "D": "middle",
            "M": "Combination Plots",
            "O": [
                "top",
                "middle",
                "bottom"
            ],
            "T": "string"
        },
        "layoutLabelRotate": {
            "C": "Rotation in degrees for the label text in layout graphs<br>",
            "D": 0,
            "M": "Combination Plots",
            "T": "integer"
        },
        "layoutLabelMargin": {
            "C": "Margin to pad or separate the characters in the label text in layout graphs<br>",
            "D": 5,
            "M": "Combination Plots",
            "T": "float"
        },
        "layoutConfig": {
            "C": "Array of object to assign visualization configurations to each layout<br>",
            "D": [],
            "M": "Combination Plots",
            "T": "array"
        },
        "layoutAxis": {
            "C": "Flag to indicated whether to print axes values when multiple graphs are displayed in the canvas. The possible values are: 1: horizontal, 2: vertical, 3: both<br>",
            "D": 3,
            "M": "Combination Plots",
            "O": [
                1,
                2,
                3
            ],
            "T": "string"
        },
        "imageTimeOut": {
            "C": "Time in milliseconds to wait to load images<br>",
            "D": 1000,
            "M": "Images",
            "T": "integer"
        },
        "imageMaxTries": {
            "C": "Maximum times to try to load images. Used to calculate the timeout which will be imageTimeOut / imageTries which will be 100ms by default<br>",
            "D": 10,
            "M": "Images",
            "T": "integer"
        },
        "remoteService": {
            "C": "Url used to obtain data remotely thorugh a web service or directly from a file. If the remote service is a file then it expects a json file with a two dimensional array. Each of the arrays should have a key (which will be used in a drop down menu) and a value to point to a url where to get the data. If the remote service is a web service it expects a canvasXpress object. The default parameters for web services are index (to identify the current record number) and dir (to identify the direction; it could be either next or prev)<br>",
            "D": false,
            "M": "Remote Procedures",
            "T": "url"
        },
        "remoteParams": {
            "C": "Object to hold additional parameters used to obtain data remotely. The target property will be always added to the method as well as the direction [next|prev]<br>",
            "D": {},
            "M": "Remote Procedures",
            "T": "object"
        },
        "remoteDirection": {
            "C": "Direction parameter used to obtain data remotely<br>",
            "D": "next",
            "M": "Remote Procedures",
            "O": [
                "next",
                "prev"
            ],
            "T": "string"
        },
        "remoteAutoPlay": {
            "C": "Flag to automatically iterate over remote data sets<br>",
            "D": false,
            "M": "Remote Procedures",
            "T": "boolean"
        },
        "remoteAutoPlayDelay": {
            "C": "Time in milliseconds to wait between iterations while automatically going over remote data sets<br>",
            "D": 3000,
            "M": "Remote Procedures",
            "T": "integer"
        },
        "remoteParamOverride": {
            "C": "Flag to override parameters to maintain the state of the graphs when using remote services<br>",
            "D": true,
            "M": "Remote Procedures",
            "T": "boolean"
        },
        "remoteTransitionEffect": {
            "C": "Effect for the remote transitions<br>",
            "D": "slide",
            "M": "Remote Procedures",
            "O": [
                "none",
                "slide",
                "fade"
            ],
            "T": "string"
        },
        "remoteAutoSize": {
            "C": "Flag to adjust remote graph to current canvas size<br>",
            "D": true,
            "M": "Remote Procedures",
            "T": "boolean"
        },
        "loadRDatasets": {
            "C": "Flag to load R datasets from Github<br>",
            "D": false,
            "M": "R",
            "T": "boolean"
        },
        "llmServiceURL": {
            "C": "URL for LLM service<br>",
            "D": "https://www.canvasxpress.org/cgi-bin/services.pl",
            "M": "LLM",
            "T": "url"
        },
        "llmModel": {
            "C": "Large language models are models that use deep learning algorithms to process large amounts of text. They are designed to understand the structure of natural language and to pick out meanings and relationships between words. These models are capable of understanding context, identifying and extracting information from text, and making predictions about a text’s content<br>",
            "D": "gemini-1.5-flash",
            "M": "LLM",
            "O": [
                "gemini-1.5-flash",
                "gemini-1.5-pro",
                "gpt-4",
                "gpt-4-32k",
                "gpt-35-turbo-16k"
            ],
            "T": "string"
        },
        "llmTopp": {
            "C": "A sampling technique with temperature, called nucleus sampling, where you can control how deterministic the model is. If you are looking for exact and factual answers keep this low. If you are looking for more diverse responses, increase to a higher value. If you use Top P it means that only the tokens comprising the top_p probability mass are considered for responses, so a low top_p value selects the most confident responses. This means that a high top_p value will enable the model to look at more possible words, including less likely ones, leading to more diverse outputs<br>",
            "D": 1,
            "M": "LLM",
            "T": "float"
        },
        "llmTemperature": {
            "C": "The lower the temperature, the more deterministic the results in the sense that the highest probable next token is always picked. Increasing temperature could lead to more randomness, which encourages more diverse or creative outputs. You are essentially increasing the weights of the other possible tokens. In terms of application, you might want to use a lower temperature value for tasks like fact-based QA to encourage more factual and concise responses. For poem generation or other creative tasks, it might be beneficial to increase the temperature value<br>",
            "D": 0,
            "M": "LLM",
            "T": "float"
        },
        "llmPresencePenalty": {
            "C": "The presence penalty also applies a penalty on repeated tokens but, unlike the frequency penalty, the penalty is the same for all repeated tokens. A token that appears twice and a token that appears 10 times are penalized the same. This setting prevents the model from repeating phrases too often in its response. If you want the model to generate diverse or creative text, you might want to use a higher presence penalty. Or, if you need the model to stay focused, try using a lower presence penalty<br>",
            "D": 0,
            "M": "LLM",
            "T": "float"
        },
        "llmFrequencyPenalty": {
            "C": "The frequency penalty applies a penalty on the next token proportional to how many times that token already appeared in the response and prompt. The higher the frequency penalty, the less likely a word will appear again. This setting reduces the repetition of words in the model response by giving tokens that appear more a higher penalty<br>",
            "D": 0,
            "M": "LLM",
            "T": "float"
        },
        "llmMaxNewTokens": {
            "C": "The number of tokens the model generates by adjusting the max length. Specifying a max length helps you prevent long or irrelevant responses and control costs<br>",
            "D": 1250,
            "M": "LLM",
            "T": "float"
        },
        "llmBehaviour": {
            "C": "Behaviour for the LLM when retriving new visualization<br>",
            "D": "append",
            "M": "LLM",
            "O": [
                "append",
                "update"
            ],
            "T": "string"
        },
        "llmIconTransparency": {
            "C": "Transparency for the LLM icon<br>",
            "D": 1,
            "M": "LLM",
            "T": "float"
        },
        "llmIconSize": {
            "C": "Size for the LLM icon<br>",
            "D": 50,
            "M": "LLM",
            "T": "integer"
        },
        "llmPrompt": {
            "C": "Default value for the prompt<br>",
            "D": false,
            "M": "LLM",
            "T": "string"
        },
        "prompt": {
            "C": "String use to call the LLM from initialization<br>",
            "D": false,
            "M": "LLM",
            "T": "string"
        },
        "llmUseDev": {
            "C": "Flag to indicate to use dev service<br>",
            "D": false,
            "M": "LLM",
            "T": "boolean"
        },
        "llmStack": {
            "C": "Array to cache LLM questions<br>",
            "D": [],
            "M": "LLM",
            "T": "array"
        },
        "llmHeader": {
            "C": "Header as array<br>",
            "D": [],
            "M": "LLM",
            "T": "array"
        },
        "llmUseCopilot": {
            "C": "Flag to indicate to use copilot to help with the prompt<br>",
            "D": true,
            "M": "LLM",
            "T": "boolean"
        },
        "llmCodeExamplesShow": {
            "C": "Flag to show/hide the Flag to show the LLM code examples<br>",
            "D": false,
            "M": "LLM",
            "T": "boolean"
        },
        "loadLLMDatasets": {
            "C": "Flag to load the LLM datasets from Website<br>",
            "D": false,
            "M": "LLM",
            "T": "boolean"
        },
        "llmCodeExamples": {
            "C": "Number of example to generate<br>",
            "D": 80,
            "M": "LLM",
            "T": "integer"
        },
        "llmCodeMaxSentences": {
            "C": "Maximum number of sentences to use in each example<br>",
            "D": 4,
            "M": "LLM",
            "T": "integer"
        },
        "dataUIStyle": {
            "C": "Style for the UI<br>",
            "D": "modern",
            "M": "Data UI Widgets",
            "O": [
                false,
                "stripped",
                "modern",
                "old",
                "bms"
            ],
            "T": "string"
        },
        "widgetsStyle": {
            "C": "Style for the UI<br>",
            "D": "modern",
            "M": "Data UI Widgets",
            "O": [
                false,
                "stripped",
                "modern",
                "old",
                "bms",
                "custom"
            ],
            "T": "string"
        },
        "widgetsBackgroundColor": {
            "C": "Color for the background all the UI widgets. It only applied if the dataUIStyle is set to false<br>",
            "D": "rgba(255, 255, 255, 0.95)",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "widgetsBaseColor": {
            "C": "Color for the elements in all the UI widgets. It only applied if the dataUIStyle is set to false<br>",
            "D": "rgb(83, 105, 255)",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "widgetsBorderColor": {
            "C": "Color for the border of all elements in all the UI widgets. It only applied if the dataUIStyle is set to false<br>",
            "D": "rgb(83, 105, 255)",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "widgetsHoverTransparency": {
            "C": "Transparency for the elements in all the UI widgets when mouse overs. It only applied if the dataUIStyle is set to false<br>",
            "D": 0.2,
            "M": "Data UI Widgets",
            "T": "float"
        },
        "widgetsAccentColor": {
            "C": "Color for the accent elements in all the UI widgets. It only applied if the dataUIStyle is set to false<br>",
            "D": "rgba(83, 105, 255, 0.1)",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "widgetsContrastColor": {
            "C": "Color for the contrast elements in all the UI widgets. It only applied if the dataUIStyle is set to false<br>",
            "D": "rgb(83, 105, 255)",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "widgetsStripedColor": {
            "C": "Color for the stripe elements in the data table<br>",
            "D": "rgba(83, 105, 255, 0.05)",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "widgetsFontSize": {
            "C": "Font size for the elements in all the UI widgets. It only applied if the dataUIStyle is set to false<br>",
            "D": 12,
            "M": "Data UI Widgets",
            "T": "integer"
        },
        "widgetsFontColor": {
            "C": "Color for the the elements in all the UI widgets. It only applied if the dataUIStyle is set to false<br>",
            "D": "rgb(34, 34, 34)",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "widgetsIconClsAColor": {
            "C": "Color for the class-a widget icons<br>",
            "D": "#5369ff",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "widgetsIconClsBColor": {
            "C": "Color for the class-b widget icons<br>",
            "D": "#292929",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "widgetsIconClsCColor": {
            "C": "Color for the class-x widget icons<br>",
            "D": "#ffffff",
            "M": "Data UI Widgets",
            "T": "color"
        },
        "maxDataCustomizerEntries": {
            "C": "Maximum number of samples or variables to display in the data customizer<br>",
            "D": 10000,
            "M": "Data Customizer",
            "T": "integer"
        },
        "customizerSize": {
            "C": "Size for the customizer. Requires re-opening of customizer<br>",
            "D": "medium",
            "M": "Data Customizer",
            "O": [
                "xsmall",
                "small",
                "medium",
                "large"
            ],
            "T": "string"
        },
        "customizerEntriesAsList": {
            "C": "Flag to show entries in scrolling widgets as text. The default is to show them as icons-like<br>",
            "D": true,
            "M": "Data Customizer",
            "T": "boolean"
        },
        "customizerGraphMaximize": {
            "C": "Flag to maximize the graph when the customizer is called<br>",
            "D": false,
            "M": "Data Customizer",
            "T": "boolean"
        },
        "skipConfigurableProperties": {
            "C": "Flag to indicate to exclude configurable parameters in the data table and the data filters in Networks and Genome Browser<br>",
            "D": true,
            "M": "Data Table/Filter",
            "T": "boolean"
        },
        "nodesProperties": {
            "C": "Two dimensional array with object properties not at the root level for the nodes in the Network graph to include in the Data table and the data filter<br>",
            "D": [],
            "M": "Data Table/Filter",
            "T": "array"
        },
        "edgesProperties": {
            "C": "Two dimensional array with object properties not at the root level for the edges in the Network graph to include in the Data table and the data filter<br>",
            "D": [],
            "M": "Data Table/Filter",
            "T": "array"
        },
        "featuresProperties": {
            "C": "Two dimensional array with object properties not at the root level for the features in the Genome graph to include in the Data table and the data filter<br>",
            "D": [],
            "M": "Data Table/Filter",
            "T": "array"
        },
        "dataFilterWidth": {
            "C": "Size in pixels for the data filters<br>",
            "D": 300,
            "M": "Data Filters",
            "T": "integer"
        },
        "filterType": {
            "C": "Type for the filter. Can be and or or<br>",
            "D": "and",
            "M": "Data Filters",
            "O": [
                "and",
                "or"
            ],
            "T": "string"
        },
        "filterMode": {
            "C": "Mode for the legend filters. Can be set to hide the data using transparency or to color the data points with the missingDataColor<br>",
            "D": "hide",
            "M": "Data Filters",
            "O": [
                "hide",
                "color"
            ],
            "T": "string"
        },
        "filterSkipNullKeys": {
            "C": "Flag to indicate to bypass filtering when a key is non existent in the data objects<br>",
            "D": false,
            "M": "Data Filters",
            "T": "boolean"
        },
        "filterSkipNullValues": {
            "C": "Flag to indicate to bypass filtering when a value is null<br>",
            "D": false,
            "M": "Data Filters",
            "T": "boolean"
        },
        "filterVarBy": {
            "C": "Filter variables by their annotation included in the data.z object used in one dimensional plots. Used in the CanvasXpress UIs<br>",
            "D": {
                "cases": [],
                "comp": [],
                "op": [],
                "type": [],
                "value": []
            },
            "M": "Data Filters",
            "T": "filter"
        },
        "filterSmpBy": {
            "C": "Filter samples by their annotation included in the data.x object used in one dimensional plots. Used in the CanvasXpress UIs<br>",
            "D": {
                "cases": [],
                "comp": [],
                "op": [],
                "type": [],
                "value": []
            },
            "M": "Data Filters",
            "T": "filter"
        },
        "filterNodeBy": {
            "C": "Filter nodes by their properties used in network graphs. Used in the CanvasXpress UIs<br>",
            "D": {
                "cases": [],
                "comp": [],
                "op": [],
                "type": [],
                "value": []
            },
            "M": "Data Filters",
            "T": "filter"
        },
        "filterEdgeBy": {
            "C": "Filter edges by their properties used in network graphs. Used in the CanvasXpress UIs<br>",
            "D": {
                "cases": [],
                "comp": [],
                "op": [],
                "type": [],
                "value": []
            },
            "M": "Data Filters",
            "T": "filter"
        },
        "filterFeatureBy": {
            "C": "Filter features by their properties used in genome browser. Used in the CanvasXpress UIs<br>",
            "D": {
                "cases": [],
                "comp": [],
                "op": [],
                "type": [],
                "value": []
            },
            "M": "Data Filters",
            "T": "filter"
        },
        "filterDataBy": {
            "C": "Filter data by their value in the data object used in oncoprints. Used in the CanvasXpress UIs<br>",
            "D": {
                "cases": [],
                "comp": [],
                "op": [],
                "type": [],
                "value": []
            },
            "M": "Data Filters",
            "T": "filter"
        },
        "filterData": {
            "C": "Array of arrays with filtering functions. Each function takes four parameters. The fisrt parameter is the type of filter. This could either of: var, smp, series, meta, x, y, z, data, network or guess (if not known). The second parameter is the key that usually correspond to a sample or variable factor name in the x or z object of the data. The third parameter is the operator to use which is one of: >, >=, <, <=, between, exact, like or not like and the four parameter is an array with the value or values that are needed for the corresponding evaluation. Here are some examples: [ x, class, exact, [ A ] ], [ guess, dose, between, [ 0.5, 2 ] ]<br>",
            "D": [],
            "M": "Data Filters",
            "T": "array"
        },
        "dataTableTransposed": {
            "C": "Flag to transpose the data in the data table<br>",
            "D": true,
            "M": "Data Table",
            "T": "boolean"
        },
        "maxRows": {
            "C": "Maximum number of rows to display in the data table<br>",
            "D": 10,
            "M": "Data Table",
            "T": "integer"
        },
        "maxCols": {
            "C": "Maximum number of columns to display in the data table<br>",
            "D": 10,
            "M": "Data Table",
            "T": "integer"
        },
        "colWidth": {
            "C": "Number of pixels for the width of cells in the data table<br>",
            "D": 100,
            "M": "Data Table",
            "T": "integer"
        },
        "rowHeight": {
            "C": "Number of pixels for the height of cells in the data table<br>",
            "D": 30,
            "M": "Data Table",
            "T": "integer"
        },
        "rowLines": {
            "C": "Number of lines in cells in the data table<br>",
            "D": 1,
            "M": "Data Table",
            "T": "integer"
        },
        "refresehDataTableOnDraw": {
            "C": "Flag to indicate to refresh data after drawing the plot<br>",
            "D": false,
            "M": "Data Table",
            "T": "boolean"
        },
        "showDataTableOnSelect": {
            "C": "Flag to show/hide the Flag to indicate to show data after selecting data in the plot<br>",
            "D": false,
            "M": "Data Table",
            "T": "boolean"
        },
        "networkShowDataTable": {
            "C": "Show nodes or edges on data table<br>",
            "D": "nodes",
            "M": "Data Table",
            "O": [
                "nodes",
                "edges"
            ],
            "T": "string"
        },
        "colorDataTableTransparency": {
            "C": "Transparency for the background of the data table cells if colored<br>",
            "D": 0.5,
            "M": "Data Table",
            "T": "float"
        },
        "dataTableImage": {
            "C": "Image to brand the data table<br>",
            "D": false,
            "M": "Data Table",
            "T": "string"
        },
        "dataTableRowProperties": {
            "C": "Properties for the rows in the data table. Key is the variable name and the value is the height in pixels<br>",
            "D": {},
            "M": "Data Table",
            "T": "object"
        },
        "dataTableColProperties": {
            "C": "Properties for the cols in the data table. Key is the sample name and the value is the width in pixels<br>",
            "D": {},
            "M": "Data Table",
            "T": "object"
        },
        "dataTableColHide": {
            "C": "Array to store the columns to hide in the data table<br>",
            "D": [],
            "M": "Data Table",
            "T": "array"
        },
        "dataTableColOrder": {
            "C": "Array to store the column sorting for the data table. It only applies to meta data and exclude variables or samples. Those not included willl be placed last<br>",
            "D": [],
            "M": "Data Table",
            "T": "array"
        },
        "dataTableRowOrder": {
            "C": "Array to store the row sorting for the data table. It only applies to meta data and exclude variables or samples. Those not included willl be placed last<br>",
            "D": [],
            "M": "Data Table",
            "T": "array"
        },
        "colorDataTable": {
            "C": "Flag to color the data table<br>",
            "D": false,
            "M": "Data Table",
            "T": "boolean"
        },
        "dataTableBorders": {
            "C": "data table borders<br>",
            "D": "rows",
            "M": "Data Table",
            "O": [
                "all",
                "none",
                "rows",
                "cols"
            ],
            "T": "string"
        },
        "dataTableBorderColor": {
            "C": "Color for the border of the data table cells<br>",
            "D": "rgb(204, 204, 204)",
            "M": "Data Table",
            "T": "color"
        },
        "dataTableHeaderBordersShow": {
            "C": "Flag to show/hide the Flag to show the borders in the data table headers. The color of the border will be the same as that used for the base color of the UI widgets<br>",
            "D": true,
            "M": "Data Table",
            "T": "boolean"
        },
        "dataTableStripeShow": {
            "C": "Flag to show/hide the Flag to show the stripes in the data table rows<br>",
            "D": true,
            "M": "Data Table",
            "T": "boolean"
        },
        "dataTableStripeTransparency": {
            "C": "Transparency for the stripes in the data table using the base color for the UI widgets<br>",
            "D": 0.05,
            "M": "Data Table",
            "T": "float"
        },
        "dataTableZeroHeader": {
            "C": "Name for the first column in the data table<br>",
            "D": false,
            "M": "Data Table",
            "T": "string"
        },
        "dataTableCellLinkUnderline": {
            "C": "Flag to underline url or anchor links in cells in the data table<br>",
            "D": true,
            "M": "Data Table",
            "T": "boolean"
        }
    }
}